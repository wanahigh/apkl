{"version":3,"sources":["meteor://ðŸ’»app/packages/zodiase:mdl/setup.js","meteor://ðŸ’»app/packages/zodiase:mdl/check.js","meteor://ðŸ’»app/packages/zodiase:mdl/patch/autoUpgrade.js"],"names":["Package","MDl","Meteor","isClient","startup","check","Match","ObjectIncluding","Optional","Object","settings","console","warn","bind","MutationObserver","window","WebKitMutationObserver","ObjectHasOwnProperty","prototype","hasOwnProperty","AutoUpgrade","handleMutation","mutation","type","addedNodes","length","target","Element","componentHandler","upgradeElements","Error","_upgradeStyle","_upgradeBehavior","_observer","onMutationObserved","mutations","observer","setUpgradeStyle","style","call","upgradeBehaviors","disconnect","observe","document","body","observeConfig","getUpgradeStyle","upgradeAllRegistered","i","n","childList","attributes","characterData","subtree","upgradeStyle","patches","autoUpgrade"],"mappings":"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","file":"/packages/zodiase_mdl.js","sourcesContent":["// This file prepares variables for the rest of the package.\nif (typeof Package !== 'undefined') {\n  // Add an alias. \"Lite\" is lowercase because I think it's not at the same level at \"Material Design\".\n  /*global MDl:true*/\n  MDl = {};\n}\n","// When the document is loaded, check if MDl is correctly initialized.\nif (Meteor.isClient) {\n  Meteor.startup(function () {\n    check(this, Match.ObjectIncluding({\n      \"settings\": Match.Optional(Object),\n      \"componentHandler\": Match.Optional(Object)\n    }), 'Package is corrupted.');\n\n    if (!this.settings) {\n      console.warn(\"MDl disabled. Create a file named 'zodiase-mdl.json' at the root of the app to enable.\");\n    }\n  }.bind(MDl));\n}\n","// This patch is used for auto-upgrading when DOM is changed by blaze.\n// Well, maybe not just blaze.\n// But when you are manipulating the DOM by yourself, you should remember to upgrade.\n//\n// Browser compatibility: check https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n// also http://caniuse.com/#search=MutationObserver\n\n/*global MDl:true*/\n\nif (Meteor.isClient) {\n  const MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\n  const ObjectHasOwnProperty = Object.prototype.hasOwnProperty;\n\n  class AutoUpgrade {\n    static handleMutation(mutation) {\n      switch (mutation.type) {\n        case 'attributes':\n          //! Try to upgrade this element.\n          break;\n        case 'characterData':\n          // Ignore character changes.\n          break;\n        case 'childList':\n          // Upgrade the new children.\n          if (mutation.addedNodes.length > 0 && mutation.target instanceof Element) {\n            MDl.componentHandler.upgradeElements(mutation.target);\n          }\n          break;\n        default:\n          throw new Error('Invalid type of mutation.');\n          break;\n      }\n    }\n    constructor(MutationObserver) {\n      this._upgradeStyle = false;\n      this._upgradeBehavior = null;\n      this._observer = new MutationObserver(this.onMutationObserved.bind(this));\n    }\n    onMutationObserved(mutations, observer) {\n      if (this._upgradeBehavior) {\n        this._upgradeBehavior(mutations, observer);\n      }\n    }\n    setUpgradeStyle(style) {\n      if (ObjectHasOwnProperty.call(AutoUpgrade.upgradeBehaviors, style)) {\n        this._upgradeStyle = style;\n        this._upgradeBehavior = AutoUpgrade.upgradeBehaviors[style];\n\n        if (style === 'none') {\n          this._observer.disconnect();\n        } else {\n          this._observer.observe(document.body, AutoUpgrade.observeConfig);\n        }\n      } else {\n        throw new Error(\"Invalid upgrade style.\");\n      }\n    }\n    getUpgradeStyle() {\n      return this._upgradeStyle;\n    }\n  }\n  AutoUpgrade.upgradeBehaviors = {\n    \"fullUpgrade\": function (mutations, observer) {\n      MDl.componentHandler.upgradeAllRegistered();\n    },\n    \"mutationOnly\": function (mutations, observer) {\n      for (let i = 0, n = mutations.length; i < n; i++) {\n        AutoUpgrade.handleMutation(mutations[i]);\n      }\n    },\n    \"none\": function (mutations, observer) {}\n  };\n  AutoUpgrade.observeConfig = {\n    childList: true,\n    attributes: true,\n    characterData: false,\n    subtree: true\n    //attributeOldValue: false,\n    //characterDataOldValue: false\n    //attributeFilter: []\n  };\n\n  Meteor.startup(function () {\n    // Check if settings is loaded.\n    if (typeof this.settings === 'undefined') {\n      return;\n    }\n    //else\n\n    // Read settings.\n    let upgradeStyle = this.settings.patches.autoUpgrade;\n    // If upgradeStyle is `false`, disable everything.\n    if (upgradeStyle === false) {\n      this.autoUpgrade = null;\n    } else {\n      // If MutationObserver is not available on this platform, there's little we can do.\n      if (!MutationObserver) {\n        throw new Error(\"MDl AutoUpgrade doesn't support your current client environment. Please disable it.\");\n      } else {\n        this.autoUpgrade = new AutoUpgrade(MutationObserver);\n        this.autoUpgrade.setUpgradeStyle(upgradeStyle);\n      }\n    }\n  }.bind(MDl));\n}\n"]}