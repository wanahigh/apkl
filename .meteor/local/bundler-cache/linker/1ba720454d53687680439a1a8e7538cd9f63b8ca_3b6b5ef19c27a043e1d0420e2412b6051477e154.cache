[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar _ = Package.underscore._;\n\n/* Package-scope variables */\nvar BaseModel, Model;\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/channikhabra_stupid-models/packages/channikhabra_stupid-models.js                                        //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n(function () {                                                                                                       // 1\n                                                                                                                     // 2\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////    // 3\n//                                                                                                             //    // 4\n// packages/channikhabra:stupid-models/lib/base_model.js                                                       //    // 5\n//                                                                                                             //    // 6\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////    // 7\n                                                                                                               //    // 8\nBaseModel = {                                                                                                  // 1  // 9\n  errors: {},                                                                                                  // 2  // 10\n                                                                                                               // 3  // 11\n  db: function() {                                                                                             // 4  // 12\n    if(this._local) return this.collection._collection;                                                        // 5  // 13\n    else return this.collection;                                                                               // 6  // 14\n  },                                                                                                           // 7  // 15\n  persist: function() {                                                                                        // 8  // 16\n    this.db().remove(this._id);                                                                                // 9  // 17\n    delete this._local;                                                                                        // 10\n    delete this._id;                                                                                           // 11\n    this.save();                                                                                               // 12\n  },                                                                                                           // 13\n  store: function() {                                                                                          // 14\n    this._local = true;                                                                                        // 15\n    this.save();                                                                                               // 16\n  },                                                                                                           // 17\n  save: function(cb) {                                                                                         // 18\n    var attributes = this.getMongoAttributes();                                                                // 19\n    return this._upsert(attributes, cb);                                                                       // 20\n  },                                                                                                           // 21\n  _upsert: function(attributes, cb) {                                                                          // 22\n    if(this._id) return this.update(attributes, cb);                                                           // 23\n    else return this.insert(attributes, cb);                                                                   // 24\n  },                                                                                                           // 25\n  insert: function(attributes, cb) {                                                                           // 26\n    attributes = this.prepareDefaults(attributes);                                                             // 27\n    this._id = this.db().insert(attributes, cb);                                                               // 28\n    this.refresh();                                                                                            // 29\n                                                                                                               // 30\n    return this._id;                                                                                           // 31\n  },                                                                                                           // 32\n  update: function(attributes, cb) {                                                                           // 33\n    this.db().update(this._id, {$set: attributes}, cb);                                                        // 34\n    this.refresh();                                                                                            // 35\n                                                                                                               // 36\n    return this._id;                                                                                           // 37\n  },                                                                                                           // 38\n  increment: function(attVal) {                                                                                // 39\n    this.db().update(this._id, {$inc: attVal});                                                                // 40\n    this.refresh();                                                                                            // 41\n                                                                                                               // 42\n    return this._id;                                                                                           // 43\n  },                                                                                                           // 44\n  push: function(attVal) {                                                                                     // 45\n    this.db().update(this._id, {$push: attVal});                                                               // 46\n  },                                                                                                           // 47\n  pop: function(att) {                                                                                         // 48\n    this.db().update(this._id, {$pop: {att: 1}});                                                              // 49\n  },                                                                                                           // 50\n  shift: function(att) {                                                                                       // 51\n    this.db().update(this._id, {$pop: {att: -1}});                                                             // 52\n  },                                                                                                           // 53\n  remove: function() {                                                                                         // 54\n    this.db().remove(this._id);                                                                                // 55\n  },                                                                                                           // 56\n  refresh: function(){                                                                                         // 57\n    this.extend(this.getMongoAttributes(this.collection().findOne(this._id)));                                 // 58\n  },                                                                                                           // 59\n  prepareDefaults: function(attributes){                                                                       // 60\n    var object = {};                                                                                           // 61\n    _.extend(object, this.defaultValues, attributes);                                                          // 62\n    return object;                                                                                             // 63\n  },                                                                                                           // 64\n  getMongoAttributes: function(includeId) {                                                                    // 65\n    var mongoValues = {};                                                                                      // 66\n    for(var prop in this) {                                                                                    // 67\n      if(this.isMongoAttribute(prop)) mongoValues[prop] = this[prop];                                          // 68\n    }                                                                                                          // 69\n                                                                                                               // 70\n    if(includeId) mongoValues._id = this._id;                                                                  // 71\n                                                                                                               // 72\n    return mongoValues;                                                                                        // 73\n  },                                                                                                           // 74\n  isMongoAttribute: function(prop) {                                                                           // 75\n    if(_.isFunction(this[prop])) return false;                                                                 // 76\n    if(prop == '_id' || prop == 'errors' || prop == 'defaultValues' || prop == 'collectionName') return false; // 77\n    return true;                                                                                               // 78\n  },                                                                                                           // 79\n  time: function(field) {                                                                                      // 80\n    return moment(this[field]).format(\"MM/DD - h:mma\");                                                        // 81\n  },                                                                                                           // 82\n  extend: function(doc) {                                                                                      // 83\n    doc = doc != undefined && _.isObject(doc) ? doc : {};                                                      // 84\n                                                                                                               // 85\n    _.extend(this, doc);                                                                                       // 86\n  },                                                                                                           // 87\n  delete: function(noAfterDelete) {                                                                            // 88\n    this.db().remove(this._id);                                                                                // 89\n    if(this.afterDelete && !noAfterDelete) this.afterDelete();                                                 // 90\n  }                                                                                                            // 91\n};                                                                                                             // 92\n                                                                                                               // 93\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////    // 102\n                                                                                                                     // 103\n}).call(this);                                                                                                       // 104\n                                                                                                                     // 105\n                                                                                                                     // 106\n                                                                                                                     // 107\n                                                                                                                     // 108\n                                                                                                                     // 109\n                                                                                                                     // 110\n(function () {                                                                                                       // 111\n                                                                                                                     // 112\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////    // 113\n//                                                                                                             //    // 114\n// packages/channikhabra:stupid-models/lib/model_factory.js                                                    //    // 115\n//                                                                                                             //    // 116\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////    // 117\n                                                                                                               //    // 118\n/**                                                                                                            // 1  // 119\n * Model factory which should be used for creating new models                                                  // 2  // 120\n */                                                                                                            // 3  // 121\n                                                                                                               // 4  // 122\nfunction SmartModel() {};                                                                                      // 5  // 123\nSmartModel.prototype = BaseModel;                                                                              // 6  // 124\n                                                                                                               // 7  // 125\nModel = function(collection) {                                                                                 // 8  // 126\n  function ChildModel() {}; //by using 'new' below, we avoid adding methods to BaseModel object                // 9  // 127\n  ChildModel.prototype = new SmartModel; //because a new instance is created, creating a new object            // 10\n  //while still maintaining the link to inherited methods. This is the trick to avoiding conflicts.            // 11\n                                                                                                               // 12\n                                                                                                               // 13\n  ChildModel.extend = function(methods) {                                                                      // 14\n    _.extend(ChildModel.prototype, methods, methods.defaultValues); //methods not added 2 BaseModel            // 15\n    ChildModel.prototype.defaultValues = null;                                                                 // 16\n    ChildModel.prototype.collection = collection;                                                              // 17\n  };                                                                                                           // 18\n                                                                                                               // 19\n  collection._transform = function(doc) {                                                                      // 20\n    var instance = new ChildModel; //instance methods will be linked to ChildModel's prototype                 // 21\n    _.extend(instance, doc); //shared ChildModel.prototype will not be overwritten because of 'new'            // 22\n    return instance; //however, chain lookup will be efficiently utilized if property not found ;)             // 23\n  };                                                                                                           // 24\n                                                                                                               // 25\n  return  ChildModel; //usage: 'new ChildModel'; inherited methods linked via prototype above                  // 26\n};                                                                                                             // 27\n                                                                                                               // 28\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////    // 147\n                                                                                                                     // 148\n}).call(this);                                                                                                       // 149\n                                                                                                                     // 150\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['channikhabra:stupid-models'] = {}, {\n  Model: Model\n});\n\n})();\n","servePath":"/packages/channikhabra_stupid-models.js"}]