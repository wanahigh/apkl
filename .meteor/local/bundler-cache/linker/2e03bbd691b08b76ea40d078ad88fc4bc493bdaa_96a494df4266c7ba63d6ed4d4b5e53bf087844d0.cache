[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\nvar _ = Package.underscore._;\nvar MongoInternals = Package.mongo.MongoInternals;\nvar Mongo = Package.mongo.Mongo;\nvar Model = Package['channikhabra:stupid-models'].Model;\n\n/* Package-scope variables */\nvar Terminal, TerminalBufferColl, TerminalBuffer, TerminalStateColl, TerminalState;\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// packages/channikhabra_terminal/packages/channikhabra_terminal.js  //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\n(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/channikhabra:terminal/terminal.js                                                                        //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n// Write your package code here!                                                                                     // 1\nTerminal = {                                                                                                         // 2\n  term: false                                                                                                        // 3\n};                                                                                                                   // 4\n                                                                                                                     // 5\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/channikhabra:terminal/models.js                                                                          //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n/**                                                                                                                  // 1\n * text                             String                                                                           // 2\n * stream                           String [stdout, stderr]                                                          // 3\n * shown                            Boolean                                                                          // 4\n */                                                                                                                  // 5\n                                                                                                                     // 6\nTerminalBufferColl = new Mongo.Collection('terminal_buffer');                                                        // 7\nTerminalBuffer = Model(TerminalBufferColl);                                                                          // 8\n                                                                                                                     // 9\nTerminalBuffer.extend({                                                                                              // 10\n  markShown: function() {                                                                                            // 11\n    this.update({shown: true});                                                                                      // 12\n  }                                                                                                                  // 13\n});                                                                                                                  // 14\n                                                                                                                     // 15\nTerminalBuffer.addToStream = function(options /* {text: 'output', stream: 'stdout/stderr'} */) {                     // 16\n  if (typeof options === 'string') {                                                                                 // 17\n    options = {                                                                                                      // 18\n      text: options,                                                                                                 // 19\n      stream: 'stdout'                                                                                               // 20\n    };                                                                                                               // 21\n  }                                                                                                                  // 22\n                                                                                                                     // 23\n  var buffer = new TerminalBuffer();                                                                                 // 24\n  buffer.text = options.text;                                                                                        // 25\n  buffer.stream = options.stream;                                                                                    // 26\n  buffer.shown = false;                                                                                              // 27\n  buffer.save();                                                                                                     // 28\n};                                                                                                                   // 29\nTerminalBuffer.newEntries = function() {                                                                             // 30\n  return TerminalBufferColl.find({shown: false});                                                                    // 31\n};                                                                                                                   // 32\n                                                                                                                     // 33\n                                                                                                                     // 34\n/**                                                                                                                  // 35\n * Used to maintain state of the terminal. Like pwd. We are spawning individual commands instead of an interactive shell.\n * So we have to maintain the state of shell ourselves and update the state before spawning every command.           // 37\n */                                                                                                                  // 38\nTerminalStateColl = new Mongo.Collection('terminal_state');                                                          // 39\nvar TerminalStateModel = Model(TerminalStateColl);                                                                   // 40\nTerminalState = {                                                                                                    // 41\n  state: function() {                                                                                                // 42\n    var state = TerminalStateColl.find().fetch();                                                                    // 43\n    if(state.length === 0) {                                                                                         // 44\n      console.warn(\"CREATING NEW STATE: If you see an 'insert denied' error below this line, it's perfectly fine.\"); // 45\n      state = new TerminalStateModel();                                                                              // 46\n      state.pwd = '';                                                                                                // 47\n      state.save();                                                                                                  // 48\n    }                                                                                                                // 49\n    return state[0];                                                                                                 // 50\n  },                                                                                                                 // 51\n  pwd: function(newPwd) {                                                                                            // 52\n    if (typeof newPwd !== 'string')                                                                                  // 53\n      return this.state().pwd;                                                                                       // 54\n                                                                                                                     // 55\n    var termState = this.state();                                                                                    // 56\n    if (! termState)                                                                                                 // 57\n      return false;                                                                                                  // 58\n                                                                                                                     // 59\n    termState.update({pwd: newPwd});                                                                                 // 60\n                                                                                                                     // 61\n    return this.state.pwd;                                                                                           // 62\n  },                                                                                                                 // 63\n  shellUser: function(username) {                                                                                    // 64\n    if (typeof username !== 'string')                                                                                // 65\n      return this.state().shell_user;                                                                                // 66\n                                                                                                                     // 67\n    var termState = this.state();                                                                                    // 68\n                                                                                                                     // 69\n    termState.update({shell_user: username});                                                                        // 70\n                                                                                                                     // 71\n    return termState.shell_user;                                                                                     // 72\n  },                                                                                                                 // 73\n  prompt: function() {                                                                                               // 74\n    var termState = this.state(),                                                                                    // 75\n        pwd = this.pwd(),                                                                                            // 76\n        shellUser = this.shellUser(),                                                                                // 77\n        prompt = shellUser + \"@\" + pwd + \"» \";                                                                       // 78\n                                                                                                                     // 79\n    return prompt;                                                                                                   // 80\n  }                                                                                                                  // 81\n};                                                                                                                   // 82\n                                                                                                                     // 83\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/channikhabra:terminal/server/terminal.js                                                                 //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nvar Fiber = Npm.require(\"fibers\"),                                                                                   // 1\n    exec = Npm.require('child_process').exec,                                                                        // 2\n    spawn = Npm.require('child_process').spawn,                                                                      // 3\n    path = Npm.require(\"path\");                                                                                      // 4\n                                                                                                                     // 5\nTerminal = Terminal || {};                                                                                           // 6\n                                                                                                                     // 7\nvar ServerTermHandler = function() {                                                                                 // 8\n  var initialize = function() {                                                                                      // 9\n    var shellUser = process.env.USER;                                                                                // 10\n    var pwd = process.env.HOME;                                                                                      // 11\n                                                                                                                     // 12\n    TerminalState.pwd(pwd);                                                                                          // 13\n    TerminalState.shellUser(shellUser);                                                                              // 14\n                                                                                                                     // 15\n    return this;                                                                                                     // 16\n  };                                                                                                                 // 17\n                                                                                                                     // 18\n  var resolveEnvVars = function(str) {                                                                               // 19\n    var envVarRegex = /\\$[A-Z]\\w+/g;                                                                                 // 20\n    return str.replace(envVarRegex, function(match) {                                                                // 21\n      return process.env[match.replace(\"$\", \"\")];                                                                    // 22\n    });                                                                                                              // 23\n  };                                                                                                                 // 24\n                                                                                                                     // 25\n  var handleCommand = function(command) {                                                                            // 26\n    if (command.indexOf(\"&&\") > 0) {                                                                                 // 27\n      //let's prevent composite commands because in that case special cases like 'cd' will fail.                     // 28\n      //we can ofcourse cover this up with very little more work, but I am feeling lazy                              // 29\n      return \"Please do not user composite commands. i.e no &&\";                                                     // 30\n    }                                                                                                                // 31\n    //let's handle cd as a special case                                                                              // 32\n    if (command.indexOf(\"cd\") === 0) {                                                                               // 33\n      var newPath = command.replace(\"cd \", '');                                                                      // 34\n                                                                                                                     // 35\n      if (newPath.indexOf(\"~\" === 0)) { //replace ~ with $HOME only if it's the first char of path to cd             // 36\n        newPath = newPath.replace(\"~\", \"$HOME\"); //path don't understand ~/ I am habitual of using often             // 37\n      }                                                                                                              // 38\n                                                                                                                     // 39\n      newPath = this.resolveEnvVars(newPath); // in case users do things like cd $HOME etc. I do stuff like this often in case you're thinking nobody does such shit\n                                                                                                                     // 41\n      var newPwd = path.resolve(TerminalState.pwd(), newPath);                                                       // 42\n      TerminalState.pwd(newPwd);                                                                                     // 43\n    }                                                                                                                // 44\n                                                                                                                     // 45\n    var pwd = TerminalState.pwd();                                                                                   // 46\n    command = \"cd \" + pwd + \";\" + command;                                                                           // 47\n                                                                                                                     // 48\n    var shellName = process.env.SHELL;                                                                               // 49\n    var shell = spawn(shellName, [\"-c\", command]);                                                                   // 50\n    shell.stdout.on('data', updateTerminal(\"stdout\"));                                                               // 51\n    shell.stderr.on('data', updateTerminal(\"stderr\"));                                                               // 52\n    shell.on('error', function(err) {                                                                                // 53\n      updateTerminal(err.text);                                                                                      // 54\n    });                                                                                                              // 55\n    shell.on('close', function(code) {                                                                               // 56\n      //clear callback                                                                                               // 57\n      shell.stdout.removeAllListeners('data');                                                                       // 58\n      shell.stderr.removeAllListeners('data');                                                                       // 59\n      shell.removeAllListeners('error');                                                                             // 60\n      shell.removeAllListeners('close');                                                                             // 61\n    });                                                                                                              // 62\n                                                                                                                     // 63\n    function updateTerminal(stream) {                                                                                // 64\n      return function(data) {                                                                                        // 65\n        Fiber(function() {                                                                                           // 66\n          TerminalBuffer.addToStream({text: data.toString(), stream: stream});                                       // 67\n        }).run();                                                                                                    // 68\n      };                                                                                                             // 69\n    };                                                                                                               // 70\n  };                                                                                                                 // 71\n                                                                                                                     // 72\n  this.initialize = initialize;                                                                                      // 73\n  this.resolveEnvVars = resolveEnvVars;                                                                              // 74\n  this.handleCommand = handleCommand;                                                                                // 75\n};                                                                                                                   // 76\n                                                                                                                     // 77\nvar serverHandler = new ServerTermHandler().initialize();                                                            // 78\n_.extend(Terminal, serverHandler);                                                                                   // 79\n                                                                                                                     // 80\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/channikhabra:terminal/server/methods.js                                                                  //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nMeteor.methods({                                                                                                     // 1\n  terminalRecieveCommand: function(command) {                                                                        // 2\n    return Terminal.handleCommand(command);                                                                          // 3\n  }                                                                                                                  // 4\n});                                                                                                                  // 5\n                                                                                                                     // 6\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/channikhabra:terminal/server/permissions.js                                                              //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nTerminalBufferColl.allow({                                                                                           // 1\n  insert: function(doc) {                                                                                            // 2\n    return true;                                                                                                     // 3\n  },                                                                                                                 // 4\n  update: function() {                                                                                               // 5\n    return true;                                                                                                     // 6\n  },                                                                                                                 // 7\n  remove: function() {                                                                                               // 8\n    return true;                                                                                                     // 9\n  }                                                                                                                  // 10\n});                                                                                                                  // 11\n                                                                                                                     // 12\nTerminalStateColl.allow({                                                                                            // 13\n  insert: function() {                                                                                               // 14\n    var totalStates = TerminalStateColl.find().count();                                                              // 15\n    //let's not allow more than one docs to be present in state coll.                                                // 16\n    //we might need more than one states when we have user based config (if ever), but not now.                      // 17\n    if (totalStates > 0)                                                                                             // 18\n      return false;                                                                                                  // 19\n    return true;                                                                                                     // 20\n  },                                                                                                                 // 21\n  update: function() {                                                                                               // 22\n    return true;                                                                                                     // 23\n  },                                                                                                                 // 24\n  remove: function() {                                                                                               // 25\n    return true;                                                                                                     // 26\n  }                                                                                                                  // 27\n});                                                                                                                  // 28\n                                                                                                                     // 29\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/channikhabra:terminal/server/pubs.js                                                                     //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nMeteor.publish(\"all_terminal\", function() {                                                                          // 1\n  return [                                                                                                           // 2\n    TerminalBufferColl.find({}),                                                                                     // 3\n    TerminalStateColl.find({})                                                                                       // 4\n  ];                                                                                                                 // 5\n});                                                                                                                  // 6\n                                                                                                                     // 7\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n///////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['channikhabra:terminal'] = {}, {\n  Terminal: Terminal,\n  TerminalBuffer: TerminalBuffer\n});\n\n})();\n","servePath":"/packages/channikhabra_terminal.js"}]