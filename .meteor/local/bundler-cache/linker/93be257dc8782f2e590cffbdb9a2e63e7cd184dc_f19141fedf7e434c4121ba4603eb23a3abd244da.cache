[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar OAuth = Package.oauth.OAuth;\nvar Oauth = Package.oauth.Oauth;\nvar Random = Package.random.Random;\nvar ServiceConfiguration = Package['service-configuration'].ServiceConfiguration;\n\n/* Package-scope variables */\nvar Github;\n\n(function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// packages/github-oauth/github_client.js                                                       //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nGithub = {};                                                                                    // 1\n                                                                                                // 2\n// Request Github credentials for the user                                                      // 3\n// @param options {optional}                                                                    // 4\n// @param credentialRequestCompleteCallback {Function} Callback function to call on             // 5\n//   completion. Takes one argument, credentialToken on success, or Error on                    // 6\n//   error.                                                                                     // 7\nGithub.requestCredential = function (options, credentialRequestCompleteCallback) {              // 8\n  // support both (options, callback) and (callback).                                           // 9\n  if (!credentialRequestCompleteCallback && typeof options === 'function') {                    // 10\n    credentialRequestCompleteCallback = options;                                                // 11\n    options = {};                                                                               // 12\n  }                                                                                             // 13\n                                                                                                // 14\n  var config = ServiceConfiguration.configurations.findOne({service: 'github'});                // 15\n  if (!config) {                                                                                // 16\n    credentialRequestCompleteCallback && credentialRequestCompleteCallback(                     // 17\n      new ServiceConfiguration.ConfigError());                                                  // 18\n    return;                                                                                     // 19\n  }                                                                                             // 20\n  var credentialToken = Random.secret();                                                        // 21\n                                                                                                // 22\n  var scope = (options && options.requestPermissions) || ['user:email'];                        // 23\n  var flatScope = _.map(scope, encodeURIComponent).join('+');                                   // 24\n                                                                                                // 25\n  var loginStyle = OAuth._loginStyle('github', config, options);                                // 26\n                                                                                                // 27\n  var loginUrl =                                                                                // 28\n    'https://github.com/login/oauth/authorize' +                                                // 29\n    '?client_id=' + config.clientId +                                                           // 30\n    '&scope=' + flatScope +                                                                     // 31\n    '&redirect_uri=' + OAuth._redirectUri('github', config) +                                   // 32\n    '&state=' + OAuth._stateParam(loginStyle, credentialToken, options && options.redirectUrl);\n                                                                                                // 34\n  OAuth.launchLogin({                                                                           // 35\n    loginService: \"github\",                                                                     // 36\n    loginStyle: loginStyle,                                                                     // 37\n    loginUrl: loginUrl,                                                                         // 38\n    credentialRequestCompleteCallback: credentialRequestCompleteCallback,                       // 39\n    credentialToken: credentialToken,                                                           // 40\n    popupOptions: {width: 900, height: 450}                                                     // 41\n  });                                                                                           // 42\n};                                                                                              // 43\n                                                                                                // 44\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['github-oauth'] = {}, {\n  Github: Github\n});\n\n})();\n","servePath":"/packages/github-oauth.js"}]