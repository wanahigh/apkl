{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/zodiase:mdl-assets/src/switch/switch.js","filenameRelative":"packages/zodiase:mdl-assets/src/switch/switch.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zodiase:mdl-assets/src/switch/switch.js.map","sourceFileName":"packages/zodiase:mdl-assets/src/switch/switch.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"switch"},"ignored":false,"code":"/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */(function () {\n  'use strict'; /**\n                 * Class constructor for Checkbox MDL component.\n                 * Implements MDL component design pattern defined at:\n                 * https://github.com/jasonmayes/mdl-component-design-pattern\n                 *\n                 * @constructor\n                 * @param {HTMLElement} element The element that will be upgraded.\n                 */\n\n  var MaterialSwitch = function MaterialSwitch(element) {\n    this.element_ = element; // Initialize instance.\n\n    this.init();\n  };\n\n  window['MaterialSwitch'] = MaterialSwitch; /**\n                                              * Store constants in one place so they can be updated easily.\n                                              *\n                                              * @enum {string | number}\n                                              * @private\n                                              */\n  MaterialSwitch.prototype.Constant_ = {\n    TINY_TIMEOUT: 0.001\n  }; /**\n      * Store strings for class names defined by this component that are used in\n      * JavaScript. This allows us to simply change it in one place should we\n      * decide to modify at a later date.\n      *\n      * @enum {string}\n      * @private\n      */\n  MaterialSwitch.prototype.CssClasses_ = {\n    INPUT: 'mdl-switch__input',\n    TRACK: 'mdl-switch__track',\n    THUMB: 'mdl-switch__thumb',\n    FOCUS_HELPER: 'mdl-switch__focus-helper',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-switch__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked'\n  }; /**\n      * Handle change of state.\n      *\n      * @param {Event} event The event that fired.\n      * @private\n      */\n\n  MaterialSwitch.prototype.onChange_ = function (event) {\n    this.updateClasses_();\n  }; /**\n      * Handle focus of element.\n      *\n      * @param {Event} event The event that fired.\n      * @private\n      */\n\n  MaterialSwitch.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n  }; /**\n      * Handle lost focus of element.\n      *\n      * @param {Event} event The event that fired.\n      * @private\n      */\n\n  MaterialSwitch.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n  }; /**\n      * Handle mouseup.\n      *\n      * @param {Event} event The event that fired.\n      * @private\n      */\n\n  MaterialSwitch.prototype.onMouseUp_ = function (event) {\n    this.blur_();\n  }; /**\n      * Handle class updates.\n      *\n      * @private\n      */\n\n  MaterialSwitch.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n  }; /**\n      * Add blur.\n      *\n      * @private\n      */\n\n  MaterialSwitch.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n      this.inputElement_.blur();\n    }.bind(this), /** @type {number} */this.Constant_.TINY_TIMEOUT);\n  }; // Public methods.\n  /**\n   * Check the components disabled state.\n   *\n   * @public\n   */\n\n  MaterialSwitch.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n      this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n  };\n\n  MaterialSwitch.prototype['checkDisabled'] = MaterialSwitch.prototype.checkDisabled; /**\n                                                                                       * Check the components toggled state.\n                                                                                       *\n                                                                                       * @public\n                                                                                       */\n\n  MaterialSwitch.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n      this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n  };\n\n  MaterialSwitch.prototype['checkToggleState'] = MaterialSwitch.prototype.checkToggleState; /**\n                                                                                             * Disable switch.\n                                                                                             *\n                                                                                             * @public\n                                                                                             */\n\n  MaterialSwitch.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n  };\n\n  MaterialSwitch.prototype['disable'] = MaterialSwitch.prototype.disable; /**\n                                                                           * Enable switch.\n                                                                           *\n                                                                           * @public\n                                                                           */\n\n  MaterialSwitch.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n  };\n\n  MaterialSwitch.prototype['enable'] = MaterialSwitch.prototype.enable; /**\n                                                                         * Activate switch.\n                                                                         *\n                                                                         * @public\n                                                                         */\n\n  MaterialSwitch.prototype.on = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n  };\n\n  MaterialSwitch.prototype['on'] = MaterialSwitch.prototype.on; /**\n                                                                 * Deactivate switch.\n                                                                 *\n                                                                 * @public\n                                                                 */\n\n  MaterialSwitch.prototype.off = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n  };\n\n  MaterialSwitch.prototype['off'] = MaterialSwitch.prototype.off; /**\n                                                                   * Initialize element.\n                                                                   */\n\n  MaterialSwitch.prototype.init = function () {\n    if (this.element_) {\n      this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n      var track = document.createElement('div');\n      track.classList.add(this.CssClasses_.TRACK);\n      var thumb = document.createElement('div');\n      thumb.classList.add(this.CssClasses_.THUMB);\n      var focusHelper = document.createElement('span');\n      focusHelper.classList.add(this.CssClasses_.FOCUS_HELPER);\n      thumb.appendChild(focusHelper);\n      this.element_.appendChild(track);\n      this.element_.appendChild(thumb);\n      this.boundMouseUpHandler = this.onMouseUp_.bind(this);\n\n      if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n        this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n        this.rippleContainerElement_ = document.createElement('span');\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n        this.rippleContainerElement_.addEventListener('mouseup', this.boundMouseUpHandler);\n        var ripple = document.createElement('span');\n        ripple.classList.add(this.CssClasses_.RIPPLE);\n        this.rippleContainerElement_.appendChild(ripple);\n        this.element_.appendChild(this.rippleContainerElement_);\n      }\n\n      this.boundChangeHandler = this.onChange_.bind(this);\n      this.boundFocusHandler = this.onFocus_.bind(this);\n      this.boundBlurHandler = this.onBlur_.bind(this);\n      this.inputElement_.addEventListener('change', this.boundChangeHandler);\n      this.inputElement_.addEventListener('focus', this.boundFocusHandler);\n      this.inputElement_.addEventListener('blur', this.boundBlurHandler);\n      this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\n      this.updateClasses_();\n      this.element_.classList.add('is-upgraded');\n    }\n  }; // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n\n\n  componentHandler.register({\n    constructor: MaterialSwitch,\n    classAsString: 'MaterialSwitch',\n    cssClass: 'mdl-js-switch',\n    widget: true\n  });\n})();","map":{"version":3,"sources":["packages/zodiase:mdl-assets/src/switch/switch.js"],"names":["MaterialSwitch","element","element_","init","window","prototype","Constant_","TINY_TIMEOUT","CssClasses_","INPUT","TRACK","THUMB","FOCUS_HELPER","RIPPLE_EFFECT","RIPPLE_IGNORE_EVENTS","RIPPLE_CONTAINER","RIPPLE_CENTER","RIPPLE","IS_FOCUSED","IS_DISABLED","IS_CHECKED","onChange_","event","updateClasses_","onFocus_","classList","add","onBlur_","remove","onMouseUp_","blur_","checkDisabled","checkToggleState","setTimeout","inputElement_","blur","bind","disabled","checked","disable","enable","on","off","querySelector","track","document","createElement","thumb","focusHelper","appendChild","boundMouseUpHandler","contains","rippleContainerElement_","addEventListener","ripple","boundChangeHandler","boundFocusHandler","boundBlurHandler","componentHandler","register","constructor","classAsString","cssClass","widget"],"mappings":"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","file":"packages/zodiase:mdl-assets/src/switch/switch.js.map","sourcesContent":["/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Checkbox MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialSwitch = function MaterialSwitch(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialSwitch'] = MaterialSwitch;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialSwitch.prototype.Constant_ = {\n    TINY_TIMEOUT: 0.001\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialSwitch.prototype.CssClasses_ = {\n    INPUT: 'mdl-switch__input',\n    TRACK: 'mdl-switch__track',\n    THUMB: 'mdl-switch__thumb',\n    FOCUS_HELPER: 'mdl-switch__focus-helper',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-switch__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked'\n  };\n\n  /**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialSwitch.prototype.onChange_ = function(event) {\n    this.updateClasses_();\n  };\n\n  /**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialSwitch.prototype.onFocus_ = function(event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialSwitch.prototype.onBlur_ = function(event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialSwitch.prototype.onMouseUp_ = function(event) {\n    this.blur_();\n  };\n\n  /**\n   * Handle class updates.\n   *\n   * @private\n   */\n  MaterialSwitch.prototype.updateClasses_ = function() {\n    this.checkDisabled();\n    this.checkToggleState();\n  };\n\n  /**\n   * Add blur.\n   *\n   * @private\n   */\n  MaterialSwitch.prototype.blur_ = function() {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function() {\n      this.inputElement_.blur();\n    }.bind(this), /** @type {number} */ (this.Constant_.TINY_TIMEOUT));\n  };\n\n  // Public methods.\n\n  /**\n   * Check the components disabled state.\n   *\n   * @public\n   */\n  MaterialSwitch.prototype.checkDisabled = function() {\n    if (this.inputElement_.disabled) {\n      this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n  };\n  MaterialSwitch.prototype['checkDisabled'] =\n      MaterialSwitch.prototype.checkDisabled;\n\n  /**\n   * Check the components toggled state.\n   *\n   * @public\n   */\n  MaterialSwitch.prototype.checkToggleState = function() {\n    if (this.inputElement_.checked) {\n      this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n  };\n  MaterialSwitch.prototype['checkToggleState'] =\n      MaterialSwitch.prototype.checkToggleState;\n\n  /**\n   * Disable switch.\n   *\n   * @public\n   */\n  MaterialSwitch.prototype.disable = function() {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n  };\n  MaterialSwitch.prototype['disable'] = MaterialSwitch.prototype.disable;\n\n  /**\n   * Enable switch.\n   *\n   * @public\n   */\n  MaterialSwitch.prototype.enable = function() {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n  };\n  MaterialSwitch.prototype['enable'] = MaterialSwitch.prototype.enable;\n\n  /**\n   * Activate switch.\n   *\n   * @public\n   */\n  MaterialSwitch.prototype.on = function() {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n  };\n  MaterialSwitch.prototype['on'] = MaterialSwitch.prototype.on;\n\n  /**\n   * Deactivate switch.\n   *\n   * @public\n   */\n  MaterialSwitch.prototype.off = function() {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n  };\n  MaterialSwitch.prototype['off'] = MaterialSwitch.prototype.off;\n\n  /**\n   * Initialize element.\n   */\n  MaterialSwitch.prototype.init = function() {\n    if (this.element_) {\n      this.inputElement_ = this.element_.querySelector('.' +\n          this.CssClasses_.INPUT);\n\n      var track = document.createElement('div');\n      track.classList.add(this.CssClasses_.TRACK);\n\n      var thumb = document.createElement('div');\n      thumb.classList.add(this.CssClasses_.THUMB);\n\n      var focusHelper = document.createElement('span');\n      focusHelper.classList.add(this.CssClasses_.FOCUS_HELPER);\n\n      thumb.appendChild(focusHelper);\n\n      this.element_.appendChild(track);\n      this.element_.appendChild(thumb);\n\n      this.boundMouseUpHandler = this.onMouseUp_.bind(this);\n\n      if (this.element_.classList.contains(\n          this.CssClasses_.RIPPLE_EFFECT)) {\n        this.element_.classList.add(\n            this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n        this.rippleContainerElement_ = document.createElement('span');\n        this.rippleContainerElement_.classList.add(\n            this.CssClasses_.RIPPLE_CONTAINER);\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n        this.rippleContainerElement_.addEventListener('mouseup', this.boundMouseUpHandler);\n\n        var ripple = document.createElement('span');\n        ripple.classList.add(this.CssClasses_.RIPPLE);\n\n        this.rippleContainerElement_.appendChild(ripple);\n        this.element_.appendChild(this.rippleContainerElement_);\n      }\n\n      this.boundChangeHandler = this.onChange_.bind(this);\n      this.boundFocusHandler = this.onFocus_.bind(this);\n      this.boundBlurHandler = this.onBlur_.bind(this);\n\n      this.inputElement_.addEventListener('change', this.boundChangeHandler);\n      this.inputElement_.addEventListener('focus', this.boundFocusHandler);\n      this.inputElement_.addEventListener('blur', this.boundBlurHandler);\n      this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\n\n      this.updateClasses_();\n      this.element_.classList.add('is-upgraded');\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialSwitch,\n    classAsString: 'MaterialSwitch',\n    cssClass: 'mdl-js-switch',\n    widget: true\n  });\n})();\n"]},"hash":"00ae98514f2da90324dbb866ee589866a07d387a"}
