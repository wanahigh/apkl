{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/zodiase:check/check.js","filenameRelative":"packages/zodiase:check/check.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zodiase:check/check.js.map","sourceFileName":"packages/zodiase:check/check.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"check"},"ignored":false,"code":"// Keep a reference to the old check.\nvar _check = check; // According to https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#2-unsupported-syntax,\n// refacor try-catch block to make the containing function optimizable.\n\nvar nonoptimizableTryCatchBlock = function (value, pattern, message) {\n  try {\n    _check(value, pattern);\n  } catch (error) {\n    throw new Match.Error(message);\n  }\n};\n\ncheck = function (value, pattern, message) {\n  if (typeof message === 'undefined') {\n    _check(value, pattern);\n  } else {\n    nonoptimizableTryCatchBlock(value, pattern, message);\n  }\n};","map":{"version":3,"sources":["packages/zodiase:check/check.js"],"names":["_check","check","nonoptimizableTryCatchBlock","value","pattern","message","error","Match","Error"],"mappings":"AAAA;AACA,IAAIA,SAASC,KAAb,C,CACA;AACA;;AACA,IAAIC,8BAA8B,UAAUC,KAAV,EAAiBC,OAAjB,EAA0BC,OAA1B,EAAmC;AACnE,MAAI;AACFL,WAAOG,KAAP,EAAcC,OAAd;AACD,GAFD,CAEE,OAAOE,KAAP,EAAc;AACd,UAAM,IAAIC,MAAMC,KAAV,CAAgBH,OAAhB,CAAN;AACD;AACF,CAND;;AAOAJ,QAAQ,UAAUE,KAAV,EAAiBC,OAAjB,EAA0BC,OAA1B,EAAmC;AACzC,MAAI,OAAOA,OAAP,KAAmB,WAAvB,EAAoC;AAClCL,WAAOG,KAAP,EAAcC,OAAd;AACD,GAFD,MAEO;AACLF,gCAA4BC,KAA5B,EAAmCC,OAAnC,EAA4CC,OAA5C;AACD;AACF,CAND","file":"packages/zodiase:check/check.js.map","sourcesContent":["// Keep a reference to the old check.\nlet _check = check;\n// According to https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#2-unsupported-syntax,\n// refacor try-catch block to make the containing function optimizable.\nlet nonoptimizableTryCatchBlock = function (value, pattern, message) {\n  try {\n    _check(value, pattern);\n  } catch (error) {\n    throw new Match.Error(message);\n  }\n};\ncheck = function (value, pattern, message) {\n  if (typeof message === 'undefined') {\n    _check(value, pattern);\n  } else {\n    nonoptimizableTryCatchBlock(value, pattern, message);\n  }\n};\n"]},"hash":"0743c70c82c124411d9a12915a15c3eb0da3363c"}
