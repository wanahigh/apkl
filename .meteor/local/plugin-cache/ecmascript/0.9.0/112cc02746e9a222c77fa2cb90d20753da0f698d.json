{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/zodiase:mdl-assets/src/tooltip/tooltip.js","filenameRelative":"packages/zodiase:mdl-assets/src/tooltip/tooltip.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zodiase:mdl-assets/src/tooltip/tooltip.js.map","sourceFileName":"packages/zodiase:mdl-assets/src/tooltip/tooltip.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"tooltip"},"ignored":false,"code":"/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */(function () {\n  'use strict'; /**\n                 * Class constructor for Tooltip MDL component.\n                 * Implements MDL component design pattern defined at:\n                 * https://github.com/jasonmayes/mdl-component-design-pattern\n                 *\n                 * @constructor\n                 * @param {HTMLElement} element The element that will be upgraded.\n                 */\n\n  var MaterialTooltip = function () {\n    function MaterialTooltip(element) {\n      this.element_ = element; // Initialize instance.\n\n      this.init();\n    }\n\n    return MaterialTooltip;\n  }();\n\n  window['MaterialTooltip'] = MaterialTooltip; /**\n                                                * Store constants in one place so they can be updated easily.\n                                                *\n                                                * @enum {string | number}\n                                                * @private\n                                                */\n  MaterialTooltip.prototype.Constant_ = {// None for now.\n  }; /**\n      * Store strings for class names defined by this component that are used in\n      * JavaScript. This allows us to simply change it in one place should we\n      * decide to modify at a later date.\n      *\n      * @enum {string}\n      * @private\n      */\n  MaterialTooltip.prototype.CssClasses_ = {\n    IS_ACTIVE: 'is-active',\n    BOTTOM: 'mdl-tooltip--bottom',\n    LEFT: 'mdl-tooltip--left',\n    RIGHT: 'mdl-tooltip--right',\n    TOP: 'mdl-tooltip--top'\n  }; /**\n      * Handle mouseenter for tooltip.\n      *\n      * @param {Event} event The event that fired.\n      * @private\n      */\n\n  MaterialTooltip.prototype.handleMouseEnter_ = function (event) {\n    var props = event.target.getBoundingClientRect();\n    var left = props.left + props.width / 2;\n    var top = props.top + props.height / 2;\n    var marginLeft = -1 * (this.element_.offsetWidth / 2);\n    var marginTop = -1 * (this.element_.offsetHeight / 2);\n\n    if (this.element_.classList.contains(this.CssClasses_.LEFT) || this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n      left = props.width / 2;\n\n      if (top + marginTop < 0) {\n        this.element_.style.top = '0';\n        this.element_.style.marginTop = '0';\n      } else {\n        this.element_.style.top = top + 'px';\n        this.element_.style.marginTop = marginTop + 'px';\n      }\n    } else {\n      if (left + marginLeft < 0) {\n        this.element_.style.left = '0';\n        this.element_.style.marginLeft = '0';\n      } else {\n        this.element_.style.left = left + 'px';\n        this.element_.style.marginLeft = marginLeft + 'px';\n      }\n    }\n\n    if (this.element_.classList.contains(this.CssClasses_.TOP)) {\n      this.element_.style.top = props.top - this.element_.offsetHeight - 10 + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n      this.element_.style.left = props.left + props.width + 10 + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.LEFT)) {\n      this.element_.style.left = props.left - this.element_.offsetWidth - 10 + 'px';\n    } else {\n      this.element_.style.top = props.top + props.height + 10 + 'px';\n    }\n\n    this.element_.classList.add(this.CssClasses_.IS_ACTIVE);\n  }; /**\n      * Hide tooltip on mouseleave or scroll\n      *\n      * @private\n      */\n\n  MaterialTooltip.prototype.hideTooltip_ = function () {\n    this.element_.classList.remove(this.CssClasses_.IS_ACTIVE);\n  }; /**\n      * Initialize element.\n      */\n\n  MaterialTooltip.prototype.init = function () {\n    if (this.element_) {\n      var forElId = this.element_.getAttribute('for') || this.element_.getAttribute('data-mdl-for');\n\n      if (forElId) {\n        this.forElement_ = document.getElementById(forElId);\n      }\n\n      if (this.forElement_) {\n        // It's left here because it prevents accidental text selection on Android\n        if (!this.forElement_.hasAttribute('tabindex')) {\n          this.forElement_.setAttribute('tabindex', '0');\n        }\n\n        this.boundMouseEnterHandler = this.handleMouseEnter_.bind(this);\n        this.boundMouseLeaveAndScrollHandler = this.hideTooltip_.bind(this);\n        this.forElement_.addEventListener('mouseenter', this.boundMouseEnterHandler, false);\n        this.forElement_.addEventListener('touchend', this.boundMouseEnterHandler, false);\n        this.forElement_.addEventListener('mouseleave', this.boundMouseLeaveAndScrollHandler, false);\n        window.addEventListener('scroll', this.boundMouseLeaveAndScrollHandler, true);\n        window.addEventListener('touchstart', this.boundMouseLeaveAndScrollHandler);\n      }\n    }\n  }; // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n\n\n  componentHandler.register({\n    constructor: MaterialTooltip,\n    classAsString: 'MaterialTooltip',\n    cssClass: 'mdl-tooltip'\n  });\n})();","map":{"version":3,"sources":["packages/zodiase:mdl-assets/src/tooltip/tooltip.js"],"names":["MaterialTooltip","element","element_","init","window","prototype","Constant_","CssClasses_","IS_ACTIVE","BOTTOM","LEFT","RIGHT","TOP","handleMouseEnter_","event","props","target","getBoundingClientRect","left","width","top","height","marginLeft","offsetWidth","marginTop","offsetHeight","classList","contains","style","add","hideTooltip_","remove","forElId","getAttribute","forElement_","document","getElementById","hasAttribute","setAttribute","boundMouseEnterHandler","bind","boundMouseLeaveAndScrollHandler","addEventListener","componentHandler","register","constructor","classAsString","cssClass"],"mappings":"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","file":"packages/zodiase:mdl-assets/src/tooltip/tooltip.js.map","sourcesContent":["/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Tooltip MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialTooltip = function MaterialTooltip(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialTooltip'] = MaterialTooltip;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialTooltip.prototype.Constant_ = {\n    // None for now.\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialTooltip.prototype.CssClasses_ = {\n    IS_ACTIVE: 'is-active',\n    BOTTOM: 'mdl-tooltip--bottom',\n    LEFT: 'mdl-tooltip--left',\n    RIGHT: 'mdl-tooltip--right',\n    TOP: 'mdl-tooltip--top'\n  };\n\n  /**\n   * Handle mouseenter for tooltip.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialTooltip.prototype.handleMouseEnter_ = function(event) {\n    var props = event.target.getBoundingClientRect();\n    var left = props.left + (props.width / 2);\n    var top = props.top + (props.height / 2);\n    var marginLeft = -1 * (this.element_.offsetWidth / 2);\n    var marginTop = -1 * (this.element_.offsetHeight / 2);\n\n    if (this.element_.classList.contains(this.CssClasses_.LEFT) || this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n      left = (props.width / 2);\n      if (top + marginTop < 0) {\n        this.element_.style.top = '0';\n        this.element_.style.marginTop = '0';\n      } else {\n        this.element_.style.top = top + 'px';\n        this.element_.style.marginTop = marginTop + 'px';\n      }\n    } else {\n      if (left + marginLeft < 0) {\n        this.element_.style.left = '0';\n        this.element_.style.marginLeft = '0';\n      } else {\n        this.element_.style.left = left + 'px';\n        this.element_.style.marginLeft = marginLeft + 'px';\n      }\n    }\n\n    if (this.element_.classList.contains(this.CssClasses_.TOP)) {\n      this.element_.style.top = props.top - this.element_.offsetHeight - 10 + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n      this.element_.style.left = props.left + props.width + 10 + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.LEFT)) {\n      this.element_.style.left = props.left - this.element_.offsetWidth - 10 + 'px';\n    } else {\n      this.element_.style.top = props.top + props.height + 10 + 'px';\n    }\n\n    this.element_.classList.add(this.CssClasses_.IS_ACTIVE);\n  };\n\n  /**\n   * Hide tooltip on mouseleave or scroll\n   *\n   * @private\n   */\n  MaterialTooltip.prototype.hideTooltip_ = function() {\n    this.element_.classList.remove(this.CssClasses_.IS_ACTIVE);\n  };\n\n  /**\n   * Initialize element.\n   */\n  MaterialTooltip.prototype.init = function() {\n\n    if (this.element_) {\n      var forElId = this.element_.getAttribute('for') ||\n          this.element_.getAttribute('data-mdl-for');\n\n      if (forElId) {\n        this.forElement_ = document.getElementById(forElId);\n      }\n\n      if (this.forElement_) {\n        // It's left here because it prevents accidental text selection on Android\n        if (!this.forElement_.hasAttribute('tabindex')) {\n          this.forElement_.setAttribute('tabindex', '0');\n        }\n\n        this.boundMouseEnterHandler = this.handleMouseEnter_.bind(this);\n        this.boundMouseLeaveAndScrollHandler = this.hideTooltip_.bind(this);\n        this.forElement_.addEventListener('mouseenter', this.boundMouseEnterHandler, false);\n        this.forElement_.addEventListener('touchend', this.boundMouseEnterHandler, false);\n        this.forElement_.addEventListener('mouseleave', this.boundMouseLeaveAndScrollHandler, false);\n        window.addEventListener('scroll', this.boundMouseLeaveAndScrollHandler, true);\n        window.addEventListener('touchstart', this.boundMouseLeaveAndScrollHandler);\n      }\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialTooltip,\n    classAsString: 'MaterialTooltip',\n    cssClass: 'mdl-tooltip'\n  });\n})();\n"]},"hash":"112cc02746e9a222c77fa2cb90d20753da0f698d"}
