{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"client/Note/posts/post_edit.js","filenameRelative":"client/Note/posts/post_edit.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"client/Note/posts/post_edit.js.map","sourceFileName":"client/Note/posts/post_edit.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"post_edit"},"ignored":false,"code":"Template.postEdit.onCreated(function () {\n  Session.set('postEditErrors', {});\n});\nTemplate.postEdit.helpers({\n  errorMessage: function (field) {\n    return Session.get('postEditErrors')[field];\n  },\n  errorClass: function (field) {\n    return !!Session.get('postEditErrors')[field] ? 'has-error' : '';\n  }\n});\nTemplate.postEdit.events({\n  'submit form': function (e) {\n    e.preventDefault();\n    var currentPostId = this._id;\n    var postProperties = {\n      url: $(e.target).find('[name=url]').val(),\n      title: $(e.target).find('[name=title]').val()\n    };\n    var errors = validatePost(postProperties);\n    if (errors.title || errors.url) return Session.set('postEditErrors', errors);\n    Posts.update(currentPostId, {\n      $set: postProperties\n    }, function (error) {\n      if (error) {\n        // display the error to the user\n        throwError(error.reason);\n      } else {\n        Router.go('postPage', {\n          _id: currentPostId\n        });\n      }\n    });\n  },\n  'click .delete': function (e) {\n    e.preventDefault();\n\n    if (confirm(\"Delete this post?\")) {\n      var currentPostId = this._id;\n      Posts.remove(currentPostId);\n      Router.go('home');\n    }\n  }\n});","map":{"version":3,"sources":["client/Note/posts/post_edit.js"],"names":["Template","postEdit","onCreated","Session","set","helpers","errorMessage","field","get","errorClass","events","e","preventDefault","currentPostId","_id","postProperties","url","$","target","find","val","title","errors","validatePost","Posts","update","$set","error","throwError","reason","Router","go","confirm","remove"],"mappings":"AAAAA,SAASC,QAAT,CAAkBC,SAAlB,CAA4B,YAAW;AACrCC,UAAQC,GAAR,CAAY,gBAAZ,EAA8B,EAA9B;AACD,CAFD;AAIAJ,SAASC,QAAT,CAAkBI,OAAlB,CAA0B;AACxBC,gBAAc,UAASC,KAAT,EAAgB;AAC5B,WAAOJ,QAAQK,GAAR,CAAY,gBAAZ,EAA8BD,KAA9B,CAAP;AACD,GAHuB;AAIxBE,cAAY,UAAUF,KAAV,EAAiB;AAC3B,WAAO,CAAC,CAACJ,QAAQK,GAAR,CAAY,gBAAZ,EAA8BD,KAA9B,CAAF,GAAyC,WAAzC,GAAuD,EAA9D;AACD;AANuB,CAA1B;AASAP,SAASC,QAAT,CAAkBS,MAAlB,CAAyB;AACvB,iBAAe,UAASC,CAAT,EAAY;AACzBA,MAAEC,cAAF;AAEA,QAAIC,gBAAgB,KAAKC,GAAzB;AAEA,QAAIC,iBAAiB;AACnBC,WAAKC,EAAEN,EAAEO,MAAJ,EAAYC,IAAZ,CAAiB,YAAjB,EAA+BC,GAA/B,EADc;AAEnBC,aAAOJ,EAAEN,EAAEO,MAAJ,EAAYC,IAAZ,CAAiB,cAAjB,EAAiCC,GAAjC;AAFY,KAArB;AAKA,QAAIE,SAASC,aAAaR,cAAb,CAAb;AACA,QAAIO,OAAOD,KAAP,IAAgBC,OAAON,GAA3B,EACE,OAAOb,QAAQC,GAAR,CAAY,gBAAZ,EAA8BkB,MAA9B,CAAP;AAEFE,UAAMC,MAAN,CAAaZ,aAAb,EAA4B;AAACa,YAAMX;AAAP,KAA5B,EAAoD,UAASY,KAAT,EAAgB;AAClE,UAAIA,KAAJ,EAAW;AACT;AACAC,mBAAWD,MAAME,MAAjB;AACD,OAHD,MAGO;AACLC,eAAOC,EAAP,CAAU,UAAV,EAAsB;AAACjB,eAAKD;AAAN,SAAtB;AACD;AACF,KAPD;AAQD,GAvBsB;AAyBvB,mBAAiB,UAASF,CAAT,EAAY;AAC3BA,MAAEC,cAAF;;AAEA,QAAIoB,QAAQ,mBAAR,CAAJ,EAAkC;AAChC,UAAInB,gBAAgB,KAAKC,GAAzB;AACAU,YAAMS,MAAN,CAAapB,aAAb;AACAiB,aAAOC,EAAP,CAAU,MAAV;AACD;AACF;AAjCsB,CAAzB","file":"client/Note/posts/post_edit.js.map","sourcesContent":["Template.postEdit.onCreated(function() {\n  Session.set('postEditErrors', {});\n});\n\nTemplate.postEdit.helpers({\n  errorMessage: function(field) {\n    return Session.get('postEditErrors')[field];\n  },\n  errorClass: function (field) {\n    return !!Session.get('postEditErrors')[field] ? 'has-error' : '';\n  }\n});\n\nTemplate.postEdit.events({\n  'submit form': function(e) {\n    e.preventDefault();\n    \n    var currentPostId = this._id;\n    \n    var postProperties = {\n      url: $(e.target).find('[name=url]').val(),\n      title: $(e.target).find('[name=title]').val()\n    }\n    \n    var errors = validatePost(postProperties);\n    if (errors.title || errors.url)\n      return Session.set('postEditErrors', errors);\n    \n    Posts.update(currentPostId, {$set: postProperties}, function(error) {\n      if (error) {\n        // display the error to the user\n        throwError(error.reason);\n      } else {\n        Router.go('postPage', {_id: currentPostId});\n      }\n    });\n  },\n  \n  'click .delete': function(e) {\n    e.preventDefault();\n    \n    if (confirm(\"Delete this post?\")) {\n      var currentPostId = this._id;\n      Posts.remove(currentPostId);\n      Router.go('home');\n    }\n  }\n});\n"]},"hash":"1ce27e6e84798ad073bdfe2b34a13a0075a34b6e"}
