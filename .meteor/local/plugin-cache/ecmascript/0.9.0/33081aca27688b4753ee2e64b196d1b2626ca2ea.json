{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/zodiase:mdl-assets/src/radio/radio.js","filenameRelative":"packages/zodiase:mdl-assets/src/radio/radio.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zodiase:mdl-assets/src/radio/radio.js.map","sourceFileName":"packages/zodiase:mdl-assets/src/radio/radio.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"radio"},"ignored":false,"code":"/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */(function () {\n  'use strict'; /**\n                 * Class constructor for Radio MDL component.\n                 * Implements MDL component design pattern defined at:\n                 * https://github.com/jasonmayes/mdl-component-design-pattern\n                 *\n                 * @constructor\n                 * @param {HTMLElement} element The element that will be upgraded.\n                 */\n\n  var MaterialRadio = function MaterialRadio(element) {\n    this.element_ = element; // Initialize instance.\n\n    this.init();\n  };\n\n  window['MaterialRadio'] = MaterialRadio; /**\n                                            * Store constants in one place so they can be updated easily.\n                                            *\n                                            * @enum {string | number}\n                                            * @private\n                                            */\n  MaterialRadio.prototype.Constant_ = {\n    TINY_TIMEOUT: 0.001\n  }; /**\n      * Store strings for class names defined by this component that are used in\n      * JavaScript. This allows us to simply change it in one place should we\n      * decide to modify at a later date.\n      *\n      * @enum {string}\n      * @private\n      */\n  MaterialRadio.prototype.CssClasses_ = {\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked',\n    IS_UPGRADED: 'is-upgraded',\n    JS_RADIO: 'mdl-js-radio',\n    RADIO_BTN: 'mdl-radio__button',\n    RADIO_OUTER_CIRCLE: 'mdl-radio__outer-circle',\n    RADIO_INNER_CIRCLE: 'mdl-radio__inner-circle',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-radio__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple'\n  }; /**\n      * Handle change of state.\n      *\n      * @param {Event} event The event that fired.\n      * @private\n      */\n\n  MaterialRadio.prototype.onChange_ = function (event) {\n    // Since other radio buttons don't get change events, we need to look for\n    // them to update their classes.\n    var radios = document.getElementsByClassName(this.CssClasses_.JS_RADIO);\n\n    for (var i = 0; i < radios.length; i++) {\n      var button = radios[i].querySelector('.' + this.CssClasses_.RADIO_BTN); // Different name == different group, so no point updating those.\n\n      if (button.getAttribute('name') === this.btnElement_.getAttribute('name')) {\n        if (typeof radios[i]['MaterialRadio'] !== 'undefined') {\n          radios[i]['MaterialRadio'].updateClasses_();\n        }\n      }\n    }\n  }; /**\n      * Handle focus.\n      *\n      * @param {Event} event The event that fired.\n      * @private\n      */\n\n  MaterialRadio.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n  }; /**\n      * Handle lost focus.\n      *\n      * @param {Event} event The event that fired.\n      * @private\n      */\n\n  MaterialRadio.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n  }; /**\n      * Handle mouseup.\n      *\n      * @param {Event} event The event that fired.\n      * @private\n      */\n\n  MaterialRadio.prototype.onMouseup_ = function (event) {\n    this.blur_();\n  }; /**\n      * Update classes.\n      *\n      * @private\n      */\n\n  MaterialRadio.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n  }; /**\n      * Add blur.\n      *\n      * @private\n      */\n\n  MaterialRadio.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n      this.btnElement_.blur();\n    }.bind(this), /** @type {number} */this.Constant_.TINY_TIMEOUT);\n  }; // Public methods.\n  /**\n   * Check the components disabled state.\n   *\n   * @public\n   */\n\n  MaterialRadio.prototype.checkDisabled = function () {\n    if (this.btnElement_.disabled) {\n      this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n  };\n\n  MaterialRadio.prototype['checkDisabled'] = MaterialRadio.prototype.checkDisabled; /**\n                                                                                     * Check the components toggled state.\n                                                                                     *\n                                                                                     * @public\n                                                                                     */\n\n  MaterialRadio.prototype.checkToggleState = function () {\n    if (this.btnElement_.checked) {\n      this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n  };\n\n  MaterialRadio.prototype['checkToggleState'] = MaterialRadio.prototype.checkToggleState; /**\n                                                                                           * Disable radio.\n                                                                                           *\n                                                                                           * @public\n                                                                                           */\n\n  MaterialRadio.prototype.disable = function () {\n    this.btnElement_.disabled = true;\n    this.updateClasses_();\n  };\n\n  MaterialRadio.prototype['disable'] = MaterialRadio.prototype.disable; /**\n                                                                         * Enable radio.\n                                                                         *\n                                                                         * @public\n                                                                         */\n\n  MaterialRadio.prototype.enable = function () {\n    this.btnElement_.disabled = false;\n    this.updateClasses_();\n  };\n\n  MaterialRadio.prototype['enable'] = MaterialRadio.prototype.enable; /**\n                                                                       * Check radio.\n                                                                       *\n                                                                       * @public\n                                                                       */\n\n  MaterialRadio.prototype.check = function () {\n    this.btnElement_.checked = true;\n    this.onChange_(null);\n  };\n\n  MaterialRadio.prototype['check'] = MaterialRadio.prototype.check; /**\n                                                                     * Uncheck radio.\n                                                                     *\n                                                                     * @public\n                                                                     */\n\n  MaterialRadio.prototype.uncheck = function () {\n    this.btnElement_.checked = false;\n    this.onChange_(null);\n  };\n\n  MaterialRadio.prototype['uncheck'] = MaterialRadio.prototype.uncheck; /**\n                                                                         * Initialize element.\n                                                                         */\n\n  MaterialRadio.prototype.init = function () {\n    if (this.element_) {\n      this.btnElement_ = this.element_.querySelector('.' + this.CssClasses_.RADIO_BTN);\n      this.boundChangeHandler_ = this.onChange_.bind(this);\n      this.boundFocusHandler_ = this.onChange_.bind(this);\n      this.boundBlurHandler_ = this.onBlur_.bind(this);\n      this.boundMouseUpHandler_ = this.onMouseup_.bind(this);\n      var outerCircle = document.createElement('span');\n      outerCircle.classList.add(this.CssClasses_.RADIO_OUTER_CIRCLE);\n      var innerCircle = document.createElement('span');\n      innerCircle.classList.add(this.CssClasses_.RADIO_INNER_CIRCLE);\n      this.element_.appendChild(outerCircle);\n      this.element_.appendChild(innerCircle);\n      var rippleContainer;\n\n      if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n        this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n        rippleContainer = document.createElement('span');\n        rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n        rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n        rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n        rippleContainer.addEventListener('mouseup', this.boundMouseUpHandler_);\n        var ripple = document.createElement('span');\n        ripple.classList.add(this.CssClasses_.RIPPLE);\n        rippleContainer.appendChild(ripple);\n        this.element_.appendChild(rippleContainer);\n      }\n\n      this.btnElement_.addEventListener('change', this.boundChangeHandler_);\n      this.btnElement_.addEventListener('focus', this.boundFocusHandler_);\n      this.btnElement_.addEventListener('blur', this.boundBlurHandler_);\n      this.element_.addEventListener('mouseup', this.boundMouseUpHandler_);\n      this.updateClasses_();\n      this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n  }; // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n\n\n  componentHandler.register({\n    constructor: MaterialRadio,\n    classAsString: 'MaterialRadio',\n    cssClass: 'mdl-js-radio',\n    widget: true\n  });\n})();","map":{"version":3,"sources":["packages/zodiase:mdl-assets/src/radio/radio.js"],"names":["MaterialRadio","element","element_","init","window","prototype","Constant_","TINY_TIMEOUT","CssClasses_","IS_FOCUSED","IS_DISABLED","IS_CHECKED","IS_UPGRADED","JS_RADIO","RADIO_BTN","RADIO_OUTER_CIRCLE","RADIO_INNER_CIRCLE","RIPPLE_EFFECT","RIPPLE_IGNORE_EVENTS","RIPPLE_CONTAINER","RIPPLE_CENTER","RIPPLE","onChange_","event","radios","document","getElementsByClassName","i","length","button","querySelector","getAttribute","btnElement_","updateClasses_","onFocus_","classList","add","onBlur_","remove","onMouseup_","blur_","checkDisabled","checkToggleState","setTimeout","blur","bind","disabled","checked","disable","enable","check","uncheck","boundChangeHandler_","boundFocusHandler_","boundBlurHandler_","boundMouseUpHandler_","outerCircle","createElement","innerCircle","appendChild","rippleContainer","contains","addEventListener","ripple","componentHandler","register","constructor","classAsString","cssClass","widget"],"mappings":"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","file":"packages/zodiase:mdl-assets/src/radio/radio.js.map","sourcesContent":["/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Radio MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialRadio = function MaterialRadio(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialRadio'] = MaterialRadio;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialRadio.prototype.Constant_ = {\n    TINY_TIMEOUT: 0.001\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialRadio.prototype.CssClasses_ = {\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked',\n    IS_UPGRADED: 'is-upgraded',\n    JS_RADIO: 'mdl-js-radio',\n    RADIO_BTN: 'mdl-radio__button',\n    RADIO_OUTER_CIRCLE: 'mdl-radio__outer-circle',\n    RADIO_INNER_CIRCLE: 'mdl-radio__inner-circle',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-radio__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple'\n  };\n\n  /**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialRadio.prototype.onChange_ = function(event) {\n    // Since other radio buttons don't get change events, we need to look for\n    // them to update their classes.\n    var radios = document.getElementsByClassName(this.CssClasses_.JS_RADIO);\n    for (var i = 0; i < radios.length; i++) {\n      var button = radios[i].querySelector('.' + this.CssClasses_.RADIO_BTN);\n      // Different name == different group, so no point updating those.\n      if (button.getAttribute('name') === this.btnElement_.getAttribute('name')) {\n        if (typeof radios[i]['MaterialRadio'] !== 'undefined') {\n          radios[i]['MaterialRadio'].updateClasses_();\n        }\n      }\n    }\n  };\n\n  /**\n   * Handle focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialRadio.prototype.onFocus_ = function(event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle lost focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialRadio.prototype.onBlur_ = function(event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialRadio.prototype.onMouseup_ = function(event) {\n    this.blur_();\n  };\n\n  /**\n   * Update classes.\n   *\n   * @private\n   */\n  MaterialRadio.prototype.updateClasses_ = function() {\n    this.checkDisabled();\n    this.checkToggleState();\n  };\n\n  /**\n   * Add blur.\n   *\n   * @private\n   */\n  MaterialRadio.prototype.blur_ = function() {\n\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function() {\n      this.btnElement_.blur();\n    }.bind(this), /** @type {number} */ (this.Constant_.TINY_TIMEOUT));\n  };\n\n  // Public methods.\n\n  /**\n   * Check the components disabled state.\n   *\n   * @public\n   */\n  MaterialRadio.prototype.checkDisabled = function() {\n    if (this.btnElement_.disabled) {\n      this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n  };\n  MaterialRadio.prototype['checkDisabled'] =\n      MaterialRadio.prototype.checkDisabled;\n\n  /**\n   * Check the components toggled state.\n   *\n   * @public\n   */\n  MaterialRadio.prototype.checkToggleState = function() {\n    if (this.btnElement_.checked) {\n      this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n  };\n  MaterialRadio.prototype['checkToggleState'] =\n      MaterialRadio.prototype.checkToggleState;\n\n  /**\n   * Disable radio.\n   *\n   * @public\n   */\n  MaterialRadio.prototype.disable = function() {\n    this.btnElement_.disabled = true;\n    this.updateClasses_();\n  };\n  MaterialRadio.prototype['disable'] = MaterialRadio.prototype.disable;\n\n  /**\n   * Enable radio.\n   *\n   * @public\n   */\n  MaterialRadio.prototype.enable = function() {\n    this.btnElement_.disabled = false;\n    this.updateClasses_();\n  };\n  MaterialRadio.prototype['enable'] = MaterialRadio.prototype.enable;\n\n  /**\n   * Check radio.\n   *\n   * @public\n   */\n  MaterialRadio.prototype.check = function() {\n    this.btnElement_.checked = true;\n    this.onChange_(null);\n  };\n  MaterialRadio.prototype['check'] = MaterialRadio.prototype.check;\n\n  /**\n   * Uncheck radio.\n   *\n   * @public\n   */\n  MaterialRadio.prototype.uncheck = function() {\n    this.btnElement_.checked = false;\n    this.onChange_(null);\n  };\n  MaterialRadio.prototype['uncheck'] = MaterialRadio.prototype.uncheck;\n\n  /**\n   * Initialize element.\n   */\n  MaterialRadio.prototype.init = function() {\n    if (this.element_) {\n      this.btnElement_ = this.element_.querySelector('.' +\n          this.CssClasses_.RADIO_BTN);\n\n      this.boundChangeHandler_ = this.onChange_.bind(this);\n      this.boundFocusHandler_ = this.onChange_.bind(this);\n      this.boundBlurHandler_ = this.onBlur_.bind(this);\n      this.boundMouseUpHandler_ = this.onMouseup_.bind(this);\n\n      var outerCircle = document.createElement('span');\n      outerCircle.classList.add(this.CssClasses_.RADIO_OUTER_CIRCLE);\n\n      var innerCircle = document.createElement('span');\n      innerCircle.classList.add(this.CssClasses_.RADIO_INNER_CIRCLE);\n\n      this.element_.appendChild(outerCircle);\n      this.element_.appendChild(innerCircle);\n\n      var rippleContainer;\n      if (this.element_.classList.contains(\n          this.CssClasses_.RIPPLE_EFFECT)) {\n        this.element_.classList.add(\n            this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n        rippleContainer = document.createElement('span');\n        rippleContainer.classList.add(\n            this.CssClasses_.RIPPLE_CONTAINER);\n        rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n        rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n        rippleContainer.addEventListener('mouseup', this.boundMouseUpHandler_);\n\n        var ripple = document.createElement('span');\n        ripple.classList.add(this.CssClasses_.RIPPLE);\n\n        rippleContainer.appendChild(ripple);\n        this.element_.appendChild(rippleContainer);\n      }\n\n      this.btnElement_.addEventListener('change', this.boundChangeHandler_);\n      this.btnElement_.addEventListener('focus', this.boundFocusHandler_);\n      this.btnElement_.addEventListener('blur', this.boundBlurHandler_);\n      this.element_.addEventListener('mouseup', this.boundMouseUpHandler_);\n\n      this.updateClasses_();\n      this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialRadio,\n    classAsString: 'MaterialRadio',\n    cssClass: 'mdl-js-radio',\n    widget: true\n  });\n})();\n"]},"hash":"33081aca27688b4753ee2e64b196d1b2626ca2ea"}
