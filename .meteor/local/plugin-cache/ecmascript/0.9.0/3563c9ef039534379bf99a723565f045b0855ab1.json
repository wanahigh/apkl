{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/zodiase:mdl-assets/src/ripple/ripple.js","filenameRelative":"packages/zodiase:mdl-assets/src/ripple/ripple.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zodiase:mdl-assets/src/ripple/ripple.js.map","sourceFileName":"packages/zodiase:mdl-assets/src/ripple/ripple.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"ripple"},"ignored":false,"code":"/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */(function () {\n  'use strict'; /**\n                 * Class constructor for Ripple MDL component.\n                 * Implements MDL component design pattern defined at:\n                 * https://github.com/jasonmayes/mdl-component-design-pattern\n                 *\n                 * @constructor\n                 * @param {HTMLElement} element The element that will be upgraded.\n                 */\n\n  var MaterialRipple = function () {\n    function MaterialRipple(element) {\n      this.element_ = element; // Initialize instance.\n\n      this.init();\n    }\n\n    return MaterialRipple;\n  }();\n\n  window['MaterialRipple'] = MaterialRipple; /**\n                                              * Store constants in one place so they can be updated easily.\n                                              *\n                                              * @enum {string | number}\n                                              * @private\n                                              */\n  MaterialRipple.prototype.Constant_ = {\n    INITIAL_SCALE: 'scale(0.0001, 0.0001)',\n    INITIAL_SIZE: '1px',\n    INITIAL_OPACITY: '0.4',\n    FINAL_OPACITY: '0',\n    FINAL_SCALE: ''\n  }; /**\n      * Store strings for class names defined by this component that are used in\n      * JavaScript. This allows us to simply change it in one place should we\n      * decide to modify at a later date.\n      *\n      * @enum {string}\n      * @private\n      */\n  MaterialRipple.prototype.CssClasses_ = {\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    IS_ANIMATING: 'is-animating',\n    IS_VISIBLE: 'is-visible'\n  }; /**\n      * Handle mouse / finger down on element.\n      *\n      * @param {Event} event The event that fired.\n      * @private\n      */\n\n  MaterialRipple.prototype.downHandler_ = function (event) {\n    if (!this.rippleElement_.style.width && !this.rippleElement_.style.height) {\n      var rect = this.element_.getBoundingClientRect();\n      this.boundHeight = rect.height;\n      this.boundWidth = rect.width;\n      this.rippleSize_ = Math.sqrt(rect.width * rect.width + rect.height * rect.height) * 2 + 2;\n      this.rippleElement_.style.width = this.rippleSize_ + 'px';\n      this.rippleElement_.style.height = this.rippleSize_ + 'px';\n    }\n\n    this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE);\n\n    if (event.type === 'mousedown' && this.ignoringMouseDown_) {\n      this.ignoringMouseDown_ = false;\n    } else {\n      if (event.type === 'touchstart') {\n        this.ignoringMouseDown_ = true;\n      }\n\n      var frameCount = this.getFrameCount();\n\n      if (frameCount > 0) {\n        return;\n      }\n\n      this.setFrameCount(1);\n      var bound = event.currentTarget.getBoundingClientRect();\n      var x;\n      var y; // Check if we are handling a keyboard click.\n\n      if (event.clientX === 0 && event.clientY === 0) {\n        x = Math.round(bound.width / 2);\n        y = Math.round(bound.height / 2);\n      } else {\n        var clientX = event.clientX !== undefined ? event.clientX : event.touches[0].clientX;\n        var clientY = event.clientY !== undefined ? event.clientY : event.touches[0].clientY;\n        x = Math.round(clientX - bound.left);\n        y = Math.round(clientY - bound.top);\n      }\n\n      this.setRippleXY(x, y);\n      this.setRippleStyles(true);\n      window.requestAnimationFrame(this.animFrameHandler.bind(this));\n    }\n  }; /**\n      * Handle mouse / finger up on element.\n      *\n      * @param {Event} event The event that fired.\n      * @private\n      */\n\n  MaterialRipple.prototype.upHandler_ = function (event) {\n    // Don't fire for the artificial \"mouseup\" generated by a double-click.\n    if (event && event.detail !== 2) {\n      // Allow a repaint to occur before removing this class, so the animation\n      // shows for tap events, which seem to trigger a mouseup too soon after\n      // mousedown.\n      window.setTimeout(function () {\n        this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE);\n      }.bind(this), 0);\n    }\n  }; /**\n      * Initialize element.\n      */\n\n  MaterialRipple.prototype.init = function () {\n    if (this.element_) {\n      var recentering = this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);\n\n      if (!this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)) {\n        this.rippleElement_ = this.element_.querySelector('.' + this.CssClasses_.RIPPLE);\n        this.frameCount_ = 0;\n        this.rippleSize_ = 0;\n        this.x_ = 0;\n        this.y_ = 0; // Touch start produces a compat mouse down event, which would cause a\n        // second ripples. To avoid that, we use this property to ignore the first\n        // mouse down after a touch start.\n\n        this.ignoringMouseDown_ = false;\n        this.boundDownHandler = this.downHandler_.bind(this);\n        this.element_.addEventListener('mousedown', this.boundDownHandler);\n        this.element_.addEventListener('touchstart', this.boundDownHandler);\n        this.boundUpHandler = this.upHandler_.bind(this);\n        this.element_.addEventListener('mouseup', this.boundUpHandler);\n        this.element_.addEventListener('mouseleave', this.boundUpHandler);\n        this.element_.addEventListener('touchend', this.boundUpHandler);\n        this.element_.addEventListener('blur', this.boundUpHandler); /**\n                                                                      * Getter for frameCount_.\n                                                                      * @return {number} the frame count.\n                                                                      */\n\n        this.getFrameCount = function () {\n          return this.frameCount_;\n        }; /**\n            * Setter for frameCount_.\n            * @param {number} fC the frame count.\n            */\n\n        this.setFrameCount = function (fC) {\n          this.frameCount_ = fC;\n        }; /**\n            * Getter for rippleElement_.\n            * @return {Element} the ripple element.\n            */\n\n        this.getRippleElement = function () {\n          return this.rippleElement_;\n        }; /**\n            * Sets the ripple X and Y coordinates.\n            * @param  {number} newX the new X coordinate\n            * @param  {number} newY the new Y coordinate\n            */\n\n        this.setRippleXY = function (newX, newY) {\n          this.x_ = newX;\n          this.y_ = newY;\n        }; /**\n            * Sets the ripple styles.\n            * @param  {boolean} start whether or not this is the start frame.\n            */\n\n        this.setRippleStyles = function (start) {\n          if (this.rippleElement_ !== null) {\n            var transformString;\n            var scale;\n            var size;\n            var offset = 'translate(' + this.x_ + 'px, ' + this.y_ + 'px)';\n\n            if (start) {\n              scale = this.Constant_.INITIAL_SCALE;\n              size = this.Constant_.INITIAL_SIZE;\n            } else {\n              scale = this.Constant_.FINAL_SCALE;\n              size = this.rippleSize_ + 'px';\n\n              if (recentering) {\n                offset = 'translate(' + this.boundWidth / 2 + 'px, ' + this.boundHeight / 2 + 'px)';\n              }\n            }\n\n            transformString = 'translate(-50%, -50%) ' + offset + scale;\n            this.rippleElement_.style.webkitTransform = transformString;\n            this.rippleElement_.style.msTransform = transformString;\n            this.rippleElement_.style.transform = transformString;\n\n            if (start) {\n              this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING);\n            } else {\n              this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING);\n            }\n          }\n        }; /**\n            * Handles an animation frame.\n            */\n\n        this.animFrameHandler = function () {\n          if (this.frameCount_-- > 0) {\n            window.requestAnimationFrame(this.animFrameHandler.bind(this));\n          } else {\n            this.setRippleStyles(false);\n          }\n        };\n      }\n    }\n  }; // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n\n\n  componentHandler.register({\n    constructor: MaterialRipple,\n    classAsString: 'MaterialRipple',\n    cssClass: 'mdl-js-ripple-effect',\n    widget: false\n  });\n})();","map":{"version":3,"sources":["packages/zodiase:mdl-assets/src/ripple/ripple.js"],"names":["MaterialRipple","element","element_","init","window","prototype","Constant_","INITIAL_SCALE","INITIAL_SIZE","INITIAL_OPACITY","FINAL_OPACITY","FINAL_SCALE","CssClasses_","RIPPLE_CENTER","RIPPLE_EFFECT_IGNORE_EVENTS","RIPPLE","IS_ANIMATING","IS_VISIBLE","downHandler_","event","rippleElement_","style","width","height","rect","getBoundingClientRect","boundHeight","boundWidth","rippleSize_","Math","sqrt","classList","add","type","ignoringMouseDown_","frameCount","getFrameCount","setFrameCount","bound","currentTarget","x","y","clientX","clientY","round","undefined","touches","left","top","setRippleXY","setRippleStyles","requestAnimationFrame","animFrameHandler","bind","upHandler_","detail","setTimeout","remove","recentering","contains","querySelector","frameCount_","x_","y_","boundDownHandler","addEventListener","boundUpHandler","fC","getRippleElement","newX","newY","start","transformString","scale","size","offset","webkitTransform","msTransform","transform","componentHandler","register","constructor","classAsString","cssClass","widget"],"mappings":"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","file":"packages/zodiase:mdl-assets/src/ripple/ripple.js.map","sourcesContent":["/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Ripple MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialRipple = function MaterialRipple(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialRipple'] = MaterialRipple;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialRipple.prototype.Constant_ = {\n    INITIAL_SCALE: 'scale(0.0001, 0.0001)',\n    INITIAL_SIZE: '1px',\n    INITIAL_OPACITY: '0.4',\n    FINAL_OPACITY: '0',\n    FINAL_SCALE: ''\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialRipple.prototype.CssClasses_ = {\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    IS_ANIMATING: 'is-animating',\n    IS_VISIBLE: 'is-visible'\n  };\n\n  /**\n   * Handle mouse / finger down on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialRipple.prototype.downHandler_ = function(event) {\n    if (!this.rippleElement_.style.width && !this.rippleElement_.style.height) {\n      var rect = this.element_.getBoundingClientRect();\n      this.boundHeight = rect.height;\n      this.boundWidth = rect.width;\n      this.rippleSize_ = Math.sqrt(rect.width * rect.width +\n          rect.height * rect.height) * 2 + 2;\n      this.rippleElement_.style.width = this.rippleSize_ + 'px';\n      this.rippleElement_.style.height = this.rippleSize_ + 'px';\n    }\n\n    this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE);\n\n    if (event.type === 'mousedown' && this.ignoringMouseDown_) {\n      this.ignoringMouseDown_ = false;\n    } else {\n      if (event.type === 'touchstart') {\n        this.ignoringMouseDown_ = true;\n      }\n      var frameCount = this.getFrameCount();\n      if (frameCount > 0) {\n        return;\n      }\n      this.setFrameCount(1);\n      var bound = event.currentTarget.getBoundingClientRect();\n      var x;\n      var y;\n      // Check if we are handling a keyboard click.\n      if (event.clientX === 0 && event.clientY === 0) {\n        x = Math.round(bound.width / 2);\n        y = Math.round(bound.height / 2);\n      } else {\n        var clientX = event.clientX !== undefined ? event.clientX : event.touches[0].clientX;\n        var clientY = event.clientY !== undefined ? event.clientY : event.touches[0].clientY;\n        x = Math.round(clientX - bound.left);\n        y = Math.round(clientY - bound.top);\n      }\n      this.setRippleXY(x, y);\n      this.setRippleStyles(true);\n      window.requestAnimationFrame(this.animFrameHandler.bind(this));\n    }\n  };\n\n  /**\n   * Handle mouse / finger up on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialRipple.prototype.upHandler_ = function(event) {\n    // Don't fire for the artificial \"mouseup\" generated by a double-click.\n    if (event && event.detail !== 2) {\n      // Allow a repaint to occur before removing this class, so the animation\n      // shows for tap events, which seem to trigger a mouseup too soon after\n      // mousedown.\n      window.setTimeout(function() {\n        this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE);\n      }.bind(this), 0);\n    }\n  };\n\n  /**\n   * Initialize element.\n   */\n  MaterialRipple.prototype.init = function() {\n    if (this.element_) {\n      var recentering =\n          this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);\n      if (!this.element_.classList.contains(\n          this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)) {\n        this.rippleElement_ = this.element_.querySelector('.' +\n            this.CssClasses_.RIPPLE);\n        this.frameCount_ = 0;\n        this.rippleSize_ = 0;\n        this.x_ = 0;\n        this.y_ = 0;\n\n        // Touch start produces a compat mouse down event, which would cause a\n        // second ripples. To avoid that, we use this property to ignore the first\n        // mouse down after a touch start.\n        this.ignoringMouseDown_ = false;\n\n        this.boundDownHandler = this.downHandler_.bind(this);\n        this.element_.addEventListener('mousedown',\n          this.boundDownHandler);\n        this.element_.addEventListener('touchstart',\n            this.boundDownHandler);\n\n        this.boundUpHandler = this.upHandler_.bind(this);\n        this.element_.addEventListener('mouseup', this.boundUpHandler);\n        this.element_.addEventListener('mouseleave', this.boundUpHandler);\n        this.element_.addEventListener('touchend', this.boundUpHandler);\n        this.element_.addEventListener('blur', this.boundUpHandler);\n\n        /**\n         * Getter for frameCount_.\n         * @return {number} the frame count.\n         */\n        this.getFrameCount = function() {\n          return this.frameCount_;\n        };\n\n        /**\n         * Setter for frameCount_.\n         * @param {number} fC the frame count.\n         */\n        this.setFrameCount = function(fC) {\n          this.frameCount_ = fC;\n        };\n\n        /**\n         * Getter for rippleElement_.\n         * @return {Element} the ripple element.\n         */\n        this.getRippleElement = function() {\n          return this.rippleElement_;\n        };\n\n        /**\n         * Sets the ripple X and Y coordinates.\n         * @param  {number} newX the new X coordinate\n         * @param  {number} newY the new Y coordinate\n         */\n        this.setRippleXY = function(newX, newY) {\n          this.x_ = newX;\n          this.y_ = newY;\n        };\n\n        /**\n         * Sets the ripple styles.\n         * @param  {boolean} start whether or not this is the start frame.\n         */\n        this.setRippleStyles = function(start) {\n          if (this.rippleElement_ !== null) {\n            var transformString;\n            var scale;\n            var size;\n            var offset = 'translate(' + this.x_ + 'px, ' + this.y_ + 'px)';\n\n            if (start) {\n              scale = this.Constant_.INITIAL_SCALE;\n              size = this.Constant_.INITIAL_SIZE;\n            } else {\n              scale = this.Constant_.FINAL_SCALE;\n              size = this.rippleSize_ + 'px';\n              if (recentering) {\n                offset = 'translate(' + this.boundWidth / 2 + 'px, ' +\n                  this.boundHeight / 2 + 'px)';\n              }\n            }\n\n            transformString = 'translate(-50%, -50%) ' + offset + scale;\n\n            this.rippleElement_.style.webkitTransform = transformString;\n            this.rippleElement_.style.msTransform = transformString;\n            this.rippleElement_.style.transform = transformString;\n\n            if (start) {\n              this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING);\n            } else {\n              this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING);\n            }\n          }\n        };\n\n        /**\n         * Handles an animation frame.\n         */\n        this.animFrameHandler = function() {\n          if (this.frameCount_-- > 0) {\n            window.requestAnimationFrame(this.animFrameHandler.bind(this));\n          } else {\n            this.setRippleStyles(false);\n          }\n        };\n      }\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialRipple,\n    classAsString: 'MaterialRipple',\n    cssClass: 'mdl-js-ripple-effect',\n    widget: false\n  });\n})();\n"]},"hash":"3563c9ef039534379bf99a723565f045b0855ab1"}
