{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"client/Note/comments/comment_submit.js","filenameRelative":"client/Note/comments/comment_submit.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"client/Note/comments/comment_submit.js.map","sourceFileName":"client/Note/comments/comment_submit.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"comment_submit"},"ignored":false,"code":"Template.commentSubmit.onCreated(function () {\n  Session.set('commentSubmitErrors', {});\n});\nTemplate.commentSubmit.helpers({\n  errorMessage: function (field) {\n    return Session.get('commentSubmitErrors')[field];\n  },\n  errorClass: function (field) {\n    return !!Session.get('commentSubmitErrors')[field] ? 'has-error' : '';\n  }\n});\nTemplate.commentSubmit.events({\n  'submit form': function (e, template) {\n    e.preventDefault();\n    var $body = $(e.target).find('[name=body]');\n    var comment = {\n      body: $body.val(),\n      postId: template.data._id\n    };\n    var errors = {};\n\n    if (!comment.body) {\n      errors.body = \"Please write some content\";\n      return Session.set('commentSubmitErrors', errors);\n    }\n\n    Meteor.call('commentInsert', comment, function (error, commentId) {\n      if (error) {\n        throwError(error.reason);\n      } else {\n        $body.val('');\n      }\n    });\n  }\n});","map":{"version":3,"sources":["client/Note/comments/comment_submit.js"],"names":["Template","commentSubmit","onCreated","Session","set","helpers","errorMessage","field","get","errorClass","events","e","template","preventDefault","$body","$","target","find","comment","body","val","postId","data","_id","errors","Meteor","call","error","commentId","throwError","reason"],"mappings":"AAAAA,SAASC,aAAT,CAAuBC,SAAvB,CAAiC,YAAW;AAC1CC,UAAQC,GAAR,CAAY,qBAAZ,EAAmC,EAAnC;AACD,CAFD;AAIAJ,SAASC,aAAT,CAAuBI,OAAvB,CAA+B;AAC7BC,gBAAc,UAASC,KAAT,EAAgB;AAC5B,WAAOJ,QAAQK,GAAR,CAAY,qBAAZ,EAAmCD,KAAnC,CAAP;AACD,GAH4B;AAI7BE,cAAY,UAAUF,KAAV,EAAiB;AAC3B,WAAO,CAAC,CAACJ,QAAQK,GAAR,CAAY,qBAAZ,EAAmCD,KAAnC,CAAF,GAA8C,WAA9C,GAA4D,EAAnE;AACD;AAN4B,CAA/B;AASAP,SAASC,aAAT,CAAuBS,MAAvB,CAA8B;AAC5B,iBAAe,UAASC,CAAT,EAAYC,QAAZ,EAAsB;AACnCD,MAAEE,cAAF;AAEA,QAAIC,QAAQC,EAAEJ,EAAEK,MAAJ,EAAYC,IAAZ,CAAiB,aAAjB,CAAZ;AACA,QAAIC,UAAU;AACZC,YAAML,MAAMM,GAAN,EADM;AAEZC,cAAQT,SAASU,IAAT,CAAcC;AAFV,KAAd;AAKA,QAAIC,SAAS,EAAb;;AACA,QAAI,CAAEN,QAAQC,IAAd,EAAoB;AAClBK,aAAOL,IAAP,GAAc,2BAAd;AACA,aAAOhB,QAAQC,GAAR,CAAY,qBAAZ,EAAmCoB,MAAnC,CAAP;AACD;;AAEDC,WAAOC,IAAP,CAAY,eAAZ,EAA6BR,OAA7B,EAAsC,UAASS,KAAT,EAAgBC,SAAhB,EAA2B;AAC/D,UAAID,KAAJ,EAAU;AACRE,mBAAWF,MAAMG,MAAjB;AACD,OAFD,MAEO;AACLhB,cAAMM,GAAN,CAAU,EAAV;AACD;AACF,KAND;AAOD;AAvB2B,CAA9B","file":"client/Note/comments/comment_submit.js.map","sourcesContent":["Template.commentSubmit.onCreated(function() {\n  Session.set('commentSubmitErrors', {});\n});\n\nTemplate.commentSubmit.helpers({\n  errorMessage: function(field) {\n    return Session.get('commentSubmitErrors')[field];\n  },\n  errorClass: function (field) {\n    return !!Session.get('commentSubmitErrors')[field] ? 'has-error' : '';\n  }\n});\n\nTemplate.commentSubmit.events({\n  'submit form': function(e, template) {\n    e.preventDefault();\n    \n    var $body = $(e.target).find('[name=body]');\n    var comment = {\n      body: $body.val(),\n      postId: template.data._id\n    };\n    \n    var errors = {};\n    if (! comment.body) {\n      errors.body = \"Please write some content\";\n      return Session.set('commentSubmitErrors', errors);\n    }\n    \n    Meteor.call('commentInsert', comment, function(error, commentId) {\n      if (error){\n        throwError(error.reason);\n      } else {\n        $body.val('');\n      }\n    });\n  }\n});"]},"hash":"3974463b980b23091d744def5a97f234ce355e00"}
