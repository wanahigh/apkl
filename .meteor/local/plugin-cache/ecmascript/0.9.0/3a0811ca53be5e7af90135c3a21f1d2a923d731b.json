{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/zodiase:mdl-assets/src/checkbox/checkbox.js","filenameRelative":"packages/zodiase:mdl-assets/src/checkbox/checkbox.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zodiase:mdl-assets/src/checkbox/checkbox.js.map","sourceFileName":"packages/zodiase:mdl-assets/src/checkbox/checkbox.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"checkbox"},"ignored":false,"code":"/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */(function () {\n  'use strict'; /**\n                 * Class constructor for Checkbox MDL component.\n                 * Implements MDL component design pattern defined at:\n                 * https://github.com/jasonmayes/mdl-component-design-pattern\n                 *\n                 * @constructor\n                 * @param {HTMLElement} element The element that will be upgraded.\n                 */\n\n  var MaterialCheckbox = function () {\n    function MaterialCheckbox(element) {\n      this.element_ = element; // Initialize instance.\n\n      this.init();\n    }\n\n    return MaterialCheckbox;\n  }();\n\n  window['MaterialCheckbox'] = MaterialCheckbox; /**\n                                                  * Store constants in one place so they can be updated easily.\n                                                  *\n                                                  * @enum {string | number}\n                                                  * @private\n                                                  */\n  MaterialCheckbox.prototype.Constant_ = {\n    TINY_TIMEOUT: 0.001\n  }; /**\n      * Store strings for class names defined by this component that are used in\n      * JavaScript. This allows us to simply change it in one place should we\n      * decide to modify at a later date.\n      *\n      * @enum {string}\n      * @private\n      */\n  MaterialCheckbox.prototype.CssClasses_ = {\n    INPUT: 'mdl-checkbox__input',\n    BOX_OUTLINE: 'mdl-checkbox__box-outline',\n    FOCUS_HELPER: 'mdl-checkbox__focus-helper',\n    TICK_OUTLINE: 'mdl-checkbox__tick-outline',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-checkbox__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked',\n    IS_UPGRADED: 'is-upgraded'\n  }; /**\n      * Handle change of state.\n      *\n      * @param {Event} event The event that fired.\n      * @private\n      */\n\n  MaterialCheckbox.prototype.onChange_ = function (event) {\n    this.updateClasses_();\n  }; /**\n      * Handle focus of element.\n      *\n      * @param {Event} event The event that fired.\n      * @private\n      */\n\n  MaterialCheckbox.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n  }; /**\n      * Handle lost focus of element.\n      *\n      * @param {Event} event The event that fired.\n      * @private\n      */\n\n  MaterialCheckbox.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n  }; /**\n      * Handle mouseup.\n      *\n      * @param {Event} event The event that fired.\n      * @private\n      */\n\n  MaterialCheckbox.prototype.onMouseUp_ = function (event) {\n    this.blur_();\n  }; /**\n      * Handle class updates.\n      *\n      * @private\n      */\n\n  MaterialCheckbox.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n  }; /**\n      * Add blur.\n      *\n      * @private\n      */\n\n  MaterialCheckbox.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n      this.inputElement_.blur();\n    }.bind(this), /** @type {number} */this.Constant_.TINY_TIMEOUT);\n  }; // Public methods.\n  /**\n   * Check the inputs toggle state and update display.\n   *\n   * @public\n   */\n\n  MaterialCheckbox.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n      this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n  };\n\n  MaterialCheckbox.prototype['checkToggleState'] = MaterialCheckbox.prototype.checkToggleState; /**\n                                                                                                 * Check the inputs disabled state and update display.\n                                                                                                 *\n                                                                                                 * @public\n                                                                                                 */\n\n  MaterialCheckbox.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n      this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n  };\n\n  MaterialCheckbox.prototype['checkDisabled'] = MaterialCheckbox.prototype.checkDisabled; /**\n                                                                                           * Disable checkbox.\n                                                                                           *\n                                                                                           * @public\n                                                                                           */\n\n  MaterialCheckbox.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n  };\n\n  MaterialCheckbox.prototype['disable'] = MaterialCheckbox.prototype.disable; /**\n                                                                               * Enable checkbox.\n                                                                               *\n                                                                               * @public\n                                                                               */\n\n  MaterialCheckbox.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n  };\n\n  MaterialCheckbox.prototype['enable'] = MaterialCheckbox.prototype.enable; /**\n                                                                             * Check checkbox.\n                                                                             *\n                                                                             * @public\n                                                                             */\n\n  MaterialCheckbox.prototype.check = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n  };\n\n  MaterialCheckbox.prototype['check'] = MaterialCheckbox.prototype.check; /**\n                                                                           * Uncheck checkbox.\n                                                                           *\n                                                                           * @public\n                                                                           */\n\n  MaterialCheckbox.prototype.uncheck = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n  };\n\n  MaterialCheckbox.prototype['uncheck'] = MaterialCheckbox.prototype.uncheck; /**\n                                                                               * Initialize element.\n                                                                               */\n\n  MaterialCheckbox.prototype.init = function () {\n    if (this.element_) {\n      this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n      var boxOutline = document.createElement('span');\n      boxOutline.classList.add(this.CssClasses_.BOX_OUTLINE);\n      var tickContainer = document.createElement('span');\n      tickContainer.classList.add(this.CssClasses_.FOCUS_HELPER);\n      var tickOutline = document.createElement('span');\n      tickOutline.classList.add(this.CssClasses_.TICK_OUTLINE);\n      boxOutline.appendChild(tickOutline);\n      this.element_.appendChild(tickContainer);\n      this.element_.appendChild(boxOutline);\n\n      if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n        this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n        this.rippleContainerElement_ = document.createElement('span');\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n        this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n        this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n        var ripple = document.createElement('span');\n        ripple.classList.add(this.CssClasses_.RIPPLE);\n        this.rippleContainerElement_.appendChild(ripple);\n        this.element_.appendChild(this.rippleContainerElement_);\n      }\n\n      this.boundInputOnChange = this.onChange_.bind(this);\n      this.boundInputOnFocus = this.onFocus_.bind(this);\n      this.boundInputOnBlur = this.onBlur_.bind(this);\n      this.boundElementMouseUp = this.onMouseUp_.bind(this);\n      this.inputElement_.addEventListener('change', this.boundInputOnChange);\n      this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n      this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n      this.element_.addEventListener('mouseup', this.boundElementMouseUp);\n      this.updateClasses_();\n      this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n  }; // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n\n\n  componentHandler.register({\n    constructor: MaterialCheckbox,\n    classAsString: 'MaterialCheckbox',\n    cssClass: 'mdl-js-checkbox',\n    widget: true\n  });\n})();","map":{"version":3,"sources":["packages/zodiase:mdl-assets/src/checkbox/checkbox.js"],"names":["MaterialCheckbox","element","element_","init","window","prototype","Constant_","TINY_TIMEOUT","CssClasses_","INPUT","BOX_OUTLINE","FOCUS_HELPER","TICK_OUTLINE","RIPPLE_EFFECT","RIPPLE_IGNORE_EVENTS","RIPPLE_CONTAINER","RIPPLE_CENTER","RIPPLE","IS_FOCUSED","IS_DISABLED","IS_CHECKED","IS_UPGRADED","onChange_","event","updateClasses_","onFocus_","classList","add","onBlur_","remove","onMouseUp_","blur_","checkDisabled","checkToggleState","setTimeout","inputElement_","blur","bind","checked","disabled","disable","enable","check","uncheck","querySelector","boxOutline","document","createElement","tickContainer","tickOutline","appendChild","contains","rippleContainerElement_","boundRippleMouseUp","addEventListener","ripple","boundInputOnChange","boundInputOnFocus","boundInputOnBlur","boundElementMouseUp","componentHandler","register","constructor","classAsString","cssClass","widget"],"mappings":"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","file":"packages/zodiase:mdl-assets/src/checkbox/checkbox.js.map","sourcesContent":["/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Checkbox MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialCheckbox = function MaterialCheckbox(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialCheckbox'] = MaterialCheckbox;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialCheckbox.prototype.Constant_ = {\n    TINY_TIMEOUT: 0.001\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialCheckbox.prototype.CssClasses_ = {\n    INPUT: 'mdl-checkbox__input',\n    BOX_OUTLINE: 'mdl-checkbox__box-outline',\n    FOCUS_HELPER: 'mdl-checkbox__focus-helper',\n    TICK_OUTLINE: 'mdl-checkbox__tick-outline',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-checkbox__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked',\n    IS_UPGRADED: 'is-upgraded'\n  };\n\n  /**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialCheckbox.prototype.onChange_ = function(event) {\n    this.updateClasses_();\n  };\n\n  /**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialCheckbox.prototype.onFocus_ = function(event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialCheckbox.prototype.onBlur_ = function(event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialCheckbox.prototype.onMouseUp_ = function(event) {\n    this.blur_();\n  };\n\n  /**\n   * Handle class updates.\n   *\n   * @private\n   */\n  MaterialCheckbox.prototype.updateClasses_ = function() {\n    this.checkDisabled();\n    this.checkToggleState();\n  };\n\n  /**\n   * Add blur.\n   *\n   * @private\n   */\n  MaterialCheckbox.prototype.blur_ = function() {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function() {\n      this.inputElement_.blur();\n    }.bind(this), /** @type {number} */ (this.Constant_.TINY_TIMEOUT));\n  };\n\n  // Public methods.\n\n  /**\n   * Check the inputs toggle state and update display.\n   *\n   * @public\n   */\n  MaterialCheckbox.prototype.checkToggleState = function() {\n    if (this.inputElement_.checked) {\n      this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n  };\n  MaterialCheckbox.prototype['checkToggleState'] =\n      MaterialCheckbox.prototype.checkToggleState;\n\n  /**\n   * Check the inputs disabled state and update display.\n   *\n   * @public\n   */\n  MaterialCheckbox.prototype.checkDisabled = function() {\n    if (this.inputElement_.disabled) {\n      this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n  };\n  MaterialCheckbox.prototype['checkDisabled'] =\n      MaterialCheckbox.prototype.checkDisabled;\n\n  /**\n   * Disable checkbox.\n   *\n   * @public\n   */\n  MaterialCheckbox.prototype.disable = function() {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n  };\n  MaterialCheckbox.prototype['disable'] = MaterialCheckbox.prototype.disable;\n\n  /**\n   * Enable checkbox.\n   *\n   * @public\n   */\n  MaterialCheckbox.prototype.enable = function() {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n  };\n  MaterialCheckbox.prototype['enable'] = MaterialCheckbox.prototype.enable;\n\n  /**\n   * Check checkbox.\n   *\n   * @public\n   */\n  MaterialCheckbox.prototype.check = function() {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n  };\n  MaterialCheckbox.prototype['check'] = MaterialCheckbox.prototype.check;\n\n  /**\n   * Uncheck checkbox.\n   *\n   * @public\n   */\n  MaterialCheckbox.prototype.uncheck = function() {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n  };\n  MaterialCheckbox.prototype['uncheck'] = MaterialCheckbox.prototype.uncheck;\n\n  /**\n   * Initialize element.\n   */\n  MaterialCheckbox.prototype.init = function() {\n    if (this.element_) {\n      this.inputElement_ = this.element_.querySelector('.' +\n          this.CssClasses_.INPUT);\n\n      var boxOutline = document.createElement('span');\n      boxOutline.classList.add(this.CssClasses_.BOX_OUTLINE);\n\n      var tickContainer = document.createElement('span');\n      tickContainer.classList.add(this.CssClasses_.FOCUS_HELPER);\n\n      var tickOutline = document.createElement('span');\n      tickOutline.classList.add(this.CssClasses_.TICK_OUTLINE);\n\n      boxOutline.appendChild(tickOutline);\n\n      this.element_.appendChild(tickContainer);\n      this.element_.appendChild(boxOutline);\n\n      if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n        this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n        this.rippleContainerElement_ = document.createElement('span');\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n        this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n        this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n\n        var ripple = document.createElement('span');\n        ripple.classList.add(this.CssClasses_.RIPPLE);\n\n        this.rippleContainerElement_.appendChild(ripple);\n        this.element_.appendChild(this.rippleContainerElement_);\n      }\n      this.boundInputOnChange = this.onChange_.bind(this);\n      this.boundInputOnFocus = this.onFocus_.bind(this);\n      this.boundInputOnBlur = this.onBlur_.bind(this);\n      this.boundElementMouseUp = this.onMouseUp_.bind(this);\n      this.inputElement_.addEventListener('change', this.boundInputOnChange);\n      this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n      this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n      this.element_.addEventListener('mouseup', this.boundElementMouseUp);\n\n      this.updateClasses_();\n      this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialCheckbox,\n    classAsString: 'MaterialCheckbox',\n    cssClass: 'mdl-js-checkbox',\n    widget: true\n  });\n})();\n"]},"hash":"3a0811ca53be5e7af90135c3a21f1d2a923d731b"}
