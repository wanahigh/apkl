{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/zodiase:mdl-assets/src/menu/menu.js","filenameRelative":"packages/zodiase:mdl-assets/src/menu/menu.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zodiase:mdl-assets/src/menu/menu.js.map","sourceFileName":"packages/zodiase:mdl-assets/src/menu/menu.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"menu"},"ignored":false,"code":"/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */(function () {\n  'use strict'; /**\n                 * Class constructor for dropdown MDL component.\n                 * Implements MDL component design pattern defined at:\n                 * https://github.com/jasonmayes/mdl-component-design-pattern\n                 *\n                 * @constructor\n                 * @param {HTMLElement} element The element that will be upgraded.\n                 */\n\n  var MaterialMenu = function MaterialMenu(element) {\n    this.element_ = element; // Initialize instance.\n\n    this.init();\n  };\n\n  window['MaterialMenu'] = MaterialMenu; /**\n                                          * Store constants in one place so they can be updated easily.\n                                          *\n                                          * @enum {string | number}\n                                          * @private\n                                          */\n  MaterialMenu.prototype.Constant_ = {\n    // Total duration of the menu animation.\n    TRANSITION_DURATION_SECONDS: 0.3,\n    // The fraction of the total duration we want to use for menu item animations.\n    TRANSITION_DURATION_FRACTION: 0.8,\n    // How long the menu stays open after choosing an option (so the user can see\n    // the ripple).\n    CLOSE_TIMEOUT: 150\n  }; /**\n      * Keycodes, for code readability.\n      *\n      * @enum {number}\n      * @private\n      */\n  MaterialMenu.prototype.Keycodes_ = {\n    ENTER: 13,\n    ESCAPE: 27,\n    SPACE: 32,\n    UP_ARROW: 38,\n    DOWN_ARROW: 40\n  }; /**\n      * Store strings for class names defined by this component that are used in\n      * JavaScript. This allows us to simply change it in one place should we\n      * decide to modify at a later date.\n      *\n      * @enum {string}\n      * @private\n      */\n  MaterialMenu.prototype.CssClasses_ = {\n    CONTAINER: 'mdl-menu__container',\n    OUTLINE: 'mdl-menu__outline',\n    ITEM: 'mdl-menu__item',\n    ITEM_RIPPLE_CONTAINER: 'mdl-menu__item-ripple-container',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    // Statuses\n    IS_UPGRADED: 'is-upgraded',\n    IS_VISIBLE: 'is-visible',\n    IS_ANIMATING: 'is-animating',\n    // Alignment options\n    BOTTOM_LEFT: 'mdl-menu--bottom-left',\n    // This is the default.\n    BOTTOM_RIGHT: 'mdl-menu--bottom-right',\n    TOP_LEFT: 'mdl-menu--top-left',\n    TOP_RIGHT: 'mdl-menu--top-right',\n    UNALIGNED: 'mdl-menu--unaligned'\n  }; /**\n      * Initialize element.\n      */\n\n  MaterialMenu.prototype.init = function () {\n    if (this.element_) {\n      // Create container for the menu.\n      var container = document.createElement('div');\n      container.classList.add(this.CssClasses_.CONTAINER);\n      this.element_.parentElement.insertBefore(container, this.element_);\n      this.element_.parentElement.removeChild(this.element_);\n      container.appendChild(this.element_);\n      this.container_ = container; // Create outline for the menu (shadow and background).\n\n      var outline = document.createElement('div');\n      outline.classList.add(this.CssClasses_.OUTLINE);\n      this.outline_ = outline;\n      container.insertBefore(outline, this.element_); // Find the \"for\" element and bind events to it.\n\n      var forElId = this.element_.getAttribute('for') || this.element_.getAttribute('data-mdl-for');\n      var forEl = null;\n\n      if (forElId) {\n        forEl = document.getElementById(forElId);\n\n        if (forEl) {\n          this.forElement_ = forEl;\n          forEl.addEventListener('click', this.handleForClick_.bind(this));\n          forEl.addEventListener('keydown', this.handleForKeyboardEvent_.bind(this));\n        }\n      }\n\n      var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n      this.boundItemKeydown_ = this.handleItemKeyboardEvent_.bind(this);\n      this.boundItemClick_ = this.handleItemClick_.bind(this);\n\n      for (var i = 0; i < items.length; i++) {\n        // Add a listener to each menu item.\n        items[i].addEventListener('click', this.boundItemClick_); // Add a tab index to each menu item.\n\n        items[i].tabIndex = '-1'; // Add a keyboard listener to each menu item.\n\n        items[i].addEventListener('keydown', this.boundItemKeydown_);\n      } // Add ripple classes to each item, if the user has enabled ripples.\n\n\n      if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n        this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n\n        for (i = 0; i < items.length; i++) {\n          var item = items[i];\n          var rippleContainer = document.createElement('span');\n          rippleContainer.classList.add(this.CssClasses_.ITEM_RIPPLE_CONTAINER);\n          var ripple = document.createElement('span');\n          ripple.classList.add(this.CssClasses_.RIPPLE);\n          rippleContainer.appendChild(ripple);\n          item.appendChild(rippleContainer);\n          item.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n        }\n      } // Copy alignment classes to the container, so the outline can use them.\n\n\n      if (this.element_.classList.contains(this.CssClasses_.BOTTOM_LEFT)) {\n        this.outline_.classList.add(this.CssClasses_.BOTTOM_LEFT);\n      }\n\n      if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n        this.outline_.classList.add(this.CssClasses_.BOTTOM_RIGHT);\n      }\n\n      if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n        this.outline_.classList.add(this.CssClasses_.TOP_LEFT);\n      }\n\n      if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n        this.outline_.classList.add(this.CssClasses_.TOP_RIGHT);\n      }\n\n      if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n        this.outline_.classList.add(this.CssClasses_.UNALIGNED);\n      }\n\n      container.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n  }; /**\n      * Handles a click on the \"for\" element, by positioning the menu and then\n      * toggling it.\n      *\n      * @param {Event} evt The event that fired.\n      * @private\n      */\n\n  MaterialMenu.prototype.handleForClick_ = function (evt) {\n    if (this.element_ && this.forElement_) {\n      var rect = this.forElement_.getBoundingClientRect();\n      var forRect = this.forElement_.parentElement.getBoundingClientRect();\n\n      if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {// Do not position the menu automatically. Requires the developer to\n        // manually specify position.\n      } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n        // Position below the \"for\" element, aligned to its right.\n        this.container_.style.right = forRect.right - rect.right + 'px';\n        this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n      } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n        // Position above the \"for\" element, aligned to its left.\n        this.container_.style.left = this.forElement_.offsetLeft + 'px';\n        this.container_.style.bottom = forRect.bottom - rect.top + 'px';\n      } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n        // Position above the \"for\" element, aligned to its right.\n        this.container_.style.right = forRect.right - rect.right + 'px';\n        this.container_.style.bottom = forRect.bottom - rect.top + 'px';\n      } else {\n        // Default: position below the \"for\" element, aligned to its left.\n        this.container_.style.left = this.forElement_.offsetLeft + 'px';\n        this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n      }\n    }\n\n    this.toggle(evt);\n  }; /**\n      * Handles a keyboard event on the \"for\" element.\n      *\n      * @param {Event} evt The event that fired.\n      * @private\n      */\n\n  MaterialMenu.prototype.handleForKeyboardEvent_ = function (evt) {\n    if (this.element_ && this.container_ && this.forElement_) {\n      var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM + ':not([disabled])');\n\n      if (items && items.length > 0 && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n        if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n          evt.preventDefault();\n          items[items.length - 1].focus();\n        } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n          evt.preventDefault();\n          items[0].focus();\n        }\n      }\n    }\n  }; /**\n      * Handles a keyboard event on an item.\n      *\n      * @param {Event} evt The event that fired.\n      * @private\n      */\n\n  MaterialMenu.prototype.handleItemKeyboardEvent_ = function (evt) {\n    if (this.element_ && this.container_) {\n      var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM + ':not([disabled])');\n\n      if (items && items.length > 0 && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n        var currentIndex = Array.prototype.slice.call(items).indexOf(evt.target);\n\n        if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n          evt.preventDefault();\n\n          if (currentIndex > 0) {\n            items[currentIndex - 1].focus();\n          } else {\n            items[items.length - 1].focus();\n          }\n        } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n          evt.preventDefault();\n\n          if (items.length > currentIndex + 1) {\n            items[currentIndex + 1].focus();\n          } else {\n            items[0].focus();\n          }\n        } else if (evt.keyCode === this.Keycodes_.SPACE || evt.keyCode === this.Keycodes_.ENTER) {\n          evt.preventDefault(); // Send mousedown and mouseup to trigger ripple.\n\n          var e = new MouseEvent('mousedown');\n          evt.target.dispatchEvent(e);\n          e = new MouseEvent('mouseup');\n          evt.target.dispatchEvent(e); // Send click.\n\n          evt.target.click();\n        } else if (evt.keyCode === this.Keycodes_.ESCAPE) {\n          evt.preventDefault();\n          this.hide();\n        }\n      }\n    }\n  }; /**\n      * Handles a click event on an item.\n      *\n      * @param {Event} evt The event that fired.\n      * @private\n      */\n\n  MaterialMenu.prototype.handleItemClick_ = function (evt) {\n    if (evt.target.hasAttribute('disabled')) {\n      evt.stopPropagation();\n    } else {\n      // Wait some time before closing menu, so the user can see the ripple.\n      this.closing_ = true;\n      window.setTimeout(function (evt) {\n        this.hide();\n        this.closing_ = false;\n      }.bind(this), /** @type {number} */this.Constant_.CLOSE_TIMEOUT);\n    }\n  }; /**\n      * Calculates the initial clip (for opening the menu) or final clip (for closing\n      * it), and applies it. This allows us to animate from or to the correct point,\n      * that is, the point it's aligned to in the \"for\" element.\n      *\n      * @param {number} height Height of the clip rectangle\n      * @param {number} width Width of the clip rectangle\n      * @private\n      */\n\n  MaterialMenu.prototype.applyClip_ = function (height, width) {\n    if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n      // Do not clip.\n      this.element_.style.clip = '';\n    } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n      // Clip to the top right corner of the menu.\n      this.element_.style.clip = 'rect(0 ' + width + 'px ' + '0 ' + width + 'px)';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n      // Clip to the bottom left corner of the menu.\n      this.element_.style.clip = 'rect(' + height + 'px 0 ' + height + 'px 0)';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n      // Clip to the bottom right corner of the menu.\n      this.element_.style.clip = 'rect(' + height + 'px ' + width + 'px ' + height + 'px ' + width + 'px)';\n    } else {\n      // Default: do not clip (same as clipping to the top left corner).\n      this.element_.style.clip = '';\n    }\n  }; /**\n      * Cleanup function to remove animation listeners.\n      *\n      * @param {Event} evt\n      * @private\n      */\n\n  MaterialMenu.prototype.removeAnimationEndListener_ = function (evt) {\n    evt.target.classList.remove(MaterialMenu.prototype.CssClasses_.IS_ANIMATING);\n  }; /**\n      * Adds an event listener to clean up after the animation ends.\n      *\n      * @private\n      */\n\n  MaterialMenu.prototype.addAnimationEndListener_ = function () {\n    this.element_.addEventListener('transitionend', this.removeAnimationEndListener_);\n    this.element_.addEventListener('webkitTransitionEnd', this.removeAnimationEndListener_);\n  }; /**\n      * Displays the menu.\n      *\n      * @public\n      */\n\n  MaterialMenu.prototype.show = function (evt) {\n    if (this.element_ && this.container_ && this.outline_) {\n      // Measure the inner element.\n      var height = this.element_.getBoundingClientRect().height;\n      var width = this.element_.getBoundingClientRect().width; // Apply the inner element's size to the container and outline.\n\n      this.container_.style.width = width + 'px';\n      this.container_.style.height = height + 'px';\n      this.outline_.style.width = width + 'px';\n      this.outline_.style.height = height + 'px';\n      var transitionDuration = this.Constant_.TRANSITION_DURATION_SECONDS * this.Constant_.TRANSITION_DURATION_FRACTION; // Calculate transition delays for individual menu items, so that they fade\n      // in one at a time.\n\n      var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n\n      for (var i = 0; i < items.length; i++) {\n        var itemDelay = null;\n\n        if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT) || this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n          itemDelay = (height - items[i].offsetTop - items[i].offsetHeight) / height * transitionDuration + 's';\n        } else {\n          itemDelay = items[i].offsetTop / height * transitionDuration + 's';\n        }\n\n        items[i].style.transitionDelay = itemDelay;\n      } // Apply the initial clip to the text before we start animating.\n\n\n      this.applyClip_(height, width); // Wait for the next frame, turn on animation, and apply the final clip.\n      // Also make it visible. This triggers the transitions.\n\n      window.requestAnimationFrame(function () {\n        this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n        this.element_.style.clip = 'rect(0 ' + width + 'px ' + height + 'px 0)';\n        this.container_.classList.add(this.CssClasses_.IS_VISIBLE);\n      }.bind(this)); // Clean up after the animation is complete.\n\n      this.addAnimationEndListener_(); // Add a click listener to the document, to close the menu.\n\n      var callback = function (e) {\n        // Check to see if the document is processing the same event that\n        // displayed the menu in the first place. If so, do nothing.\n        // Also check to see if the menu is in the process of closing itself, and\n        // do nothing in that case.\n        // Also check if the clicked element is a menu item\n        // if so, do nothing.\n        if (e !== evt && !this.closing_ && e.target.parentNode !== this.element_) {\n          document.removeEventListener('click', callback);\n          this.hide();\n        }\n      }.bind(this);\n\n      document.addEventListener('click', callback);\n    }\n  };\n\n  MaterialMenu.prototype['show'] = MaterialMenu.prototype.show; /**\n                                                                 * Hides the menu.\n                                                                 *\n                                                                 * @public\n                                                                 */\n\n  MaterialMenu.prototype.hide = function () {\n    if (this.element_ && this.container_ && this.outline_) {\n      var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM); // Remove all transition delays; menu items fade out concurrently.\n\n      for (var i = 0; i < items.length; i++) {\n        items[i].style.removeProperty('transition-delay');\n      } // Measure the inner element.\n\n\n      var rect = this.element_.getBoundingClientRect();\n      var height = rect.height;\n      var width = rect.width; // Turn on animation, and apply the final clip. Also make invisible.\n      // This triggers the transitions.\n\n      this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n      this.applyClip_(height, width);\n      this.container_.classList.remove(this.CssClasses_.IS_VISIBLE); // Clean up after the animation is complete.\n\n      this.addAnimationEndListener_();\n    }\n  };\n\n  MaterialMenu.prototype['hide'] = MaterialMenu.prototype.hide; /**\n                                                                 * Displays or hides the menu, depending on current state.\n                                                                 *\n                                                                 * @public\n                                                                 */\n\n  MaterialMenu.prototype.toggle = function (evt) {\n    if (this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n      this.hide();\n    } else {\n      this.show(evt);\n    }\n  };\n\n  MaterialMenu.prototype['toggle'] = MaterialMenu.prototype.toggle; // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n\n  componentHandler.register({\n    constructor: MaterialMenu,\n    classAsString: 'MaterialMenu',\n    cssClass: 'mdl-js-menu',\n    widget: true\n  });\n})();","map":{"version":3,"sources":["packages/zodiase:mdl-assets/src/menu/menu.js"],"names":["MaterialMenu","element","element_","init","window","prototype","Constant_","TRANSITION_DURATION_SECONDS","TRANSITION_DURATION_FRACTION","CLOSE_TIMEOUT","Keycodes_","ENTER","ESCAPE","SPACE","UP_ARROW","DOWN_ARROW","CssClasses_","CONTAINER","OUTLINE","ITEM","ITEM_RIPPLE_CONTAINER","RIPPLE_EFFECT","RIPPLE_IGNORE_EVENTS","RIPPLE","IS_UPGRADED","IS_VISIBLE","IS_ANIMATING","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","UNALIGNED","container","document","createElement","classList","add","parentElement","insertBefore","removeChild","appendChild","container_","outline","outline_","forElId","getAttribute","forEl","getElementById","forElement_","addEventListener","handleForClick_","bind","handleForKeyboardEvent_","items","querySelectorAll","boundItemKeydown_","handleItemKeyboardEvent_","boundItemClick_","handleItemClick_","i","length","tabIndex","contains","item","rippleContainer","ripple","evt","rect","getBoundingClientRect","forRect","style","right","top","offsetTop","offsetHeight","left","offsetLeft","bottom","toggle","keyCode","preventDefault","focus","currentIndex","Array","slice","call","indexOf","target","e","MouseEvent","dispatchEvent","click","hide","hasAttribute","stopPropagation","closing_","setTimeout","applyClip_","height","width","clip","removeAnimationEndListener_","remove","addAnimationEndListener_","show","transitionDuration","itemDelay","transitionDelay","requestAnimationFrame","callback","parentNode","removeEventListener","removeProperty","componentHandler","register","constructor","classAsString","cssClass","widget"],"mappings":"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","file":"packages/zodiase:mdl-assets/src/menu/menu.js.map","sourcesContent":["/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for dropdown MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialMenu = function MaterialMenu(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialMenu'] = MaterialMenu;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialMenu.prototype.Constant_ = {\n    // Total duration of the menu animation.\n    TRANSITION_DURATION_SECONDS: 0.3,\n    // The fraction of the total duration we want to use for menu item animations.\n    TRANSITION_DURATION_FRACTION: 0.8,\n    // How long the menu stays open after choosing an option (so the user can see\n    // the ripple).\n    CLOSE_TIMEOUT: 150\n  };\n\n  /**\n   * Keycodes, for code readability.\n   *\n   * @enum {number}\n   * @private\n   */\n  MaterialMenu.prototype.Keycodes_ = {\n    ENTER: 13,\n    ESCAPE: 27,\n    SPACE: 32,\n    UP_ARROW: 38,\n    DOWN_ARROW: 40\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialMenu.prototype.CssClasses_ = {\n    CONTAINER: 'mdl-menu__container',\n    OUTLINE: 'mdl-menu__outline',\n    ITEM: 'mdl-menu__item',\n    ITEM_RIPPLE_CONTAINER: 'mdl-menu__item-ripple-container',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    // Statuses\n    IS_UPGRADED: 'is-upgraded',\n    IS_VISIBLE: 'is-visible',\n    IS_ANIMATING: 'is-animating',\n    // Alignment options\n    BOTTOM_LEFT: 'mdl-menu--bottom-left',  // This is the default.\n    BOTTOM_RIGHT: 'mdl-menu--bottom-right',\n    TOP_LEFT: 'mdl-menu--top-left',\n    TOP_RIGHT: 'mdl-menu--top-right',\n    UNALIGNED: 'mdl-menu--unaligned'\n  };\n\n  /**\n   * Initialize element.\n   */\n  MaterialMenu.prototype.init = function() {\n    if (this.element_) {\n      // Create container for the menu.\n      var container = document.createElement('div');\n      container.classList.add(this.CssClasses_.CONTAINER);\n      this.element_.parentElement.insertBefore(container, this.element_);\n      this.element_.parentElement.removeChild(this.element_);\n      container.appendChild(this.element_);\n      this.container_ = container;\n\n      // Create outline for the menu (shadow and background).\n      var outline = document.createElement('div');\n      outline.classList.add(this.CssClasses_.OUTLINE);\n      this.outline_ = outline;\n      container.insertBefore(outline, this.element_);\n\n      // Find the \"for\" element and bind events to it.\n      var forElId = this.element_.getAttribute('for') ||\n                      this.element_.getAttribute('data-mdl-for');\n      var forEl = null;\n      if (forElId) {\n        forEl = document.getElementById(forElId);\n        if (forEl) {\n          this.forElement_ = forEl;\n          forEl.addEventListener('click', this.handleForClick_.bind(this));\n          forEl.addEventListener('keydown',\n              this.handleForKeyboardEvent_.bind(this));\n        }\n      }\n\n      var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n      this.boundItemKeydown_ = this.handleItemKeyboardEvent_.bind(this);\n      this.boundItemClick_ = this.handleItemClick_.bind(this);\n      for (var i = 0; i < items.length; i++) {\n        // Add a listener to each menu item.\n        items[i].addEventListener('click', this.boundItemClick_);\n        // Add a tab index to each menu item.\n        items[i].tabIndex = '-1';\n        // Add a keyboard listener to each menu item.\n        items[i].addEventListener('keydown', this.boundItemKeydown_);\n      }\n\n      // Add ripple classes to each item, if the user has enabled ripples.\n      if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n        this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n\n        for (i = 0; i < items.length; i++) {\n          var item = items[i];\n\n          var rippleContainer = document.createElement('span');\n          rippleContainer.classList.add(this.CssClasses_.ITEM_RIPPLE_CONTAINER);\n\n          var ripple = document.createElement('span');\n          ripple.classList.add(this.CssClasses_.RIPPLE);\n          rippleContainer.appendChild(ripple);\n\n          item.appendChild(rippleContainer);\n          item.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n        }\n      }\n\n      // Copy alignment classes to the container, so the outline can use them.\n      if (this.element_.classList.contains(this.CssClasses_.BOTTOM_LEFT)) {\n        this.outline_.classList.add(this.CssClasses_.BOTTOM_LEFT);\n      }\n      if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n        this.outline_.classList.add(this.CssClasses_.BOTTOM_RIGHT);\n      }\n      if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n        this.outline_.classList.add(this.CssClasses_.TOP_LEFT);\n      }\n      if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n        this.outline_.classList.add(this.CssClasses_.TOP_RIGHT);\n      }\n      if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n        this.outline_.classList.add(this.CssClasses_.UNALIGNED);\n      }\n\n      container.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n  };\n\n  /**\n   * Handles a click on the \"for\" element, by positioning the menu and then\n   * toggling it.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\n  MaterialMenu.prototype.handleForClick_ = function(evt) {\n    if (this.element_ && this.forElement_) {\n      var rect = this.forElement_.getBoundingClientRect();\n      var forRect = this.forElement_.parentElement.getBoundingClientRect();\n\n      if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n        // Do not position the menu automatically. Requires the developer to\n        // manually specify position.\n      } else if (this.element_.classList.contains(\n          this.CssClasses_.BOTTOM_RIGHT)) {\n        // Position below the \"for\" element, aligned to its right.\n        this.container_.style.right = (forRect.right - rect.right) + 'px';\n        this.container_.style.top =\n            this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n      } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n        // Position above the \"for\" element, aligned to its left.\n        this.container_.style.left = this.forElement_.offsetLeft + 'px';\n        this.container_.style.bottom = (forRect.bottom - rect.top) + 'px';\n      } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n        // Position above the \"for\" element, aligned to its right.\n        this.container_.style.right = (forRect.right - rect.right) + 'px';\n        this.container_.style.bottom = (forRect.bottom - rect.top) + 'px';\n      } else {\n        // Default: position below the \"for\" element, aligned to its left.\n        this.container_.style.left = this.forElement_.offsetLeft + 'px';\n        this.container_.style.top =\n            this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n      }\n    }\n\n    this.toggle(evt);\n  };\n\n  /**\n   * Handles a keyboard event on the \"for\" element.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\n  MaterialMenu.prototype.handleForKeyboardEvent_ = function(evt) {\n    if (this.element_ && this.container_ && this.forElement_) {\n      var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM +\n        ':not([disabled])');\n\n      if (items && items.length > 0 &&\n          this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n        if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n          evt.preventDefault();\n          items[items.length - 1].focus();\n        } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n          evt.preventDefault();\n          items[0].focus();\n        }\n      }\n    }\n  };\n\n  /**\n   * Handles a keyboard event on an item.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\n  MaterialMenu.prototype.handleItemKeyboardEvent_ = function(evt) {\n    if (this.element_ && this.container_) {\n      var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM +\n        ':not([disabled])');\n\n      if (items && items.length > 0 &&\n          this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n        var currentIndex = Array.prototype.slice.call(items).indexOf(evt.target);\n\n        if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n          evt.preventDefault();\n          if (currentIndex > 0) {\n            items[currentIndex - 1].focus();\n          } else {\n            items[items.length - 1].focus();\n          }\n        } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n          evt.preventDefault();\n          if (items.length > currentIndex + 1) {\n            items[currentIndex + 1].focus();\n          } else {\n            items[0].focus();\n          }\n        } else if (evt.keyCode === this.Keycodes_.SPACE ||\n              evt.keyCode === this.Keycodes_.ENTER) {\n          evt.preventDefault();\n          // Send mousedown and mouseup to trigger ripple.\n          var e = new MouseEvent('mousedown');\n          evt.target.dispatchEvent(e);\n          e = new MouseEvent('mouseup');\n          evt.target.dispatchEvent(e);\n          // Send click.\n          evt.target.click();\n        } else if (evt.keyCode === this.Keycodes_.ESCAPE) {\n          evt.preventDefault();\n          this.hide();\n        }\n      }\n    }\n  };\n\n  /**\n   * Handles a click event on an item.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\n  MaterialMenu.prototype.handleItemClick_ = function(evt) {\n    if (evt.target.hasAttribute('disabled')) {\n      evt.stopPropagation();\n    } else {\n      // Wait some time before closing menu, so the user can see the ripple.\n      this.closing_ = true;\n      window.setTimeout(function(evt) {\n        this.hide();\n        this.closing_ = false;\n      }.bind(this), /** @type {number} */ (this.Constant_.CLOSE_TIMEOUT));\n    }\n  };\n\n  /**\n   * Calculates the initial clip (for opening the menu) or final clip (for closing\n   * it), and applies it. This allows us to animate from or to the correct point,\n   * that is, the point it's aligned to in the \"for\" element.\n   *\n   * @param {number} height Height of the clip rectangle\n   * @param {number} width Width of the clip rectangle\n   * @private\n   */\n  MaterialMenu.prototype.applyClip_ = function(height, width) {\n    if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n      // Do not clip.\n      this.element_.style.clip = '';\n    } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n      // Clip to the top right corner of the menu.\n      this.element_.style.clip =\n          'rect(0 ' + width + 'px ' + '0 ' + width + 'px)';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n      // Clip to the bottom left corner of the menu.\n      this.element_.style.clip =\n          'rect(' + height + 'px 0 ' + height + 'px 0)';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n      // Clip to the bottom right corner of the menu.\n      this.element_.style.clip = 'rect(' + height + 'px ' + width + 'px ' +\n          height + 'px ' + width + 'px)';\n    } else {\n      // Default: do not clip (same as clipping to the top left corner).\n      this.element_.style.clip = '';\n    }\n  };\n\n  /**\n   * Cleanup function to remove animation listeners.\n   *\n   * @param {Event} evt\n   * @private\n   */\n\n  MaterialMenu.prototype.removeAnimationEndListener_ = function(evt) {\n    evt.target.classList.remove(MaterialMenu.prototype.CssClasses_.IS_ANIMATING);\n  };\n\n  /**\n   * Adds an event listener to clean up after the animation ends.\n   *\n   * @private\n   */\n  MaterialMenu.prototype.addAnimationEndListener_ = function() {\n    this.element_.addEventListener('transitionend', this.removeAnimationEndListener_);\n    this.element_.addEventListener('webkitTransitionEnd', this.removeAnimationEndListener_);\n  };\n\n  /**\n   * Displays the menu.\n   *\n   * @public\n   */\n  MaterialMenu.prototype.show = function(evt) {\n    if (this.element_ && this.container_ && this.outline_) {\n      // Measure the inner element.\n      var height = this.element_.getBoundingClientRect().height;\n      var width = this.element_.getBoundingClientRect().width;\n\n      // Apply the inner element's size to the container and outline.\n      this.container_.style.width = width + 'px';\n      this.container_.style.height = height + 'px';\n      this.outline_.style.width = width + 'px';\n      this.outline_.style.height = height + 'px';\n\n      var transitionDuration = this.Constant_.TRANSITION_DURATION_SECONDS *\n          this.Constant_.TRANSITION_DURATION_FRACTION;\n\n      // Calculate transition delays for individual menu items, so that they fade\n      // in one at a time.\n      var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n      for (var i = 0; i < items.length; i++) {\n        var itemDelay = null;\n        if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT) ||\n            this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n          itemDelay = ((height - items[i].offsetTop - items[i].offsetHeight) /\n              height * transitionDuration) + 's';\n        } else {\n          itemDelay = (items[i].offsetTop / height * transitionDuration) + 's';\n        }\n        items[i].style.transitionDelay = itemDelay;\n      }\n\n      // Apply the initial clip to the text before we start animating.\n      this.applyClip_(height, width);\n\n      // Wait for the next frame, turn on animation, and apply the final clip.\n      // Also make it visible. This triggers the transitions.\n      window.requestAnimationFrame(function() {\n        this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n        this.element_.style.clip = 'rect(0 ' + width + 'px ' + height + 'px 0)';\n        this.container_.classList.add(this.CssClasses_.IS_VISIBLE);\n      }.bind(this));\n\n      // Clean up after the animation is complete.\n      this.addAnimationEndListener_();\n\n      // Add a click listener to the document, to close the menu.\n      var callback = function(e) {\n        // Check to see if the document is processing the same event that\n        // displayed the menu in the first place. If so, do nothing.\n        // Also check to see if the menu is in the process of closing itself, and\n        // do nothing in that case.\n        // Also check if the clicked element is a menu item\n        // if so, do nothing.\n        if (e !== evt && !this.closing_ && e.target.parentNode !== this.element_) {\n          document.removeEventListener('click', callback);\n          this.hide();\n        }\n      }.bind(this);\n      document.addEventListener('click', callback);\n    }\n  };\n  MaterialMenu.prototype['show'] = MaterialMenu.prototype.show;\n\n  /**\n   * Hides the menu.\n   *\n   * @public\n   */\n  MaterialMenu.prototype.hide = function() {\n    if (this.element_ && this.container_ && this.outline_) {\n      var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n\n      // Remove all transition delays; menu items fade out concurrently.\n      for (var i = 0; i < items.length; i++) {\n        items[i].style.removeProperty('transition-delay');\n      }\n\n      // Measure the inner element.\n      var rect = this.element_.getBoundingClientRect();\n      var height = rect.height;\n      var width = rect.width;\n\n      // Turn on animation, and apply the final clip. Also make invisible.\n      // This triggers the transitions.\n      this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n      this.applyClip_(height, width);\n      this.container_.classList.remove(this.CssClasses_.IS_VISIBLE);\n\n      // Clean up after the animation is complete.\n      this.addAnimationEndListener_();\n    }\n  };\n  MaterialMenu.prototype['hide'] = MaterialMenu.prototype.hide;\n\n  /**\n   * Displays or hides the menu, depending on current state.\n   *\n   * @public\n   */\n  MaterialMenu.prototype.toggle = function(evt) {\n    if (this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n      this.hide();\n    } else {\n      this.show(evt);\n    }\n  };\n  MaterialMenu.prototype['toggle'] = MaterialMenu.prototype.toggle;\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialMenu,\n    classAsString: 'MaterialMenu',\n    cssClass: 'mdl-js-menu',\n    widget: true\n  });\n})();\n"]},"hash":"4f960fd54d4cd7d58bb31cfab38b11aac1daf20f"}
