{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"lib/router.js","filenameRelative":"lib/router.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"lib/router.js.map","sourceFileName":"lib/router.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"router"},"ignored":false,"code":"var Meteor = void 0;\nmodule.watch(require(\"meteor/meteor\"), {\n    Meteor: function (v) {\n        Meteor = v;\n    }\n}, 0);\nRouter.configure({\n    layoutTemplate: 'layout'\n});\nRouter.route('/', {\n    name: 'home'\n});\nRouter.route('/tuto', {\n    name: 'tuto'\n});\nRouter.route('/exo', {\n    name: 'exo'\n});\nRouter.route('/DL', {\n    name: 'DL'\n});\nRouter.route('/AP', {\n    name: 'AP'\n});\nRouter.route('/VPN', {\n    name: 'VPN'\n});\nRouter.route('/CTC', {\n    name: 'contact'\n});\nRouter.route('/FLC', {\n    name: 'FLC'\n});\nRouter.route('/Note', function () {\n    this.render('Note', {\n        data: function () {\n            return Tasks.findOne({\n                _id: this.params._id\n            });\n        }\n    });\n}); // PostsListController = RouteController.extend({\n//     template: 'postsList',\n//     increment: 5,\n//     postsLimit: function() {\n//         return parseInt(this.params.postsLimit) || this.increment;\n//     },\n//     findOptions: function() {\n//         return {sort: this.sort, limit: this.postsLimit()};\n//     },\n//     subscriptions: function() {\n//         this.postsSub = Meteor.subscribe('posts', this.findOptions());\n//     },\n//     posts: function() {\n//         return Posts.find({}, this.findOptions());\n//     },\n//     data: function() {\n//         var self = this;\n//         return {\n//             posts: self.posts(),\n//             ready: self.postsSub.ready,\n//             nextPath: function() {\n//                 if (self.posts().count() === self.postsLimit())\n//                     return self.nextPath();\n//             }\n//         };\n//     }\n// });\n//\n// NewPostsController = PostsListController.extend({\n//     sort: {submitted: -1, _id: -1},\n//     nextPath: function() {\n//         return Router.routes.newPosts.path({postsLimit: this.postsLimit() + this.increment})\n//     }\n// });\n//\n// BestPostsController = PostsListController.extend({\n//     sort: {votes: -1, submitted: -1, _id: -1},\n//     nextPath: function() {\n//         return Router.routes.bestPosts.path({postsLimit: this.postsLimit() + this.increment})\n//     }\n// });\n//\n// Router.route('/pub', {\n//     name: 'publication',\n//     controller: NewPostsController\n// });\n//\n// Router.route('/new/:postsLimit?', {name: 'newPosts'});\n//\n// Router.route('/best/:postsLimit?', {name: 'bestPosts'});\n//\n//\n// Router.route('/posts/:_id', {\n//     name: 'postPage',\n//     waitOn: function() {\n//         return [\n//             Meteor.subscribe('singlePost', this.params._id),\n//             Meteor.subscribe('comments', this.params._id)\n//         ];\n//     },\n//     data: function() { return Posts.findOne(this.params._id); }\n// });\n//\n// Router.route('/posts/:_id/edit', {\n//     name: 'postEdit',\n//     waitOn: function() {\n//         return Meteor.subscribe('singlePost', this.params._id);\n//     },\n//     data: function() { return Posts.findOne(this.params._id); }\n// });\n//\n// Router.route('/submit', {name: 'postSubmit'});","map":{"version":3,"sources":["lib/router.js"],"names":["Meteor","module","watch","require","v","Router","configure","layoutTemplate","route","name","render","data","Tasks","findOne","_id","params"],"mappings":"AAAA,IAAIA,eAAJ;AAAWC,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACH,UAAD,YAAQI,CAAR,EAAU;AAACJ,iBAAOI,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAEXC,OAAOC,SAAP,CAAiB;AACbC,oBAAgB;AADH,CAAjB;AAKAF,OAAOG,KAAP,CAAa,GAAb,EAAkB;AAACC,UAAO;AAAR,CAAlB;AACAJ,OAAOG,KAAP,CAAa,OAAb,EAAsB;AAACC,UAAO;AAAR,CAAtB;AACAJ,OAAOG,KAAP,CAAa,MAAb,EAAqB;AAACC,UAAO;AAAR,CAArB;AACAJ,OAAOG,KAAP,CAAa,KAAb,EAAoB;AAACC,UAAO;AAAR,CAApB;AACAJ,OAAOG,KAAP,CAAa,KAAb,EAAoB;AAACC,UAAO;AAAR,CAApB;AACAJ,OAAOG,KAAP,CAAa,MAAb,EAAqB;AAACC,UAAO;AAAR,CAArB;AACAJ,OAAOG,KAAP,CAAa,MAAb,EAAqB;AAACC,UAAO;AAAR,CAArB;AACAJ,OAAOG,KAAP,CAAa,MAAb,EAAqB;AAACC,UAAO;AAAR,CAArB;AACAJ,OAAOG,KAAP,CAAa,OAAb,EAAsB,YAAY;AAC9B,SAAKE,MAAL,CAAY,MAAZ,EAAoB;AACjBC,cAAO,YAAY;AAAE,mBAAOC,MAAMC,OAAN,CAAc;AAACC,qBAAK,KAAKC,MAAL,CAAYD;AAAlB,aAAd,CAAP;AAA+C;AADnD,KAApB;AAGH,CAJD,E,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"lib/router.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nRouter.configure({\n    layoutTemplate: 'layout'\n\n});\n\nRouter.route('/', {name : 'home'})\nRouter.route('/tuto', {name : 'tuto'});\nRouter.route('/exo', {name : 'exo'});\nRouter.route('/DL', {name : 'DL'});\nRouter.route('/AP', {name : 'AP'});\nRouter.route('/VPN', {name : 'VPN'});\nRouter.route('/CTC', {name : 'contact'});\nRouter.route('/FLC', {name : 'FLC'});\nRouter.route('/Note', function () {\n    this.render('Note', {\n       data : function () { return Tasks.findOne({_id: this.params._id}); }\n    });\n});\n\n\n\n\n// PostsListController = RouteController.extend({\n//     template: 'postsList',\n//     increment: 5,\n//     postsLimit: function() {\n//         return parseInt(this.params.postsLimit) || this.increment;\n//     },\n//     findOptions: function() {\n//         return {sort: this.sort, limit: this.postsLimit()};\n//     },\n//     subscriptions: function() {\n//         this.postsSub = Meteor.subscribe('posts', this.findOptions());\n//     },\n//     posts: function() {\n//         return Posts.find({}, this.findOptions());\n//     },\n//     data: function() {\n//         var self = this;\n//         return {\n//             posts: self.posts(),\n//             ready: self.postsSub.ready,\n//             nextPath: function() {\n//                 if (self.posts().count() === self.postsLimit())\n//                     return self.nextPath();\n//             }\n//         };\n//     }\n// });\n//\n// NewPostsController = PostsListController.extend({\n//     sort: {submitted: -1, _id: -1},\n//     nextPath: function() {\n//         return Router.routes.newPosts.path({postsLimit: this.postsLimit() + this.increment})\n//     }\n// });\n//\n// BestPostsController = PostsListController.extend({\n//     sort: {votes: -1, submitted: -1, _id: -1},\n//     nextPath: function() {\n//         return Router.routes.bestPosts.path({postsLimit: this.postsLimit() + this.increment})\n//     }\n// });\n//\n// Router.route('/pub', {\n//     name: 'publication',\n//     controller: NewPostsController\n// });\n//\n// Router.route('/new/:postsLimit?', {name: 'newPosts'});\n//\n// Router.route('/best/:postsLimit?', {name: 'bestPosts'});\n//\n//\n// Router.route('/posts/:_id', {\n//     name: 'postPage',\n//     waitOn: function() {\n//         return [\n//             Meteor.subscribe('singlePost', this.params._id),\n//             Meteor.subscribe('comments', this.params._id)\n//         ];\n//     },\n//     data: function() { return Posts.findOne(this.params._id); }\n// });\n//\n// Router.route('/posts/:_id/edit', {\n//     name: 'postEdit',\n//     waitOn: function() {\n//         return Meteor.subscribe('singlePost', this.params._id);\n//     },\n//     data: function() { return Posts.findOne(this.params._id); }\n// });\n//\n// Router.route('/submit', {name: 'postSubmit'});\n\n\n\n\n"]},"hash":"5a103ad47837d829fdeaf2b9f7797322e0157d95"}
