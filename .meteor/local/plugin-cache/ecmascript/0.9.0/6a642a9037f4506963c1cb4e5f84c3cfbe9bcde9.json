{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"lib/collections/notifications.js","filenameRelative":"lib/collections/notifications.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"lib/collections/notifications.js.map","sourceFileName":"lib/collections/notifications.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"notifications"},"ignored":false,"code":"Notifications = new Mongo.Collection('notifications');\nNotifications.allow({\n  update: function (userId, doc, fieldNames) {\n    return ownsDocument(userId, doc) && fieldNames.length === 1 && fieldNames[0] === 'read';\n  }\n});\n\ncreateCommentNotification = function (comment) {\n  var post = Posts.findOne(comment.postId);\n\n  if (comment.userId !== post.userId) {\n    Notifications.insert({\n      userId: post.userId,\n      postId: post._id,\n      commentId: comment._id,\n      commenterName: comment.author,\n      read: false\n    });\n  }\n};","map":{"version":3,"sources":["lib/collections/notifications.js"],"names":["Notifications","Mongo","Collection","allow","update","userId","doc","fieldNames","ownsDocument","length","createCommentNotification","comment","post","Posts","findOne","postId","insert","_id","commentId","commenterName","author","read"],"mappings":"AAAAA,gBAAgB,IAAIC,MAAMC,UAAV,CAAqB,eAArB,CAAhB;AAEAF,cAAcG,KAAd,CAAoB;AAClBC,UAAQ,UAASC,MAAT,EAAiBC,GAAjB,EAAsBC,UAAtB,EAAkC;AACxC,WAAOC,aAAaH,MAAb,EAAqBC,GAArB,KACLC,WAAWE,MAAX,KAAsB,CADjB,IACsBF,WAAW,CAAX,MAAkB,MAD/C;AAED;AAJiB,CAApB;;AAOAG,4BAA4B,UAASC,OAAT,EAAkB;AAC5C,MAAIC,OAAOC,MAAMC,OAAN,CAAcH,QAAQI,MAAtB,CAAX;;AACA,MAAIJ,QAAQN,MAAR,KAAmBO,KAAKP,MAA5B,EAAoC;AAClCL,kBAAcgB,MAAd,CAAqB;AACnBX,cAAQO,KAAKP,MADM;AAEnBU,cAAQH,KAAKK,GAFM;AAGnBC,iBAAWP,QAAQM,GAHA;AAInBE,qBAAeR,QAAQS,MAJJ;AAKnBC,YAAM;AALa,KAArB;AAOD;AACF,CAXD","file":"lib/collections/notifications.js.map","sourcesContent":["Notifications = new Mongo.Collection('notifications');\n\nNotifications.allow({\n  update: function(userId, doc, fieldNames) {\n    return ownsDocument(userId, doc) && \n      fieldNames.length === 1 && fieldNames[0] === 'read';\n  }\n});\n\ncreateCommentNotification = function(comment) {\n  var post = Posts.findOne(comment.postId);\n  if (comment.userId !== post.userId) {\n    Notifications.insert({\n      userId: post.userId,\n      postId: post._id,\n      commentId: comment._id,\n      commenterName: comment.author,\n      read: false\n    });\n  }\n};"]},"hash":"6a642a9037f4506963c1cb4e5f84c3cfbe9bcde9"}
