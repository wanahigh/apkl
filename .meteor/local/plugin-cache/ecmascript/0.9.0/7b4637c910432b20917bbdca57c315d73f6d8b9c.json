{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"server/SearchEngine.js","filenameRelative":"server/SearchEngine.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"server/SearchEngine.js.map","sourceFileName":"server/SearchEngine.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"SearchEngine"},"ignored":false,"code":"// Client side Algolia example. It doesn't use or need for the server side code.\nif (Meteor.isClient) {\n    Session.setDefault('content', []);\n    Meteor.startup(function () {\n        var client = AlgoliaSearch('latency', 'dce4286c2833e8cf4b7b1f2d3fa1dbcb');\n        var index = client.initIndex('movies');\n        console.log('Searching \"ace\" movies...');\n        index.search('ace', function searchDone(err, content) {\n            if (err) {\n                console.error('Algolia returned an error', err);\n            } else {\n                console.log('Received ' + content.nbHits + ' results.');\n                Session.set('content', content);\n            }\n        });\n    });\n    Template.movies.helpers({\n        content: function () {\n            return Session.get('content');\n        }\n    });\n} ////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////\n// Server side Algolia example. It doesn't use or need for the client side code.\n\n\nif (Meteor.isServer) {\n    Meteor.startup(function () {\n        var client = AlgoliaSearch('latency', 'dce4286c2833e8cf4b7b1f2d3fa1dbcb');\n        var index = client.initIndex('movies');\n        console.log('Searching \"ace\" movies...');\n        index.search('ace', function searchDone(err, content) {\n            if (err) {\n                console.error('Algolia returned an error', err);\n            } else {\n                //console.log('content', content);\n                console.log(content.nbHits + ' results. Here are the ' + content.hitsPerPage + ' first:');\n\n                _.each(content.hits, function (m) {\n                    console.log('- ', m.title, m.year);\n                });\n            }\n        });\n    });\n}","map":{"version":3,"sources":["server/SearchEngine.js"],"names":["Meteor","isClient","Session","setDefault","startup","client","AlgoliaSearch","index","initIndex","console","log","search","searchDone","err","content","error","nbHits","set","Template","movies","helpers","get","isServer","hitsPerPage","_","each","hits","m","title","year"],"mappings":"AAAA;AACA,IAAIA,OAAOC,QAAX,EAAqB;AACjBC,YAAQC,UAAR,CAAmB,SAAnB,EAA8B,EAA9B;AAEAH,WAAOI,OAAP,CAAe,YAAY;AACvB,YAAIC,SAASC,cAAc,SAAd,EAAyB,kCAAzB,CAAb;AACA,YAAIC,QAAQF,OAAOG,SAAP,CAAiB,QAAjB,CAAZ;AACAC,gBAAQC,GAAR,CAAY,2BAAZ;AACAH,cAAMI,MAAN,CAAa,KAAb,EAAoB,SAASC,UAAT,CAAoBC,GAApB,EAAyBC,OAAzB,EAAkC;AAClD,gBAAGD,GAAH,EAAQ;AAAEJ,wBAAQM,KAAR,CAAc,2BAAd,EAA2CF,GAA3C;AAAkD,aAA5D,MACK;AACDJ,wBAAQC,GAAR,CAAY,cAAcI,QAAQE,MAAtB,GAA+B,WAA3C;AACAd,wBAAQe,GAAR,CAAY,SAAZ,EAAuBH,OAAvB;AACH;AACJ,SAND;AAOH,KAXD;AAaAI,aAASC,MAAT,CAAgBC,OAAhB,CAAwB;AACpBN,iBAAS,YAAY;AACjB,mBAAOZ,QAAQmB,GAAR,CAAY,SAAZ,CAAP;AACH;AAHmB,KAAxB;AAKH,C,CAED;AACA;AACA;AACA;AAEA;;;AACA,IAAIrB,OAAOsB,QAAX,EAAqB;AACjBtB,WAAOI,OAAP,CAAe,YAAY;AACvB,YAAIC,SAASC,cAAc,SAAd,EAAyB,kCAAzB,CAAb;AACA,YAAIC,QAAQF,OAAOG,SAAP,CAAiB,QAAjB,CAAZ;AACAC,gBAAQC,GAAR,CAAY,2BAAZ;AACAH,cAAMI,MAAN,CAAa,KAAb,EAAoB,SAASC,UAAT,CAAoBC,GAApB,EAAyBC,OAAzB,EAAkC;AAClD,gBAAGD,GAAH,EAAQ;AAAEJ,wBAAQM,KAAR,CAAc,2BAAd,EAA2CF,GAA3C;AAAkD,aAA5D,MACK;AACD;AACAJ,wBAAQC,GAAR,CAAYI,QAAQE,MAAR,GAAiB,yBAAjB,GAA6CF,QAAQS,WAArD,GAAmE,SAA/E;;AACAC,kBAAEC,IAAF,CAAOX,QAAQY,IAAf,EAAqB,UAAUC,CAAV,EAAa;AAC9BlB,4BAAQC,GAAR,CAAY,IAAZ,EAAkBiB,EAAEC,KAApB,EAA2BD,EAAEE,IAA7B;AACH,iBAFD;AAGH;AACJ,SATD;AAUH,KAdD;AAeH","file":"server/SearchEngine.js.map","sourcesContent":["// Client side Algolia example. It doesn't use or need for the server side code.\nif (Meteor.isClient) {\n    Session.setDefault('content', []);\n\n    Meteor.startup(function () {\n        var client = AlgoliaSearch('latency', 'dce4286c2833e8cf4b7b1f2d3fa1dbcb');\n        var index = client.initIndex('movies');\n        console.log('Searching \"ace\" movies...');\n        index.search('ace', function searchDone(err, content) {\n            if(err) { console.error('Algolia returned an error', err); }\n            else {\n                console.log('Received ' + content.nbHits + ' results.');\n                Session.set('content', content);\n            }\n        });\n    });\n\n    Template.movies.helpers({\n        content: function () {\n            return Session.get('content');\n        }\n    });\n}\n\n////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////\n\n// Server side Algolia example. It doesn't use or need for the client side code.\nif (Meteor.isServer) {\n    Meteor.startup(function () {\n        var client = AlgoliaSearch('latency', 'dce4286c2833e8cf4b7b1f2d3fa1dbcb');\n        var index = client.initIndex('movies');\n        console.log('Searching \"ace\" movies...');\n        index.search('ace', function searchDone(err, content) {\n            if(err) { console.error('Algolia returned an error', err); }\n            else {\n                //console.log('content', content);\n                console.log(content.nbHits + ' results. Here are the ' + content.hitsPerPage + ' first:');\n                _.each(content.hits, function (m) {\n                    console.log('- ', m.title, m.year);\n                });\n            }\n        });\n    });\n}"]},"hash":"7b4637c910432b20917bbdca57c315d73f6d8b9c"}
