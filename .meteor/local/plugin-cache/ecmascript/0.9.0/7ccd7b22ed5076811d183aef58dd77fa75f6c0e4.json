{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/zodiase:mdl-assets/src/tabs/tabs.js","filenameRelative":"packages/zodiase:mdl-assets/src/tabs/tabs.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zodiase:mdl-assets/src/tabs/tabs.js.map","sourceFileName":"packages/zodiase:mdl-assets/src/tabs/tabs.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"tabs"},"ignored":false,"code":"/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */(function () {\n  'use strict'; /**\n                 * Class constructor for Tabs MDL component.\n                 * Implements MDL component design pattern defined at:\n                 * https://github.com/jasonmayes/mdl-component-design-pattern\n                 *\n                 * @constructor\n                 * @param {Element} element The element that will be upgraded.\n                 */\n\n  var MaterialTabs = function () {\n    function MaterialTabs(element) {\n      // Stores the HTML element.\n      this.element_ = element; // Initialize instance.\n\n      this.init();\n    }\n\n    return MaterialTabs;\n  }();\n\n  window['MaterialTabs'] = MaterialTabs; /**\n                                          * Store constants in one place so they can be updated easily.\n                                          *\n                                          * @enum {string}\n                                          * @private\n                                          */\n  MaterialTabs.prototype.Constant_ = {// None at the moment.\n  }; /**\n      * Store strings for class names defined by this component that are used in\n      * JavaScript. This allows us to simply change it in one place should we\n      * decide to modify at a later date.\n      *\n      * @enum {string}\n      * @private\n      */\n  MaterialTabs.prototype.CssClasses_ = {\n    TAB_CLASS: 'mdl-tabs__tab',\n    PANEL_CLASS: 'mdl-tabs__panel',\n    ACTIVE_CLASS: 'is-active',\n    UPGRADED_CLASS: 'is-upgraded',\n    MDL_JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    MDL_RIPPLE_CONTAINER: 'mdl-tabs__ripple-container',\n    MDL_RIPPLE: 'mdl-ripple',\n    MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events'\n  }; /**\n      * Handle clicks to a tabs component\n      *\n      * @private\n      */\n\n  MaterialTabs.prototype.initTabs_ = function () {\n    if (this.element_.classList.contains(this.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n      this.element_.classList.add(this.CssClasses_.MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS);\n    } // Select element tabs, document panels\n\n\n    this.tabs_ = this.element_.querySelectorAll('.' + this.CssClasses_.TAB_CLASS);\n    this.panels_ = this.element_.querySelectorAll('.' + this.CssClasses_.PANEL_CLASS); // Create new tabs for each tab element\n\n    for (var i = 0; i < this.tabs_.length; i++) {\n      new MaterialTab(this.tabs_[i], this);\n    }\n\n    this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS);\n  }; /**\n      * Reset tab state, dropping active classes\n      *\n      * @private\n      */\n\n  MaterialTabs.prototype.resetTabState_ = function () {\n    for (var k = 0; k < this.tabs_.length; k++) {\n      this.tabs_[k].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n    }\n  }; /**\n      * Reset panel state, droping active classes\n      *\n      * @private\n      */\n\n  MaterialTabs.prototype.resetPanelState_ = function () {\n    for (var j = 0; j < this.panels_.length; j++) {\n      this.panels_[j].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n    }\n  }; /**\n      * Initialize element.\n      */\n\n  MaterialTabs.prototype.init = function () {\n    if (this.element_) {\n      this.initTabs_();\n    }\n  }; /**\n      * Constructor for an individual tab.\n      *\n      * @constructor\n      * @param {Element} tab The HTML element for the tab.\n      * @param {MaterialTabs} ctx The MaterialTabs object that owns the tab.\n      */\n\n  function MaterialTab(tab, ctx) {\n    if (tab) {\n      if (ctx.element_.classList.contains(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n        var rippleContainer = document.createElement('span');\n        rippleContainer.classList.add(ctx.CssClasses_.MDL_RIPPLE_CONTAINER);\n        rippleContainer.classList.add(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT);\n        var ripple = document.createElement('span');\n        ripple.classList.add(ctx.CssClasses_.MDL_RIPPLE);\n        rippleContainer.appendChild(ripple);\n        tab.appendChild(rippleContainer);\n      }\n\n      tab.addEventListener('click', function (e) {\n        if (tab.getAttribute('href').charAt(0) === '#') {\n          e.preventDefault();\n          var href = tab.href.split('#')[1];\n          var panel = ctx.element_.querySelector('#' + href);\n          ctx.resetTabState_();\n          ctx.resetPanelState_();\n          tab.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n          panel.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n        }\n      });\n    }\n  } // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n\n\n  componentHandler.register({\n    constructor: MaterialTabs,\n    classAsString: 'MaterialTabs',\n    cssClass: 'mdl-js-tabs'\n  });\n})();","map":{"version":3,"sources":["packages/zodiase:mdl-assets/src/tabs/tabs.js"],"names":["MaterialTabs","element","element_","init","window","prototype","Constant_","CssClasses_","TAB_CLASS","PANEL_CLASS","ACTIVE_CLASS","UPGRADED_CLASS","MDL_JS_RIPPLE_EFFECT","MDL_RIPPLE_CONTAINER","MDL_RIPPLE","MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS","initTabs_","classList","contains","add","tabs_","querySelectorAll","panels_","i","length","MaterialTab","resetTabState_","k","remove","resetPanelState_","j","tab","ctx","rippleContainer","document","createElement","ripple","appendChild","addEventListener","e","getAttribute","charAt","preventDefault","href","split","panel","querySelector","componentHandler","register","constructor","classAsString","cssClass"],"mappings":"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","file":"packages/zodiase:mdl-assets/src/tabs/tabs.js.map","sourcesContent":["/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Tabs MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {Element} element The element that will be upgraded.\n   */\n  var MaterialTabs = function MaterialTabs(element) {\n    // Stores the HTML element.\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialTabs'] = MaterialTabs;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialTabs.prototype.Constant_ = {\n    // None at the moment.\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialTabs.prototype.CssClasses_ = {\n    TAB_CLASS: 'mdl-tabs__tab',\n    PANEL_CLASS: 'mdl-tabs__panel',\n    ACTIVE_CLASS: 'is-active',\n    UPGRADED_CLASS: 'is-upgraded',\n\n    MDL_JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    MDL_RIPPLE_CONTAINER: 'mdl-tabs__ripple-container',\n    MDL_RIPPLE: 'mdl-ripple',\n    MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events'\n  };\n\n  /**\n   * Handle clicks to a tabs component\n   *\n   * @private\n   */\n  MaterialTabs.prototype.initTabs_ = function() {\n    if (this.element_.classList.contains(this.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n      this.element_.classList.add(\n        this.CssClasses_.MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS);\n    }\n\n    // Select element tabs, document panels\n    this.tabs_ = this.element_.querySelectorAll('.' + this.CssClasses_.TAB_CLASS);\n    this.panels_ =\n        this.element_.querySelectorAll('.' + this.CssClasses_.PANEL_CLASS);\n\n    // Create new tabs for each tab element\n    for (var i = 0; i < this.tabs_.length; i++) {\n      new MaterialTab(this.tabs_[i], this);\n    }\n\n    this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS);\n  };\n\n  /**\n   * Reset tab state, dropping active classes\n   *\n   * @private\n   */\n  MaterialTabs.prototype.resetTabState_ = function() {\n    for (var k = 0; k < this.tabs_.length; k++) {\n      this.tabs_[k].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n    }\n  };\n\n  /**\n   * Reset panel state, droping active classes\n   *\n   * @private\n   */\n  MaterialTabs.prototype.resetPanelState_ = function() {\n    for (var j = 0; j < this.panels_.length; j++) {\n      this.panels_[j].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n    }\n  };\n\n  /**\n   * Initialize element.\n   */\n  MaterialTabs.prototype.init = function() {\n    if (this.element_) {\n      this.initTabs_();\n    }\n  };\n\n  /**\n   * Constructor for an individual tab.\n   *\n   * @constructor\n   * @param {Element} tab The HTML element for the tab.\n   * @param {MaterialTabs} ctx The MaterialTabs object that owns the tab.\n   */\n  function MaterialTab(tab, ctx) {\n    if (tab) {\n      if (ctx.element_.classList.contains(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n        var rippleContainer = document.createElement('span');\n        rippleContainer.classList.add(ctx.CssClasses_.MDL_RIPPLE_CONTAINER);\n        rippleContainer.classList.add(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT);\n        var ripple = document.createElement('span');\n        ripple.classList.add(ctx.CssClasses_.MDL_RIPPLE);\n        rippleContainer.appendChild(ripple);\n        tab.appendChild(rippleContainer);\n      }\n\n      tab.addEventListener('click', function(e) {\n        if (tab.getAttribute('href').charAt(0) === '#') {\n          e.preventDefault();\n          var href = tab.href.split('#')[1];\n          var panel = ctx.element_.querySelector('#' + href);\n          ctx.resetTabState_();\n          ctx.resetPanelState_();\n          tab.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n          panel.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n        }\n      });\n\n    }\n  }\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialTabs,\n    classAsString: 'MaterialTabs',\n    cssClass: 'mdl-js-tabs'\n  });\n})();\n"]},"hash":"7ccd7b22ed5076811d183aef58dd77fa75f6c0e4"}
