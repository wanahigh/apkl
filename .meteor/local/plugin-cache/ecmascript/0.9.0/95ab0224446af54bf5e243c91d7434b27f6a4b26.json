{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"client/Note/posts/post_submit.js","filenameRelative":"client/Note/posts/post_submit.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"client/Note/posts/post_submit.js.map","sourceFileName":"client/Note/posts/post_submit.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"post_submit"},"ignored":false,"code":"var Meteor = void 0;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nTemplate.postSubmit.onCreated(function () {\n  Session.set('postSubmitErrors', {});\n});\nTemplate.postSubmit.helpers({\n  errorMessage: function (field) {\n    return Session.get('postSubmitErrors')[field];\n  },\n  errorClass: function (field) {\n    return !!Session.get('postSubmitErrors')[field] ? 'has-error' : '';\n  }\n});\nTemplate.postSubmit.events({\n  'submit form': function (e) {\n    e.preventDefault();\n    var post = {\n      url: $(e.target).find('[name=url]').val(),\n      title: $(e.target).find('[name=title]').val()\n    };\n    var errors = validatePost(post);\n    if (errors.title || errors.url) return Session.set('postSubmitErrors', errors);\n    Meteor.call('postInsert', post, function (error, result) {\n      // display the error to the user and abort\n      if (error) return throwError(error.reason); // show this result but route anyway\n\n      if (result.postExists) throwError('This link has already been posted');\n      Router.go('postPage', {\n        _id: result._id\n      });\n    });\n  }\n});","map":{"version":3,"sources":["client/Note/posts/post_submit.js"],"names":["Meteor","module","watch","require","v","Template","postSubmit","onCreated","Session","set","helpers","errorMessage","field","get","errorClass","events","e","preventDefault","post","url","$","target","find","val","title","errors","validatePost","call","error","result","throwError","reason","postExists","Router","go","_id"],"mappings":"AAAA,IAAIA,eAAJ;AAAWC,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACH,QAAD,YAAQI,CAAR,EAAU;AAACJ,aAAOI,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAEXC,SAASC,UAAT,CAAoBC,SAApB,CAA8B,YAAW;AACvCC,UAAQC,GAAR,CAAY,kBAAZ,EAAgC,EAAhC;AACD,CAFD;AAIAJ,SAASC,UAAT,CAAoBI,OAApB,CAA4B;AAC1BC,gBAAc,UAASC,KAAT,EAAgB;AAC5B,WAAOJ,QAAQK,GAAR,CAAY,kBAAZ,EAAgCD,KAAhC,CAAP;AACD,GAHyB;AAI1BE,cAAY,UAAUF,KAAV,EAAiB;AAC3B,WAAO,CAAC,CAACJ,QAAQK,GAAR,CAAY,kBAAZ,EAAgCD,KAAhC,CAAF,GAA2C,WAA3C,GAAyD,EAAhE;AACD;AANyB,CAA5B;AASAP,SAASC,UAAT,CAAoBS,MAApB,CAA2B;AACzB,iBAAe,UAASC,CAAT,EAAY;AACzBA,MAAEC,cAAF;AAEA,QAAIC,OAAO;AACPC,WAAKC,EAAEJ,EAAEK,MAAJ,EAAYC,IAAZ,CAAiB,YAAjB,EAA+BC,GAA/B,EADE;AAEPC,aAAOJ,EAAEJ,EAAEK,MAAJ,EAAYC,IAAZ,CAAiB,cAAjB,EAAiCC,GAAjC;AAFA,KAAX;AAKA,QAAIE,SAASC,aAAaR,IAAb,CAAb;AACA,QAAIO,OAAOD,KAAP,IAAgBC,OAAON,GAA3B,EACE,OAAOX,QAAQC,GAAR,CAAY,kBAAZ,EAAgCgB,MAAhC,CAAP;AAEFzB,WAAO2B,IAAP,CAAY,YAAZ,EAA0BT,IAA1B,EAAgC,UAASU,KAAT,EAAgBC,MAAhB,EAAwB;AACtD;AACA,UAAID,KAAJ,EACE,OAAOE,WAAWF,MAAMG,MAAjB,CAAP,CAHoD,CAKtD;;AACA,UAAIF,OAAOG,UAAX,EACEF,WAAW,mCAAX;AAEFG,aAAOC,EAAP,CAAU,UAAV,EAAsB;AAACC,aAAKN,OAAOM;AAAb,OAAtB;AACD,KAVD;AAWD;AAxBwB,CAA3B","file":"client/Note/posts/post_submit.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nTemplate.postSubmit.onCreated(function() {\n  Session.set('postSubmitErrors', {});\n});\n\nTemplate.postSubmit.helpers({\n  errorMessage: function(field) {\n    return Session.get('postSubmitErrors')[field];\n  },\n  errorClass: function (field) {\n    return !!Session.get('postSubmitErrors')[field] ? 'has-error' : '';\n  }\n});\n\nTemplate.postSubmit.events({\n  'submit form': function(e) {\n    e.preventDefault();\n    \n    var post = {\n        url: $(e.target).find('[name=url]').val(),\n        title: $(e.target).find('[name=title]').val()\n    }\n    \n    var errors = validatePost(post);\n    if (errors.title || errors.url)\n      return Session.set('postSubmitErrors', errors);\n    \n    Meteor.call('postInsert', post, function(error, result) {\n      // display the error to the user and abort\n      if (error)\n        return throwError(error.reason);\n      \n      // show this result but route anyway\n      if (result.postExists)\n        throwError('This link has already been posted');\n      \n      Router.go('postPage', {_id: result._id});  \n    });\n  }\n});"]},"hash":"95ab0224446af54bf5e243c91d7434b27f6a4b26"}
