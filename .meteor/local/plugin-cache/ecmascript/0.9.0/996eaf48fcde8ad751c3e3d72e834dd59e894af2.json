{"metadata":{"usedHelpers":["typeof","interopRequireDefault"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/zodiase:mdl-assets/dist/material.js","filenameRelative":"packages/zodiase:mdl-assets/dist/material.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zodiase:mdl-assets/dist/material.js.map","sourceFileName":"packages/zodiase:mdl-assets/dist/material.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"material"},"ignored":false,"code":"var _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n;\n\n(function () {\n    \"use strict\"; /**\n                   * @license\n                   * Copyright 2015 Google Inc. All Rights Reserved.\n                   *\n                   * Licensed under the Apache License, Version 2.0 (the \"License\");\n                   * you may not use this file except in compliance with the License.\n                   * You may obtain a copy of the License at\n                   *\n                   *      http://www.apache.org/licenses/LICENSE-2.0\n                   *\n                   * Unless required by applicable law or agreed to in writing, software\n                   * distributed under the License is distributed on an \"AS IS\" BASIS,\n                   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n                   * See the License for the specific language governing permissions and\n                   * limitations under the License.\n                   */ /**\n                       * A component handler interface using the revealing module design pattern.\n                       * More details on this design pattern here:\n                       * https://github.com/jasonmayes/mdl-component-design-pattern\n                       *\n                       * @author Jason Mayes.\n                       */ /* exported componentHandler */ // Pre-defining the componentHandler interface, for closure documentation and\n    // static verification.\n\n    var componentHandler = {\n        /**\n         * Searches existing DOM for elements of our component type and upgrades them\n         * if they have not already been upgraded.\n         *\n         * @param {string=} optJsClass the programatic name of the element class we\n         * need to create a new instance of.\n         * @param {string=} optCssClass the name of the CSS class elements of this\n         * type will have.\n         */upgradeDom: function (optJsClass, optCssClass) {},\n        /**\n         * Upgrades a specific element rather than all in the DOM.\n         *\n         * @param {!Element} element The element we wish to upgrade.\n         * @param {string=} optJsClass Optional name of the class we want to upgrade\n         * the element to.\n         */upgradeElement: function (element, optJsClass) {},\n        /**\n         * Upgrades a specific list of elements rather than all in the DOM.\n         *\n         * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n         * The elements we wish to upgrade.\n         */upgradeElements: function (elements) {},\n        /**\n         * Upgrades all registered components found in the current DOM. This is\n         * automatically called on window load.\n         */upgradeAllRegistered: function () {},\n        /**\n         * Allows user to be alerted to any upgrades that are performed for a given\n         * component type\n         *\n         * @param {string} jsClass The class name of the MDL component we wish\n         * to hook into for any upgrades performed.\n         * @param {function(!HTMLElement)} callback The function to call upon an\n         * upgrade. This function should expect 1 parameter - the HTMLElement which\n         * got upgraded.\n         */registerUpgradedCallback: function (jsClass, callback) {},\n        /**\n         * Registers a class for future use and attempts to upgrade existing DOM.\n         *\n         * @param {componentHandler.ComponentConfigPublic} config the registration configuration\n         */register: function (config) {},\n        /**\n         * Downgrade either a given node, an array of nodes, or a NodeList.\n         *\n         * @param {!Node|!Array<!Node>|!NodeList} nodes\n         */downgradeElements: function (nodes) {}\n    };\n\n    componentHandler = function () {\n        'use strict'; /** @type {!Array<componentHandler.ComponentConfig>} */\n\n        var registeredComponents_ = []; /** @type {!Array<componentHandler.Component>} */\n        var createdComponents_ = [];\n        var componentConfigProperty_ = 'mdlComponentConfigInternal_'; /**\n                                                                       * Searches registered components for a class we are interested in using.\n                                                                       * Optionally replaces a match with passed object if specified.\n                                                                       *\n                                                                       * @param {string} name The name of a class we want to use.\n                                                                       * @param {componentHandler.ComponentConfig=} optReplace Optional object to replace match with.\n                                                                       * @return {!Object|boolean}\n                                                                       * @private\n                                                                       */\n\n        function findRegisteredClass_(name, optReplace) {\n            for (var i = 0; i < registeredComponents_.length; i++) {\n                if (registeredComponents_[i].className === name) {\n                    if (typeof optReplace !== 'undefined') {\n                        registeredComponents_[i] = optReplace;\n                    }\n\n                    return registeredComponents_[i];\n                }\n            }\n\n            return false;\n        } /**\n           * Returns an array of the classNames of the upgraded classes on the element.\n           *\n           * @param {!Element} element The element to fetch data from.\n           * @return {!Array<string>}\n           * @private\n           */\n\n        function getUpgradedListOfElement_(element) {\n            var dataUpgraded = element.getAttribute('data-upgraded'); // Use `['']` as default value to conform the `,name,name...` style.\n\n            return dataUpgraded === null ? [''] : dataUpgraded.split(',');\n        } /**\n           * Returns true if the given element has already been upgraded for the given\n           * class.\n           *\n           * @param {!Element} element The element we want to check.\n           * @param {string} jsClass The class to check for.\n           * @returns {boolean}\n           * @private\n           */\n\n        function isElementUpgraded_(element, jsClass) {\n            var upgradedList = getUpgradedListOfElement_(element);\n            return upgradedList.indexOf(jsClass) !== -1;\n        } /**\n           * Create an event object.\n           *\n           * @param {string} eventType The type name of the event.\n           * @param {boolean} bubbles Whether the event should bubble up the DOM.\n           * @param {boolean} cancelable Whether the event can be canceled.\n           * @returns {!Event}\n           */\n\n        function createEvent_(eventType, bubbles, cancelable) {\n            if ('CustomEvent' in window && typeof window.CustomEvent === 'function') {\n                return new CustomEvent(eventType, {\n                    bubbles: bubbles,\n                    cancelable: cancelable\n                });\n            } else {\n                var ev = document.createEvent('Events');\n                ev.initEvent(eventType, bubbles, cancelable);\n                return ev;\n            }\n        } /**\n           * Searches existing DOM for elements of our component type and upgrades them\n           * if they have not already been upgraded.\n           *\n           * @param {string=} optJsClass the programatic name of the element class we\n           * need to create a new instance of.\n           * @param {string=} optCssClass the name of the CSS class elements of this\n           * type will have.\n           */\n\n        function upgradeDomInternal(optJsClass, optCssClass) {\n            if (typeof optJsClass === 'undefined' && typeof optCssClass === 'undefined') {\n                for (var i = 0; i < registeredComponents_.length; i++) {\n                    upgradeDomInternal(registeredComponents_[i].className, registeredComponents_[i].cssClass);\n                }\n            } else {\n                var jsClass = /** @type {string} */optJsClass;\n\n                if (typeof optCssClass === 'undefined') {\n                    var registeredClass = findRegisteredClass_(jsClass);\n\n                    if (registeredClass) {\n                        optCssClass = registeredClass.cssClass;\n                    }\n                }\n\n                var elements = document.querySelectorAll('.' + optCssClass);\n\n                for (var n = 0; n < elements.length; n++) {\n                    upgradeElementInternal(elements[n], jsClass);\n                }\n            }\n        } /**\n           * Upgrades a specific element rather than all in the DOM.\n           *\n           * @param {!Element} element The element we wish to upgrade.\n           * @param {string=} optJsClass Optional name of the class we want to upgrade\n           * the element to.\n           */\n\n        function upgradeElementInternal(element, optJsClass) {\n            // Verify argument type.\n            if (!((typeof element === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(element)) === 'object' && element instanceof Element)) {\n                throw new Error('Invalid argument provided to upgrade MDL element.');\n            } // Allow upgrade to be canceled by canceling emitted event.\n\n\n            var upgradingEv = createEvent_('mdl-componentupgrading', true, true);\n            element.dispatchEvent(upgradingEv);\n\n            if (upgradingEv.defaultPrevented) {\n                return;\n            }\n\n            var upgradedList = getUpgradedListOfElement_(element);\n            var classesToUpgrade = []; // If jsClass is not provided scan the registered components to find the\n            // ones matching the element's CSS classList.\n\n            if (!optJsClass) {\n                var classList = element.classList;\n                registeredComponents_.forEach(function (component) {\n                    // Match CSS & Not to be upgraded & Not upgraded.\n                    if (classList.contains(component.cssClass) && classesToUpgrade.indexOf(component) === -1 && !isElementUpgraded_(element, component.className)) {\n                        classesToUpgrade.push(component);\n                    }\n                });\n            } else if (!isElementUpgraded_(element, optJsClass)) {\n                classesToUpgrade.push(findRegisteredClass_(optJsClass));\n            } // Upgrade the element for each classes.\n\n\n            for (var i = 0, n = classesToUpgrade.length, registeredClass; i < n; i++) {\n                registeredClass = classesToUpgrade[i];\n\n                if (registeredClass) {\n                    // Mark element as upgraded.\n                    upgradedList.push(registeredClass.className);\n                    element.setAttribute('data-upgraded', upgradedList.join(','));\n                    var instance = new registeredClass.classConstructor(element);\n                    instance[componentConfigProperty_] = registeredClass;\n                    createdComponents_.push(instance); // Call any callbacks the user has registered with this component type.\n\n                    for (var j = 0, m = registeredClass.callbacks.length; j < m; j++) {\n                        registeredClass.callbacks[j](element);\n                    }\n\n                    if (registeredClass.widget) {\n                        // Assign per element instance for control over API\n                        element[registeredClass.className] = instance;\n                    }\n                } else {\n                    throw new Error('Unable to find a registered component for the given class.');\n                }\n\n                var upgradedEv = createEvent_('mdl-componentupgraded', true, false);\n                element.dispatchEvent(upgradedEv);\n            }\n        } /**\n           * Upgrades a specific list of elements rather than all in the DOM.\n           *\n           * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n           * The elements we wish to upgrade.\n           */\n\n        function upgradeElementsInternal(elements) {\n            if (!Array.isArray(elements)) {\n                if (elements instanceof Element) {\n                    elements = [elements];\n                } else {\n                    elements = Array.prototype.slice.call(elements);\n                }\n            }\n\n            for (var i = 0, n = elements.length, element; i < n; i++) {\n                element = elements[i];\n\n                if (element instanceof HTMLElement) {\n                    upgradeElementInternal(element);\n\n                    if (element.children.length > 0) {\n                        upgradeElementsInternal(element.children);\n                    }\n                }\n            }\n        } /**\n           * Registers a class for future use and attempts to upgrade existing DOM.\n           *\n           * @param {componentHandler.ComponentConfigPublic} config\n           */\n\n        function registerInternal(config) {\n            // In order to support both Closure-compiled and uncompiled code accessing\n            // this method, we need to allow for both the dot and array syntax for\n            // property access. You'll therefore see the `foo.bar || foo['bar']`\n            // pattern repeated across this method.\n            var widgetMissing = typeof config.widget === 'undefined' && typeof config['widget'] === 'undefined';\n            var widget = true;\n\n            if (!widgetMissing) {\n                widget = config.widget || config['widget'];\n            }\n\n            var newConfig = /** @type {componentHandler.ComponentConfig} */{\n                classConstructor: config.constructor || config['constructor'],\n                className: config.classAsString || config['classAsString'],\n                cssClass: config.cssClass || config['cssClass'],\n                widget: widget,\n                callbacks: []\n            };\n            registeredComponents_.forEach(function (item) {\n                if (item.cssClass === newConfig.cssClass) {\n                    throw new Error('The provided cssClass has already been registered: ' + item.cssClass);\n                }\n\n                if (item.className === newConfig.className) {\n                    throw new Error('The provided className has already been registered');\n                }\n            });\n\n            if (config.constructor.prototype.hasOwnProperty(componentConfigProperty_)) {\n                throw new Error('MDL component classes must not have ' + componentConfigProperty_ + ' defined as a property.');\n            }\n\n            var found = findRegisteredClass_(config.classAsString, newConfig);\n\n            if (!found) {\n                registeredComponents_.push(newConfig);\n            }\n        } /**\n           * Allows user to be alerted to any upgrades that are performed for a given\n           * component type\n           *\n           * @param {string} jsClass The class name of the MDL component we wish\n           * to hook into for any upgrades performed.\n           * @param {function(!HTMLElement)} callback The function to call upon an\n           * upgrade. This function should expect 1 parameter - the HTMLElement which\n           * got upgraded.\n           */\n\n        function registerUpgradedCallbackInternal(jsClass, callback) {\n            var regClass = findRegisteredClass_(jsClass);\n\n            if (regClass) {\n                regClass.callbacks.push(callback);\n            }\n        } /**\n           * Upgrades all registered components found in the current DOM. This is\n           * automatically called on window load.\n           */\n\n        function upgradeAllRegisteredInternal() {\n            for (var n = 0; n < registeredComponents_.length; n++) {\n                upgradeDomInternal(registeredComponents_[n].className);\n            }\n        } /**\n           * Check the component for the downgrade method.\n           * Execute if found.\n           * Remove component from createdComponents list.\n           *\n           * @param {?componentHandler.Component} component\n           */\n\n        function deconstructComponentInternal(component) {\n            if (component) {\n                var componentIndex = createdComponents_.indexOf(component);\n                createdComponents_.splice(componentIndex, 1);\n                var upgrades = component.element_.getAttribute('data-upgraded').split(',');\n                var componentPlace = upgrades.indexOf(component[componentConfigProperty_].classAsString);\n                upgrades.splice(componentPlace, 1);\n                component.element_.setAttribute('data-upgraded', upgrades.join(','));\n                var ev = createEvent_('mdl-componentdowngraded', true, false);\n                component.element_.dispatchEvent(ev);\n            }\n        } /**\n           * Downgrade either a given node, an array of nodes, or a NodeList.\n           *\n           * @param {!Node|!Array<!Node>|!NodeList} nodes\n           */\n\n        function downgradeNodesInternal(nodes) {\n            /**\n             * Auxiliary function to downgrade a single node.\n             * @param  {!Node} node the node to be downgraded\n             */var downgradeNode = function (node) {\n                createdComponents_.filter(function (item) {\n                    return item.element_ === node;\n                }).forEach(deconstructComponentInternal);\n            };\n\n            if (nodes instanceof Array || nodes instanceof NodeList) {\n                for (var n = 0; n < nodes.length; n++) {\n                    downgradeNode(nodes[n]);\n                }\n            } else if (nodes instanceof Node) {\n                downgradeNode(nodes);\n            } else {\n                throw new Error('Invalid argument provided to downgrade MDL nodes.');\n            }\n        } // Now return the functions that should be made public with their publicly\n        // facing names...\n\n\n        return {\n            upgradeDom: upgradeDomInternal,\n            upgradeElement: upgradeElementInternal,\n            upgradeElements: upgradeElementsInternal,\n            upgradeAllRegistered: upgradeAllRegisteredInternal,\n            registerUpgradedCallback: registerUpgradedCallbackInternal,\n            register: registerInternal,\n            downgradeElements: downgradeNodesInternal\n        };\n    }(); /**\n          * Describes the type of a registered component type managed by\n          * componentHandler. Provided for benefit of the Closure compiler.\n          *\n          * @typedef {{\n          *   constructor: Function,\n          *   classAsString: string,\n          *   cssClass: string,\n          *   widget: (string|boolean|undefined)\n          * }}\n          */\n\n    componentHandler.ComponentConfigPublic; // jshint ignore:line\n    /**\n     * Describes the type of a registered component type managed by\n     * componentHandler. Provided for benefit of the Closure compiler.\n     *\n     * @typedef {{\n     *   constructor: !Function,\n     *   className: string,\n     *   cssClass: string,\n     *   widget: (string|boolean),\n     *   callbacks: !Array<function(!HTMLElement)>\n     * }}\n     */\n    componentHandler.ComponentConfig; // jshint ignore:line\n    /**\n     * Created component (i.e., upgraded element) type as managed by\n     * componentHandler. Provided for benefit of the Closure compiler.\n     *\n     * @typedef {{\n     *   element_: !HTMLElement,\n     *   className: string,\n     *   classAsString: string,\n     *   cssClass: string,\n     *   widget: string\n     * }}\n     */\n    componentHandler.Component; // jshint ignore:line\n    // Export all symbols, for the benefit of Closure compiler.\n    // No effect on uncompiled code.\n\n    componentHandler['upgradeDom'] = componentHandler.upgradeDom;\n    componentHandler['upgradeElement'] = componentHandler.upgradeElement;\n    componentHandler['upgradeElements'] = componentHandler.upgradeElements;\n    componentHandler['upgradeAllRegistered'] = componentHandler.upgradeAllRegistered;\n    componentHandler['registerUpgradedCallback'] = componentHandler.registerUpgradedCallback;\n    componentHandler['register'] = componentHandler.register;\n    componentHandler['downgradeElements'] = componentHandler.downgradeElements;\n    window.componentHandler = componentHandler;\n    window['componentHandler'] = componentHandler;\n    window.addEventListener('load', function () {\n        'use strict'; /**\n                       * Performs a \"Cutting the mustard\" test. If the browser supports the features\n                       * tested, adds a mdl-js class to the <html> element. It then upgrades all MDL\n                       * components requiring JavaScript.\n                       */\n\n        if ('classList' in document.createElement('div') && 'querySelector' in document && 'addEventListener' in window && Array.prototype.forEach) {\n            document.documentElement.classList.add('mdl-js');\n            componentHandler.upgradeAllRegistered();\n        } else {\n            /**\n             * Dummy function to avoid JS errors.\n             */componentHandler.upgradeElement = function () {}; /**\n                                                                  * Dummy function to avoid JS errors.\n                                                                  */\n\n            componentHandler.register = function () {};\n        }\n    }); // Source: https://github.com/darius/requestAnimationFrame/blob/master/requestAnimationFrame.js\n    // Adapted from https://gist.github.com/paulirish/1579671 which derived from\n    // http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n    // http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n    // requestAnimationFrame polyfill by Erik Möller.\n    // Fixes from Paul Irish, Tino Zijdel, Andrew Mao, Klemen Slavič, Darius Bacon\n    // MIT license\n\n    if (!Date.now) {\n        /**\n         * Date.now polyfill.\n         * @return {number} the current Date\n         */Date.now = function () {\n            return new Date().getTime();\n        };\n\n        Date['now'] = Date.now;\n    }\n\n    var vendors = ['webkit', 'moz'];\n\n    for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n        var vp = vendors[i];\n        window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];\n        window.cancelAnimationFrame = window[vp + 'CancelAnimationFrame'] || window[vp + 'CancelRequestAnimationFrame'];\n        window['requestAnimationFrame'] = window.requestAnimationFrame;\n        window['cancelAnimationFrame'] = window.cancelAnimationFrame;\n    }\n\n    if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n        var lastTime = 0; /**\n                           * requestAnimationFrame polyfill.\n                           * @param  {!Function} callback the callback function.\n                           */\n\n        window.requestAnimationFrame = function (callback) {\n            var now = Date.now();\n            var nextTime = Math.max(lastTime + 16, now);\n            return setTimeout(function () {\n                callback(lastTime = nextTime);\n            }, nextTime - now);\n        };\n\n        window.cancelAnimationFrame = clearTimeout;\n        window['requestAnimationFrame'] = window.requestAnimationFrame;\n        window['cancelAnimationFrame'] = window.cancelAnimationFrame;\n    } /**\n       * @license\n       * Copyright 2015 Google Inc. All Rights Reserved.\n       *\n       * Licensed under the Apache License, Version 2.0 (the \"License\");\n       * you may not use this file except in compliance with the License.\n       * You may obtain a copy of the License at\n       *\n       *      http://www.apache.org/licenses/LICENSE-2.0\n       *\n       * Unless required by applicable law or agreed to in writing, software\n       * distributed under the License is distributed on an \"AS IS\" BASIS,\n       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n       * See the License for the specific language governing permissions and\n       * limitations under the License.\n       */ /**\n             * Class constructor for Button MDL component.\n             * Implements MDL component design pattern defined at:\n             * https://github.com/jasonmayes/mdl-component-design-pattern\n             *\n             * @param {HTMLElement} element The element that will be upgraded.\n             */\n\n    var MaterialButton = function () {\n        function MaterialButton(element) {\n            this.element_ = element; // Initialize instance.\n\n            this.init();\n        }\n\n        return MaterialButton;\n    }();\n\n    window['MaterialButton'] = MaterialButton; /**\n                                                  * Store constants in one place so they can be updated easily.\n                                                  *\n                                                  * @enum {string | number}\n                                                  * @private\n                                                  */\n    MaterialButton.prototype.Constant_ = {}; /**\n                                                * Store strings for class names defined by this component that are used in\n                                                * JavaScript. This allows us to simply change it in one place should we\n                                                * decide to modify at a later date.\n                                                *\n                                                * @enum {string}\n                                                * @private\n                                                */\n    MaterialButton.prototype.CssClasses_ = {\n        RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n        RIPPLE_CONTAINER: 'mdl-button__ripple-container',\n        RIPPLE: 'mdl-ripple'\n    }; /**\n          * Handle blur of element.\n          *\n          * @param {Event} event The event that fired.\n          * @private\n          */\n\n    MaterialButton.prototype.blurHandler_ = function (event) {\n        if (event) {\n            this.element_.blur();\n        }\n    }; // Public methods.\n    /**\n       * Disable button.\n       *\n       * @public\n       */\n\n    MaterialButton.prototype.disable = function () {\n        this.element_.disabled = true;\n    };\n\n    MaterialButton.prototype['disable'] = MaterialButton.prototype.disable; /**\n                                                                               * Enable button.\n                                                                               *\n                                                                               * @public\n                                                                               */\n\n    MaterialButton.prototype.enable = function () {\n        this.element_.disabled = false;\n    };\n\n    MaterialButton.prototype['enable'] = MaterialButton.prototype.enable; /**\n                                                                             * Initialize element.\n                                                                             */\n\n    MaterialButton.prototype.init = function () {\n        if (this.element_) {\n            if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n                var rippleContainer = document.createElement('span');\n                rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n                this.rippleElement_ = document.createElement('span');\n                this.rippleElement_.classList.add(this.CssClasses_.RIPPLE);\n                rippleContainer.appendChild(this.rippleElement_);\n                this.boundRippleBlurHandler = this.blurHandler_.bind(this);\n                this.rippleElement_.addEventListener('mouseup', this.boundRippleBlurHandler);\n                this.element_.appendChild(rippleContainer);\n            }\n\n            this.boundButtonBlurHandler = this.blurHandler_.bind(this);\n            this.element_.addEventListener('mouseup', this.boundButtonBlurHandler);\n            this.element_.addEventListener('mouseleave', this.boundButtonBlurHandler);\n        }\n    }; // The component registers itself. It can assume componentHandler is available\n    // in the global scope.\n\n\n    componentHandler.register({\n        constructor: MaterialButton,\n        classAsString: 'MaterialButton',\n        cssClass: 'mdl-js-button',\n        widget: true\n    }); /**\n         * @license\n         * Copyright 2015 Google Inc. All Rights Reserved.\n         *\n         * Licensed under the Apache License, Version 2.0 (the \"License\");\n         * you may not use this file except in compliance with the License.\n         * You may obtain a copy of the License at\n         *\n         *      http://www.apache.org/licenses/LICENSE-2.0\n         *\n         * Unless required by applicable law or agreed to in writing, software\n         * distributed under the License is distributed on an \"AS IS\" BASIS,\n         * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n         * See the License for the specific language governing permissions and\n         * limitations under the License.\n         */ /**\n               * Class constructor for Checkbox MDL component.\n               * Implements MDL component design pattern defined at:\n               * https://github.com/jasonmayes/mdl-component-design-pattern\n               *\n               * @constructor\n               * @param {HTMLElement} element The element that will be upgraded.\n               */\n\n    var MaterialCheckbox = function () {\n        function MaterialCheckbox(element) {\n            this.element_ = element; // Initialize instance.\n\n            this.init();\n        }\n\n        return MaterialCheckbox;\n    }();\n\n    window['MaterialCheckbox'] = MaterialCheckbox; /**\n                                                      * Store constants in one place so they can be updated easily.\n                                                      *\n                                                      * @enum {string | number}\n                                                      * @private\n                                                      */\n    MaterialCheckbox.prototype.Constant_ = {\n        TINY_TIMEOUT: 0.001\n    }; /**\n          * Store strings for class names defined by this component that are used in\n          * JavaScript. This allows us to simply change it in one place should we\n          * decide to modify at a later date.\n          *\n          * @enum {string}\n          * @private\n          */\n    MaterialCheckbox.prototype.CssClasses_ = {\n        INPUT: 'mdl-checkbox__input',\n        BOX_OUTLINE: 'mdl-checkbox__box-outline',\n        FOCUS_HELPER: 'mdl-checkbox__focus-helper',\n        TICK_OUTLINE: 'mdl-checkbox__tick-outline',\n        RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n        RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n        RIPPLE_CONTAINER: 'mdl-checkbox__ripple-container',\n        RIPPLE_CENTER: 'mdl-ripple--center',\n        RIPPLE: 'mdl-ripple',\n        IS_FOCUSED: 'is-focused',\n        IS_DISABLED: 'is-disabled',\n        IS_CHECKED: 'is-checked',\n        IS_UPGRADED: 'is-upgraded'\n    }; /**\n          * Handle change of state.\n          *\n          * @param {Event} event The event that fired.\n          * @private\n          */\n\n    MaterialCheckbox.prototype.onChange_ = function (event) {\n        this.updateClasses_();\n    }; /**\n          * Handle focus of element.\n          *\n          * @param {Event} event The event that fired.\n          * @private\n          */\n\n    MaterialCheckbox.prototype.onFocus_ = function (event) {\n        this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n    }; /**\n          * Handle lost focus of element.\n          *\n          * @param {Event} event The event that fired.\n          * @private\n          */\n\n    MaterialCheckbox.prototype.onBlur_ = function (event) {\n        this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n    }; /**\n          * Handle mouseup.\n          *\n          * @param {Event} event The event that fired.\n          * @private\n          */\n\n    MaterialCheckbox.prototype.onMouseUp_ = function (event) {\n        this.blur_();\n    }; /**\n          * Handle class updates.\n          *\n          * @private\n          */\n\n    MaterialCheckbox.prototype.updateClasses_ = function () {\n        this.checkDisabled();\n        this.checkToggleState();\n    }; /**\n          * Add blur.\n          *\n          * @private\n          */\n\n    MaterialCheckbox.prototype.blur_ = function () {\n        // TODO: figure out why there's a focus event being fired after our blur,\n        // so that we can avoid this hack.\n        window.setTimeout(function () {\n            this.inputElement_.blur();\n        }.bind(this), this.Constant_.TINY_TIMEOUT);\n    }; // Public methods.\n    /**\n       * Check the inputs toggle state and update display.\n       *\n       * @public\n       */\n\n    MaterialCheckbox.prototype.checkToggleState = function () {\n        if (this.inputElement_.checked) {\n            this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n        } else {\n            this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n        }\n    };\n\n    MaterialCheckbox.prototype['checkToggleState'] = MaterialCheckbox.prototype.checkToggleState; /**\n                                                                                                     * Check the inputs disabled state and update display.\n                                                                                                     *\n                                                                                                     * @public\n                                                                                                     */\n\n    MaterialCheckbox.prototype.checkDisabled = function () {\n        if (this.inputElement_.disabled) {\n            this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n        } else {\n            this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n        }\n    };\n\n    MaterialCheckbox.prototype['checkDisabled'] = MaterialCheckbox.prototype.checkDisabled; /**\n                                                                                               * Disable checkbox.\n                                                                                               *\n                                                                                               * @public\n                                                                                               */\n\n    MaterialCheckbox.prototype.disable = function () {\n        this.inputElement_.disabled = true;\n        this.updateClasses_();\n    };\n\n    MaterialCheckbox.prototype['disable'] = MaterialCheckbox.prototype.disable; /**\n                                                                                   * Enable checkbox.\n                                                                                   *\n                                                                                   * @public\n                                                                                   */\n\n    MaterialCheckbox.prototype.enable = function () {\n        this.inputElement_.disabled = false;\n        this.updateClasses_();\n    };\n\n    MaterialCheckbox.prototype['enable'] = MaterialCheckbox.prototype.enable; /**\n                                                                                 * Check checkbox.\n                                                                                 *\n                                                                                 * @public\n                                                                                 */\n\n    MaterialCheckbox.prototype.check = function () {\n        this.inputElement_.checked = true;\n        this.updateClasses_();\n    };\n\n    MaterialCheckbox.prototype['check'] = MaterialCheckbox.prototype.check; /**\n                                                                               * Uncheck checkbox.\n                                                                               *\n                                                                               * @public\n                                                                               */\n\n    MaterialCheckbox.prototype.uncheck = function () {\n        this.inputElement_.checked = false;\n        this.updateClasses_();\n    };\n\n    MaterialCheckbox.prototype['uncheck'] = MaterialCheckbox.prototype.uncheck; /**\n                                                                                   * Initialize element.\n                                                                                   */\n\n    MaterialCheckbox.prototype.init = function () {\n        if (this.element_) {\n            this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n            var boxOutline = document.createElement('span');\n            boxOutline.classList.add(this.CssClasses_.BOX_OUTLINE);\n            var tickContainer = document.createElement('span');\n            tickContainer.classList.add(this.CssClasses_.FOCUS_HELPER);\n            var tickOutline = document.createElement('span');\n            tickOutline.classList.add(this.CssClasses_.TICK_OUTLINE);\n            boxOutline.appendChild(tickOutline);\n            this.element_.appendChild(tickContainer);\n            this.element_.appendChild(boxOutline);\n\n            if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n                this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n                this.rippleContainerElement_ = document.createElement('span');\n                this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n                this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n                this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n                this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n                this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n                var ripple = document.createElement('span');\n                ripple.classList.add(this.CssClasses_.RIPPLE);\n                this.rippleContainerElement_.appendChild(ripple);\n                this.element_.appendChild(this.rippleContainerElement_);\n            }\n\n            this.boundInputOnChange = this.onChange_.bind(this);\n            this.boundInputOnFocus = this.onFocus_.bind(this);\n            this.boundInputOnBlur = this.onBlur_.bind(this);\n            this.boundElementMouseUp = this.onMouseUp_.bind(this);\n            this.inputElement_.addEventListener('change', this.boundInputOnChange);\n            this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n            this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n            this.element_.addEventListener('mouseup', this.boundElementMouseUp);\n            this.updateClasses_();\n            this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n        }\n    }; // The component registers itself. It can assume componentHandler is available\n    // in the global scope.\n\n\n    componentHandler.register({\n        constructor: MaterialCheckbox,\n        classAsString: 'MaterialCheckbox',\n        cssClass: 'mdl-js-checkbox',\n        widget: true\n    }); /**\n         * @license\n         * Copyright 2015 Google Inc. All Rights Reserved.\n         *\n         * Licensed under the Apache License, Version 2.0 (the \"License\");\n         * you may not use this file except in compliance with the License.\n         * You may obtain a copy of the License at\n         *\n         *      http://www.apache.org/licenses/LICENSE-2.0\n         *\n         * Unless required by applicable law or agreed to in writing, software\n         * distributed under the License is distributed on an \"AS IS\" BASIS,\n         * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n         * See the License for the specific language governing permissions and\n         * limitations under the License.\n         */ /**\n               * Class constructor for icon toggle MDL component.\n               * Implements MDL component design pattern defined at:\n               * https://github.com/jasonmayes/mdl-component-design-pattern\n               *\n               * @constructor\n               * @param {HTMLElement} element The element that will be upgraded.\n               */\n\n    var MaterialIconToggle = function () {\n        function MaterialIconToggle(element) {\n            this.element_ = element; // Initialize instance.\n\n            this.init();\n        }\n\n        return MaterialIconToggle;\n    }();\n\n    window['MaterialIconToggle'] = MaterialIconToggle; /**\n                                                          * Store constants in one place so they can be updated easily.\n                                                          *\n                                                          * @enum {string | number}\n                                                          * @private\n                                                          */\n    MaterialIconToggle.prototype.Constant_ = {\n        TINY_TIMEOUT: 0.001\n    }; /**\n          * Store strings for class names defined by this component that are used in\n          * JavaScript. This allows us to simply change it in one place should we\n          * decide to modify at a later date.\n          *\n          * @enum {string}\n          * @private\n          */\n    MaterialIconToggle.prototype.CssClasses_ = {\n        INPUT: 'mdl-icon-toggle__input',\n        JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n        RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n        RIPPLE_CONTAINER: 'mdl-icon-toggle__ripple-container',\n        RIPPLE_CENTER: 'mdl-ripple--center',\n        RIPPLE: 'mdl-ripple',\n        IS_FOCUSED: 'is-focused',\n        IS_DISABLED: 'is-disabled',\n        IS_CHECKED: 'is-checked'\n    }; /**\n          * Handle change of state.\n          *\n          * @param {Event} event The event that fired.\n          * @private\n          */\n\n    MaterialIconToggle.prototype.onChange_ = function (event) {\n        this.updateClasses_();\n    }; /**\n          * Handle focus of element.\n          *\n          * @param {Event} event The event that fired.\n          * @private\n          */\n\n    MaterialIconToggle.prototype.onFocus_ = function (event) {\n        this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n    }; /**\n          * Handle lost focus of element.\n          *\n          * @param {Event} event The event that fired.\n          * @private\n          */\n\n    MaterialIconToggle.prototype.onBlur_ = function (event) {\n        this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n    }; /**\n          * Handle mouseup.\n          *\n          * @param {Event} event The event that fired.\n          * @private\n          */\n\n    MaterialIconToggle.prototype.onMouseUp_ = function (event) {\n        this.blur_();\n    }; /**\n          * Handle class updates.\n          *\n          * @private\n          */\n\n    MaterialIconToggle.prototype.updateClasses_ = function () {\n        this.checkDisabled();\n        this.checkToggleState();\n    }; /**\n          * Add blur.\n          *\n          * @private\n          */\n\n    MaterialIconToggle.prototype.blur_ = function () {\n        // TODO: figure out why there's a focus event being fired after our blur,\n        // so that we can avoid this hack.\n        window.setTimeout(function () {\n            this.inputElement_.blur();\n        }.bind(this), this.Constant_.TINY_TIMEOUT);\n    }; // Public methods.\n    /**\n       * Check the inputs toggle state and update display.\n       *\n       * @public\n       */\n\n    MaterialIconToggle.prototype.checkToggleState = function () {\n        if (this.inputElement_.checked) {\n            this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n        } else {\n            this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n        }\n    };\n\n    MaterialIconToggle.prototype['checkToggleState'] = MaterialIconToggle.prototype.checkToggleState; /**\n                                                                                                         * Check the inputs disabled state and update display.\n                                                                                                         *\n                                                                                                         * @public\n                                                                                                         */\n\n    MaterialIconToggle.prototype.checkDisabled = function () {\n        if (this.inputElement_.disabled) {\n            this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n        } else {\n            this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n        }\n    };\n\n    MaterialIconToggle.prototype['checkDisabled'] = MaterialIconToggle.prototype.checkDisabled; /**\n                                                                                                   * Disable icon toggle.\n                                                                                                   *\n                                                                                                   * @public\n                                                                                                   */\n\n    MaterialIconToggle.prototype.disable = function () {\n        this.inputElement_.disabled = true;\n        this.updateClasses_();\n    };\n\n    MaterialIconToggle.prototype['disable'] = MaterialIconToggle.prototype.disable; /**\n                                                                                       * Enable icon toggle.\n                                                                                       *\n                                                                                       * @public\n                                                                                       */\n\n    MaterialIconToggle.prototype.enable = function () {\n        this.inputElement_.disabled = false;\n        this.updateClasses_();\n    };\n\n    MaterialIconToggle.prototype['enable'] = MaterialIconToggle.prototype.enable; /**\n                                                                                     * Check icon toggle.\n                                                                                     *\n                                                                                     * @public\n                                                                                     */\n\n    MaterialIconToggle.prototype.check = function () {\n        this.inputElement_.checked = true;\n        this.updateClasses_();\n    };\n\n    MaterialIconToggle.prototype['check'] = MaterialIconToggle.prototype.check; /**\n                                                                                   * Uncheck icon toggle.\n                                                                                   *\n                                                                                   * @public\n                                                                                   */\n\n    MaterialIconToggle.prototype.uncheck = function () {\n        this.inputElement_.checked = false;\n        this.updateClasses_();\n    };\n\n    MaterialIconToggle.prototype['uncheck'] = MaterialIconToggle.prototype.uncheck; /**\n                                                                                       * Initialize element.\n                                                                                       */\n\n    MaterialIconToggle.prototype.init = function () {\n        if (this.element_) {\n            this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n\n            if (this.element_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n                this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n                this.rippleContainerElement_ = document.createElement('span');\n                this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n                this.rippleContainerElement_.classList.add(this.CssClasses_.JS_RIPPLE_EFFECT);\n                this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n                this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n                this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n                var ripple = document.createElement('span');\n                ripple.classList.add(this.CssClasses_.RIPPLE);\n                this.rippleContainerElement_.appendChild(ripple);\n                this.element_.appendChild(this.rippleContainerElement_);\n            }\n\n            this.boundInputOnChange = this.onChange_.bind(this);\n            this.boundInputOnFocus = this.onFocus_.bind(this);\n            this.boundInputOnBlur = this.onBlur_.bind(this);\n            this.boundElementOnMouseUp = this.onMouseUp_.bind(this);\n            this.inputElement_.addEventListener('change', this.boundInputOnChange);\n            this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n            this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n            this.element_.addEventListener('mouseup', this.boundElementOnMouseUp);\n            this.updateClasses_();\n            this.element_.classList.add('is-upgraded');\n        }\n    }; // The component registers itself. It can assume componentHandler is available\n    // in the global scope.\n\n\n    componentHandler.register({\n        constructor: MaterialIconToggle,\n        classAsString: 'MaterialIconToggle',\n        cssClass: 'mdl-js-icon-toggle',\n        widget: true\n    }); /**\n         * @license\n         * Copyright 2015 Google Inc. All Rights Reserved.\n         *\n         * Licensed under the Apache License, Version 2.0 (the \"License\");\n         * you may not use this file except in compliance with the License.\n         * You may obtain a copy of the License at\n         *\n         *      http://www.apache.org/licenses/LICENSE-2.0\n         *\n         * Unless required by applicable law or agreed to in writing, software\n         * distributed under the License is distributed on an \"AS IS\" BASIS,\n         * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n         * See the License for the specific language governing permissions and\n         * limitations under the License.\n         */ /**\n               * Class constructor for dropdown MDL component.\n               * Implements MDL component design pattern defined at:\n               * https://github.com/jasonmayes/mdl-component-design-pattern\n               *\n               * @constructor\n               * @param {HTMLElement} element The element that will be upgraded.\n               */\n\n    var MaterialMenu = function () {\n        function MaterialMenu(element) {\n            this.element_ = element; // Initialize instance.\n\n            this.init();\n        }\n\n        return MaterialMenu;\n    }();\n\n    window['MaterialMenu'] = MaterialMenu; /**\n                                              * Store constants in one place so they can be updated easily.\n                                              *\n                                              * @enum {string | number}\n                                              * @private\n                                              */\n    MaterialMenu.prototype.Constant_ = {\n        // Total duration of the menu animation.\n        TRANSITION_DURATION_SECONDS: 0.3,\n        // The fraction of the total duration we want to use for menu item animations.\n        TRANSITION_DURATION_FRACTION: 0.8,\n        // How long the menu stays open after choosing an option (so the user can see\n        // the ripple).\n        CLOSE_TIMEOUT: 150\n    }; /**\n          * Keycodes, for code readability.\n          *\n          * @enum {number}\n          * @private\n          */\n    MaterialMenu.prototype.Keycodes_ = {\n        ENTER: 13,\n        ESCAPE: 27,\n        SPACE: 32,\n        UP_ARROW: 38,\n        DOWN_ARROW: 40\n    }; /**\n          * Store strings for class names defined by this component that are used in\n          * JavaScript. This allows us to simply change it in one place should we\n          * decide to modify at a later date.\n          *\n          * @enum {string}\n          * @private\n          */\n    MaterialMenu.prototype.CssClasses_ = {\n        CONTAINER: 'mdl-menu__container',\n        OUTLINE: 'mdl-menu__outline',\n        ITEM: 'mdl-menu__item',\n        ITEM_RIPPLE_CONTAINER: 'mdl-menu__item-ripple-container',\n        RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n        RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n        RIPPLE: 'mdl-ripple',\n        // Statuses\n        IS_UPGRADED: 'is-upgraded',\n        IS_VISIBLE: 'is-visible',\n        IS_ANIMATING: 'is-animating',\n        // Alignment options\n        BOTTOM_LEFT: 'mdl-menu--bottom-left',\n        // This is the default.\n        BOTTOM_RIGHT: 'mdl-menu--bottom-right',\n        TOP_LEFT: 'mdl-menu--top-left',\n        TOP_RIGHT: 'mdl-menu--top-right',\n        UNALIGNED: 'mdl-menu--unaligned'\n    }; /**\n          * Initialize element.\n          */\n\n    MaterialMenu.prototype.init = function () {\n        if (this.element_) {\n            // Create container for the menu.\n            var container = document.createElement('div');\n            container.classList.add(this.CssClasses_.CONTAINER);\n            this.element_.parentElement.insertBefore(container, this.element_);\n            this.element_.parentElement.removeChild(this.element_);\n            container.appendChild(this.element_);\n            this.container_ = container; // Create outline for the menu (shadow and background).\n\n            var outline = document.createElement('div');\n            outline.classList.add(this.CssClasses_.OUTLINE);\n            this.outline_ = outline;\n            container.insertBefore(outline, this.element_); // Find the \"for\" element and bind events to it.\n\n            var forElId = this.element_.getAttribute('for') || this.element_.getAttribute('data-mdl-for');\n            var forEl = null;\n\n            if (forElId) {\n                forEl = document.getElementById(forElId);\n\n                if (forEl) {\n                    this.forElement_ = forEl;\n                    forEl.addEventListener('click', this.handleForClick_.bind(this));\n                    forEl.addEventListener('keydown', this.handleForKeyboardEvent_.bind(this));\n                }\n            }\n\n            var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n            this.boundItemKeydown_ = this.handleItemKeyboardEvent_.bind(this);\n            this.boundItemClick_ = this.handleItemClick_.bind(this);\n\n            for (var i = 0; i < items.length; i++) {\n                // Add a listener to each menu item.\n                items[i].addEventListener('click', this.boundItemClick_); // Add a tab index to each menu item.\n\n                items[i].tabIndex = '-1'; // Add a keyboard listener to each menu item.\n\n                items[i].addEventListener('keydown', this.boundItemKeydown_);\n            } // Add ripple classes to each item, if the user has enabled ripples.\n\n\n            if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n                this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n\n                for (i = 0; i < items.length; i++) {\n                    var item = items[i];\n                    var rippleContainer = document.createElement('span');\n                    rippleContainer.classList.add(this.CssClasses_.ITEM_RIPPLE_CONTAINER);\n                    var ripple = document.createElement('span');\n                    ripple.classList.add(this.CssClasses_.RIPPLE);\n                    rippleContainer.appendChild(ripple);\n                    item.appendChild(rippleContainer);\n                    item.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n                }\n            } // Copy alignment classes to the container, so the outline can use them.\n\n\n            if (this.element_.classList.contains(this.CssClasses_.BOTTOM_LEFT)) {\n                this.outline_.classList.add(this.CssClasses_.BOTTOM_LEFT);\n            }\n\n            if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n                this.outline_.classList.add(this.CssClasses_.BOTTOM_RIGHT);\n            }\n\n            if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n                this.outline_.classList.add(this.CssClasses_.TOP_LEFT);\n            }\n\n            if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n                this.outline_.classList.add(this.CssClasses_.TOP_RIGHT);\n            }\n\n            if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n                this.outline_.classList.add(this.CssClasses_.UNALIGNED);\n            }\n\n            container.classList.add(this.CssClasses_.IS_UPGRADED);\n        }\n    }; /**\n          * Handles a click on the \"for\" element, by positioning the menu and then\n          * toggling it.\n          *\n          * @param {Event} evt The event that fired.\n          * @private\n          */\n\n    MaterialMenu.prototype.handleForClick_ = function (evt) {\n        if (this.element_ && this.forElement_) {\n            var rect = this.forElement_.getBoundingClientRect();\n            var forRect = this.forElement_.parentElement.getBoundingClientRect();\n\n            if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {} else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n                // Position below the \"for\" element, aligned to its right.\n                this.container_.style.right = forRect.right - rect.right + 'px';\n                this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n            } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n                // Position above the \"for\" element, aligned to its left.\n                this.container_.style.left = this.forElement_.offsetLeft + 'px';\n                this.container_.style.bottom = forRect.bottom - rect.top + 'px';\n            } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n                // Position above the \"for\" element, aligned to its right.\n                this.container_.style.right = forRect.right - rect.right + 'px';\n                this.container_.style.bottom = forRect.bottom - rect.top + 'px';\n            } else {\n                // Default: position below the \"for\" element, aligned to its left.\n                this.container_.style.left = this.forElement_.offsetLeft + 'px';\n                this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n            }\n        }\n\n        this.toggle(evt);\n    }; /**\n          * Handles a keyboard event on the \"for\" element.\n          *\n          * @param {Event} evt The event that fired.\n          * @private\n          */\n\n    MaterialMenu.prototype.handleForKeyboardEvent_ = function (evt) {\n        if (this.element_ && this.container_ && this.forElement_) {\n            var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM + ':not([disabled])');\n\n            if (items && items.length > 0 && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n                if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n                    evt.preventDefault();\n                    items[items.length - 1].focus();\n                } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n                    evt.preventDefault();\n                    items[0].focus();\n                }\n            }\n        }\n    }; /**\n          * Handles a keyboard event on an item.\n          *\n          * @param {Event} evt The event that fired.\n          * @private\n          */\n\n    MaterialMenu.prototype.handleItemKeyboardEvent_ = function (evt) {\n        if (this.element_ && this.container_) {\n            var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM + ':not([disabled])');\n\n            if (items && items.length > 0 && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n                var currentIndex = Array.prototype.slice.call(items).indexOf(evt.target);\n\n                if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n                    evt.preventDefault();\n\n                    if (currentIndex > 0) {\n                        items[currentIndex - 1].focus();\n                    } else {\n                        items[items.length - 1].focus();\n                    }\n                } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n                    evt.preventDefault();\n\n                    if (items.length > currentIndex + 1) {\n                        items[currentIndex + 1].focus();\n                    } else {\n                        items[0].focus();\n                    }\n                } else if (evt.keyCode === this.Keycodes_.SPACE || evt.keyCode === this.Keycodes_.ENTER) {\n                    evt.preventDefault(); // Send mousedown and mouseup to trigger ripple.\n\n                    var e = new MouseEvent('mousedown');\n                    evt.target.dispatchEvent(e);\n                    e = new MouseEvent('mouseup');\n                    evt.target.dispatchEvent(e); // Send click.\n\n                    evt.target.click();\n                } else if (evt.keyCode === this.Keycodes_.ESCAPE) {\n                    evt.preventDefault();\n                    this.hide();\n                }\n            }\n        }\n    }; /**\n          * Handles a click event on an item.\n          *\n          * @param {Event} evt The event that fired.\n          * @private\n          */\n\n    MaterialMenu.prototype.handleItemClick_ = function (evt) {\n        if (evt.target.hasAttribute('disabled')) {\n            evt.stopPropagation();\n        } else {\n            // Wait some time before closing menu, so the user can see the ripple.\n            this.closing_ = true;\n            window.setTimeout(function (evt) {\n                this.hide();\n                this.closing_ = false;\n            }.bind(this), this.Constant_.CLOSE_TIMEOUT);\n        }\n    }; /**\n          * Calculates the initial clip (for opening the menu) or final clip (for closing\n          * it), and applies it. This allows us to animate from or to the correct point,\n          * that is, the point it's aligned to in the \"for\" element.\n          *\n          * @param {number} height Height of the clip rectangle\n          * @param {number} width Width of the clip rectangle\n          * @private\n          */\n\n    MaterialMenu.prototype.applyClip_ = function (height, width) {\n        if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n            // Do not clip.\n            this.element_.style.clip = '';\n        } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n            // Clip to the top right corner of the menu.\n            this.element_.style.clip = 'rect(0 ' + width + 'px ' + '0 ' + width + 'px)';\n        } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n            // Clip to the bottom left corner of the menu.\n            this.element_.style.clip = 'rect(' + height + 'px 0 ' + height + 'px 0)';\n        } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n            // Clip to the bottom right corner of the menu.\n            this.element_.style.clip = 'rect(' + height + 'px ' + width + 'px ' + height + 'px ' + width + 'px)';\n        } else {\n            // Default: do not clip (same as clipping to the top left corner).\n            this.element_.style.clip = '';\n        }\n    }; /**\n          * Cleanup function to remove animation listeners.\n          *\n          * @param {Event} evt\n          * @private\n          */\n\n    MaterialMenu.prototype.removeAnimationEndListener_ = function (evt) {\n        evt.target.classList.remove(MaterialMenu.prototype.CssClasses_.IS_ANIMATING);\n    }; /**\n          * Adds an event listener to clean up after the animation ends.\n          *\n          * @private\n          */\n\n    MaterialMenu.prototype.addAnimationEndListener_ = function () {\n        this.element_.addEventListener('transitionend', this.removeAnimationEndListener_);\n        this.element_.addEventListener('webkitTransitionEnd', this.removeAnimationEndListener_);\n    }; /**\n          * Displays the menu.\n          *\n          * @public\n          */\n\n    MaterialMenu.prototype.show = function (evt) {\n        if (this.element_ && this.container_ && this.outline_) {\n            // Measure the inner element.\n            var height = this.element_.getBoundingClientRect().height;\n            var width = this.element_.getBoundingClientRect().width; // Apply the inner element's size to the container and outline.\n\n            this.container_.style.width = width + 'px';\n            this.container_.style.height = height + 'px';\n            this.outline_.style.width = width + 'px';\n            this.outline_.style.height = height + 'px';\n            var transitionDuration = this.Constant_.TRANSITION_DURATION_SECONDS * this.Constant_.TRANSITION_DURATION_FRACTION; // Calculate transition delays for individual menu items, so that they fade\n            // in one at a time.\n\n            var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n\n            for (var i = 0; i < items.length; i++) {\n                var itemDelay = null;\n\n                if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT) || this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n                    itemDelay = (height - items[i].offsetTop - items[i].offsetHeight) / height * transitionDuration + 's';\n                } else {\n                    itemDelay = items[i].offsetTop / height * transitionDuration + 's';\n                }\n\n                items[i].style.transitionDelay = itemDelay;\n            } // Apply the initial clip to the text before we start animating.\n\n\n            this.applyClip_(height, width); // Wait for the next frame, turn on animation, and apply the final clip.\n            // Also make it visible. This triggers the transitions.\n\n            window.requestAnimationFrame(function () {\n                this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n                this.element_.style.clip = 'rect(0 ' + width + 'px ' + height + 'px 0)';\n                this.container_.classList.add(this.CssClasses_.IS_VISIBLE);\n            }.bind(this)); // Clean up after the animation is complete.\n\n            this.addAnimationEndListener_(); // Add a click listener to the document, to close the menu.\n\n            var callback = function (e) {\n                // Check to see if the document is processing the same event that\n                // displayed the menu in the first place. If so, do nothing.\n                // Also check to see if the menu is in the process of closing itself, and\n                // do nothing in that case.\n                // Also check if the clicked element is a menu item\n                // if so, do nothing.\n                if (e !== evt && !this.closing_ && e.target.parentNode !== this.element_) {\n                    document.removeEventListener('click', callback);\n                    this.hide();\n                }\n            }.bind(this);\n\n            document.addEventListener('click', callback);\n        }\n    };\n\n    MaterialMenu.prototype['show'] = MaterialMenu.prototype.show; /**\n                                                                     * Hides the menu.\n                                                                     *\n                                                                     * @public\n                                                                     */\n\n    MaterialMenu.prototype.hide = function () {\n        if (this.element_ && this.container_ && this.outline_) {\n            var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM); // Remove all transition delays; menu items fade out concurrently.\n\n            for (var i = 0; i < items.length; i++) {\n                items[i].style.removeProperty('transition-delay');\n            } // Measure the inner element.\n\n\n            var rect = this.element_.getBoundingClientRect();\n            var height = rect.height;\n            var width = rect.width; // Turn on animation, and apply the final clip. Also make invisible.\n            // This triggers the transitions.\n\n            this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n            this.applyClip_(height, width);\n            this.container_.classList.remove(this.CssClasses_.IS_VISIBLE); // Clean up after the animation is complete.\n\n            this.addAnimationEndListener_();\n        }\n    };\n\n    MaterialMenu.prototype['hide'] = MaterialMenu.prototype.hide; /**\n                                                                     * Displays or hides the menu, depending on current state.\n                                                                     *\n                                                                     * @public\n                                                                     */\n\n    MaterialMenu.prototype.toggle = function (evt) {\n        if (this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n            this.hide();\n        } else {\n            this.show(evt);\n        }\n    };\n\n    MaterialMenu.prototype['toggle'] = MaterialMenu.prototype.toggle; // The component registers itself. It can assume componentHandler is available\n    // in the global scope.\n\n    componentHandler.register({\n        constructor: MaterialMenu,\n        classAsString: 'MaterialMenu',\n        cssClass: 'mdl-js-menu',\n        widget: true\n    }); /**\n         * @license\n         * Copyright 2015 Google Inc. All Rights Reserved.\n         *\n         * Licensed under the Apache License, Version 2.0 (the \"License\");\n         * you may not use this file except in compliance with the License.\n         * You may obtain a copy of the License at\n         *\n         *      http://www.apache.org/licenses/LICENSE-2.0\n         *\n         * Unless required by applicable law or agreed to in writing, software\n         * distributed under the License is distributed on an \"AS IS\" BASIS,\n         * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n         * See the License for the specific language governing permissions and\n         * limitations under the License.\n         */ /**\n               * Class constructor for Progress MDL component.\n               * Implements MDL component design pattern defined at:\n               * https://github.com/jasonmayes/mdl-component-design-pattern\n               *\n               * @constructor\n               * @param {HTMLElement} element The element that will be upgraded.\n               */\n\n    var MaterialProgress = function () {\n        function MaterialProgress(element) {\n            this.element_ = element; // Initialize instance.\n\n            this.init();\n        }\n\n        return MaterialProgress;\n    }();\n\n    window['MaterialProgress'] = MaterialProgress; /**\n                                                      * Store constants in one place so they can be updated easily.\n                                                      *\n                                                      * @enum {string | number}\n                                                      * @private\n                                                      */\n    MaterialProgress.prototype.Constant_ = {}; /**\n                                                  * Store strings for class names defined by this component that are used in\n                                                  * JavaScript. This allows us to simply change it in one place should we\n                                                  * decide to modify at a later date.\n                                                  *\n                                                  * @enum {string}\n                                                  * @private\n                                                  */\n    MaterialProgress.prototype.CssClasses_ = {\n        INDETERMINATE_CLASS: 'mdl-progress__indeterminate'\n    }; /**\n          * Set the current progress of the progressbar.\n          *\n          * @param {number} p Percentage of the progress (0-100)\n          * @public\n          */\n\n    MaterialProgress.prototype.setProgress = function (p) {\n        if (this.element_.classList.contains(this.CssClasses_.INDETERMINATE_CLASS)) {\n            return;\n        }\n\n        this.progressbar_.style.width = p + '%';\n    };\n\n    MaterialProgress.prototype['setProgress'] = MaterialProgress.prototype.setProgress; /**\n                                                                                           * Set the current progress of the buffer.\n                                                                                           *\n                                                                                           * @param {number} p Percentage of the buffer (0-100)\n                                                                                           * @public\n                                                                                           */\n\n    MaterialProgress.prototype.setBuffer = function (p) {\n        this.bufferbar_.style.width = p + '%';\n        this.auxbar_.style.width = 100 - p + '%';\n    };\n\n    MaterialProgress.prototype['setBuffer'] = MaterialProgress.prototype.setBuffer; /**\n                                                                                       * Initialize element.\n                                                                                       */\n\n    MaterialProgress.prototype.init = function () {\n        if (this.element_) {\n            var el = document.createElement('div');\n            el.className = 'progressbar bar bar1';\n            this.element_.appendChild(el);\n            this.progressbar_ = el;\n            el = document.createElement('div');\n            el.className = 'bufferbar bar bar2';\n            this.element_.appendChild(el);\n            this.bufferbar_ = el;\n            el = document.createElement('div');\n            el.className = 'auxbar bar bar3';\n            this.element_.appendChild(el);\n            this.auxbar_ = el;\n            this.progressbar_.style.width = '0%';\n            this.bufferbar_.style.width = '100%';\n            this.auxbar_.style.width = '0%';\n            this.element_.classList.add('is-upgraded');\n        }\n    }; // The component registers itself. It can assume componentHandler is available\n    // in the global scope.\n\n\n    componentHandler.register({\n        constructor: MaterialProgress,\n        classAsString: 'MaterialProgress',\n        cssClass: 'mdl-js-progress',\n        widget: true\n    }); /**\n         * @license\n         * Copyright 2015 Google Inc. All Rights Reserved.\n         *\n         * Licensed under the Apache License, Version 2.0 (the \"License\");\n         * you may not use this file except in compliance with the License.\n         * You may obtain a copy of the License at\n         *\n         *      http://www.apache.org/licenses/LICENSE-2.0\n         *\n         * Unless required by applicable law or agreed to in writing, software\n         * distributed under the License is distributed on an \"AS IS\" BASIS,\n         * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n         * See the License for the specific language governing permissions and\n         * limitations under the License.\n         */ /**\n               * Class constructor for Radio MDL component.\n               * Implements MDL component design pattern defined at:\n               * https://github.com/jasonmayes/mdl-component-design-pattern\n               *\n               * @constructor\n               * @param {HTMLElement} element The element that will be upgraded.\n               */\n\n    var MaterialRadio = function () {\n        function MaterialRadio(element) {\n            this.element_ = element; // Initialize instance.\n\n            this.init();\n        }\n\n        return MaterialRadio;\n    }();\n\n    window['MaterialRadio'] = MaterialRadio; /**\n                                                * Store constants in one place so they can be updated easily.\n                                                *\n                                                * @enum {string | number}\n                                                * @private\n                                                */\n    MaterialRadio.prototype.Constant_ = {\n        TINY_TIMEOUT: 0.001\n    }; /**\n          * Store strings for class names defined by this component that are used in\n          * JavaScript. This allows us to simply change it in one place should we\n          * decide to modify at a later date.\n          *\n          * @enum {string}\n          * @private\n          */\n    MaterialRadio.prototype.CssClasses_ = {\n        IS_FOCUSED: 'is-focused',\n        IS_DISABLED: 'is-disabled',\n        IS_CHECKED: 'is-checked',\n        IS_UPGRADED: 'is-upgraded',\n        JS_RADIO: 'mdl-js-radio',\n        RADIO_BTN: 'mdl-radio__button',\n        RADIO_OUTER_CIRCLE: 'mdl-radio__outer-circle',\n        RADIO_INNER_CIRCLE: 'mdl-radio__inner-circle',\n        RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n        RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n        RIPPLE_CONTAINER: 'mdl-radio__ripple-container',\n        RIPPLE_CENTER: 'mdl-ripple--center',\n        RIPPLE: 'mdl-ripple'\n    }; /**\n          * Handle change of state.\n          *\n          * @param {Event} event The event that fired.\n          * @private\n          */\n\n    MaterialRadio.prototype.onChange_ = function (event) {\n        // Since other radio buttons don't get change events, we need to look for\n        // them to update their classes.\n        var radios = document.getElementsByClassName(this.CssClasses_.JS_RADIO);\n\n        for (var i = 0; i < radios.length; i++) {\n            var button = radios[i].querySelector('.' + this.CssClasses_.RADIO_BTN); // Different name == different group, so no point updating those.\n\n            if (button.getAttribute('name') === this.btnElement_.getAttribute('name')) {\n                if (typeof radios[i]['MaterialRadio'] !== 'undefined') {\n                    radios[i]['MaterialRadio'].updateClasses_();\n                }\n            }\n        }\n    }; /**\n          * Handle focus.\n          *\n          * @param {Event} event The event that fired.\n          * @private\n          */\n\n    MaterialRadio.prototype.onFocus_ = function (event) {\n        this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n    }; /**\n          * Handle lost focus.\n          *\n          * @param {Event} event The event that fired.\n          * @private\n          */\n\n    MaterialRadio.prototype.onBlur_ = function (event) {\n        this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n    }; /**\n          * Handle mouseup.\n          *\n          * @param {Event} event The event that fired.\n          * @private\n          */\n\n    MaterialRadio.prototype.onMouseup_ = function (event) {\n        this.blur_();\n    }; /**\n          * Update classes.\n          *\n          * @private\n          */\n\n    MaterialRadio.prototype.updateClasses_ = function () {\n        this.checkDisabled();\n        this.checkToggleState();\n    }; /**\n          * Add blur.\n          *\n          * @private\n          */\n\n    MaterialRadio.prototype.blur_ = function () {\n        // TODO: figure out why there's a focus event being fired after our blur,\n        // so that we can avoid this hack.\n        window.setTimeout(function () {\n            this.btnElement_.blur();\n        }.bind(this), this.Constant_.TINY_TIMEOUT);\n    }; // Public methods.\n    /**\n       * Check the components disabled state.\n       *\n       * @public\n       */\n\n    MaterialRadio.prototype.checkDisabled = function () {\n        if (this.btnElement_.disabled) {\n            this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n        } else {\n            this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n        }\n    };\n\n    MaterialRadio.prototype['checkDisabled'] = MaterialRadio.prototype.checkDisabled; /**\n                                                                                         * Check the components toggled state.\n                                                                                         *\n                                                                                         * @public\n                                                                                         */\n\n    MaterialRadio.prototype.checkToggleState = function () {\n        if (this.btnElement_.checked) {\n            this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n        } else {\n            this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n        }\n    };\n\n    MaterialRadio.prototype['checkToggleState'] = MaterialRadio.prototype.checkToggleState; /**\n                                                                                               * Disable radio.\n                                                                                               *\n                                                                                               * @public\n                                                                                               */\n\n    MaterialRadio.prototype.disable = function () {\n        this.btnElement_.disabled = true;\n        this.updateClasses_();\n    };\n\n    MaterialRadio.prototype['disable'] = MaterialRadio.prototype.disable; /**\n                                                                             * Enable radio.\n                                                                             *\n                                                                             * @public\n                                                                             */\n\n    MaterialRadio.prototype.enable = function () {\n        this.btnElement_.disabled = false;\n        this.updateClasses_();\n    };\n\n    MaterialRadio.prototype['enable'] = MaterialRadio.prototype.enable; /**\n                                                                           * Check radio.\n                                                                           *\n                                                                           * @public\n                                                                           */\n\n    MaterialRadio.prototype.check = function () {\n        this.btnElement_.checked = true;\n        this.onChange_(null);\n    };\n\n    MaterialRadio.prototype['check'] = MaterialRadio.prototype.check; /**\n                                                                         * Uncheck radio.\n                                                                         *\n                                                                         * @public\n                                                                         */\n\n    MaterialRadio.prototype.uncheck = function () {\n        this.btnElement_.checked = false;\n        this.onChange_(null);\n    };\n\n    MaterialRadio.prototype['uncheck'] = MaterialRadio.prototype.uncheck; /**\n                                                                             * Initialize element.\n                                                                             */\n\n    MaterialRadio.prototype.init = function () {\n        if (this.element_) {\n            this.btnElement_ = this.element_.querySelector('.' + this.CssClasses_.RADIO_BTN);\n            this.boundChangeHandler_ = this.onChange_.bind(this);\n            this.boundFocusHandler_ = this.onChange_.bind(this);\n            this.boundBlurHandler_ = this.onBlur_.bind(this);\n            this.boundMouseUpHandler_ = this.onMouseup_.bind(this);\n            var outerCircle = document.createElement('span');\n            outerCircle.classList.add(this.CssClasses_.RADIO_OUTER_CIRCLE);\n            var innerCircle = document.createElement('span');\n            innerCircle.classList.add(this.CssClasses_.RADIO_INNER_CIRCLE);\n            this.element_.appendChild(outerCircle);\n            this.element_.appendChild(innerCircle);\n            var rippleContainer;\n\n            if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n                this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n                rippleContainer = document.createElement('span');\n                rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n                rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n                rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n                rippleContainer.addEventListener('mouseup', this.boundMouseUpHandler_);\n                var ripple = document.createElement('span');\n                ripple.classList.add(this.CssClasses_.RIPPLE);\n                rippleContainer.appendChild(ripple);\n                this.element_.appendChild(rippleContainer);\n            }\n\n            this.btnElement_.addEventListener('change', this.boundChangeHandler_);\n            this.btnElement_.addEventListener('focus', this.boundFocusHandler_);\n            this.btnElement_.addEventListener('blur', this.boundBlurHandler_);\n            this.element_.addEventListener('mouseup', this.boundMouseUpHandler_);\n            this.updateClasses_();\n            this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n        }\n    }; // The component registers itself. It can assume componentHandler is available\n    // in the global scope.\n\n\n    componentHandler.register({\n        constructor: MaterialRadio,\n        classAsString: 'MaterialRadio',\n        cssClass: 'mdl-js-radio',\n        widget: true\n    }); /**\n         * @license\n         * Copyright 2015 Google Inc. All Rights Reserved.\n         *\n         * Licensed under the Apache License, Version 2.0 (the \"License\");\n         * you may not use this file except in compliance with the License.\n         * You may obtain a copy of the License at\n         *\n         *      http://www.apache.org/licenses/LICENSE-2.0\n         *\n         * Unless required by applicable law or agreed to in writing, software\n         * distributed under the License is distributed on an \"AS IS\" BASIS,\n         * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n         * See the License for the specific language governing permissions and\n         * limitations under the License.\n         */ /**\n               * Class constructor for Slider MDL component.\n               * Implements MDL component design pattern defined at:\n               * https://github.com/jasonmayes/mdl-component-design-pattern\n               *\n               * @constructor\n               * @param {HTMLElement} element The element that will be upgraded.\n               */\n\n    var MaterialSlider = function () {\n        function MaterialSlider(element) {\n            this.element_ = element; // Browser feature detection.\n\n            this.isIE_ = window.navigator.msPointerEnabled; // Initialize instance.\n\n            this.init();\n        }\n\n        return MaterialSlider;\n    }();\n\n    window['MaterialSlider'] = MaterialSlider; /**\n                                                  * Store constants in one place so they can be updated easily.\n                                                  *\n                                                  * @enum {string | number}\n                                                  * @private\n                                                  */\n    MaterialSlider.prototype.Constant_ = {}; /**\n                                                * Store strings for class names defined by this component that are used in\n                                                * JavaScript. This allows us to simply change it in one place should we\n                                                * decide to modify at a later date.\n                                                *\n                                                * @enum {string}\n                                                * @private\n                                                */\n    MaterialSlider.prototype.CssClasses_ = {\n        IE_CONTAINER: 'mdl-slider__ie-container',\n        SLIDER_CONTAINER: 'mdl-slider__container',\n        BACKGROUND_FLEX: 'mdl-slider__background-flex',\n        BACKGROUND_LOWER: 'mdl-slider__background-lower',\n        BACKGROUND_UPPER: 'mdl-slider__background-upper',\n        IS_LOWEST_VALUE: 'is-lowest-value',\n        IS_UPGRADED: 'is-upgraded'\n    }; /**\n          * Handle input on element.\n          *\n          * @param {Event} event The event that fired.\n          * @private\n          */\n\n    MaterialSlider.prototype.onInput_ = function (event) {\n        this.updateValueStyles_();\n    }; /**\n          * Handle change on element.\n          *\n          * @param {Event} event The event that fired.\n          * @private\n          */\n\n    MaterialSlider.prototype.onChange_ = function (event) {\n        this.updateValueStyles_();\n    }; /**\n          * Handle mouseup on element.\n          *\n          * @param {Event} event The event that fired.\n          * @private\n          */\n\n    MaterialSlider.prototype.onMouseUp_ = function (event) {\n        event.target.blur();\n    }; /**\n          * Handle mousedown on container element.\n          * This handler is purpose is to not require the use to click\n          * exactly on the 2px slider element, as FireFox seems to be very\n          * strict about this.\n          *\n          * @param {Event} event The event that fired.\n          * @private\n          * @suppress {missingProperties}\n          */\n\n    MaterialSlider.prototype.onContainerMouseDown_ = function (event) {\n        // If this click is not on the parent element (but rather some child)\n        // ignore. It may still bubble up.\n        if (event.target !== this.element_.parentElement) {\n            return;\n        } // Discard the original event and create a new event that\n        // is on the slider element.\n\n\n        event.preventDefault();\n        var newEvent = new MouseEvent('mousedown', {\n            target: event.target,\n            buttons: event.buttons,\n            clientX: event.clientX,\n            clientY: this.element_.getBoundingClientRect().y\n        });\n        this.element_.dispatchEvent(newEvent);\n    }; /**\n          * Handle updating of values.\n          *\n          * @private\n          */\n\n    MaterialSlider.prototype.updateValueStyles_ = function () {\n        // Calculate and apply percentages to div structure behind slider.\n        var fraction = (this.element_.value - this.element_.min) / (this.element_.max - this.element_.min);\n\n        if (fraction === 0) {\n            this.element_.classList.add(this.CssClasses_.IS_LOWEST_VALUE);\n        } else {\n            this.element_.classList.remove(this.CssClasses_.IS_LOWEST_VALUE);\n        }\n\n        if (!this.isIE_) {\n            this.backgroundLower_.style.flex = fraction;\n            this.backgroundLower_.style.webkitFlex = fraction;\n            this.backgroundUpper_.style.flex = 1 - fraction;\n            this.backgroundUpper_.style.webkitFlex = 1 - fraction;\n        }\n    }; // Public methods.\n    /**\n       * Disable slider.\n       *\n       * @public\n       */\n\n    MaterialSlider.prototype.disable = function () {\n        this.element_.disabled = true;\n    };\n\n    MaterialSlider.prototype['disable'] = MaterialSlider.prototype.disable; /**\n                                                                               * Enable slider.\n                                                                               *\n                                                                               * @public\n                                                                               */\n\n    MaterialSlider.prototype.enable = function () {\n        this.element_.disabled = false;\n    };\n\n    MaterialSlider.prototype['enable'] = MaterialSlider.prototype.enable; /**\n                                                                             * Update slider value.\n                                                                             *\n                                                                             * @param {number} value The value to which to set the control (optional).\n                                                                             * @public\n                                                                             */\n\n    MaterialSlider.prototype.change = function (value) {\n        if (typeof value !== 'undefined') {\n            this.element_.value = value;\n        }\n\n        this.updateValueStyles_();\n    };\n\n    MaterialSlider.prototype['change'] = MaterialSlider.prototype.change; /**\n                                                                             * Initialize element.\n                                                                             */\n\n    MaterialSlider.prototype.init = function () {\n        if (this.element_) {\n            if (this.isIE_) {\n                // Since we need to specify a very large height in IE due to\n                // implementation limitations, we add a parent here that trims it down to\n                // a reasonable size.\n                var containerIE = document.createElement('div');\n                containerIE.classList.add(this.CssClasses_.IE_CONTAINER);\n                this.element_.parentElement.insertBefore(containerIE, this.element_);\n                this.element_.parentElement.removeChild(this.element_);\n                containerIE.appendChild(this.element_);\n            } else {\n                // For non-IE browsers, we need a div structure that sits behind the\n                // slider and allows us to style the left and right sides of it with\n                // different colors.\n                var container = document.createElement('div');\n                container.classList.add(this.CssClasses_.SLIDER_CONTAINER);\n                this.element_.parentElement.insertBefore(container, this.element_);\n                this.element_.parentElement.removeChild(this.element_);\n                container.appendChild(this.element_);\n                var backgroundFlex = document.createElement('div');\n                backgroundFlex.classList.add(this.CssClasses_.BACKGROUND_FLEX);\n                container.appendChild(backgroundFlex);\n                this.backgroundLower_ = document.createElement('div');\n                this.backgroundLower_.classList.add(this.CssClasses_.BACKGROUND_LOWER);\n                backgroundFlex.appendChild(this.backgroundLower_);\n                this.backgroundUpper_ = document.createElement('div');\n                this.backgroundUpper_.classList.add(this.CssClasses_.BACKGROUND_UPPER);\n                backgroundFlex.appendChild(this.backgroundUpper_);\n            }\n\n            this.boundInputHandler = this.onInput_.bind(this);\n            this.boundChangeHandler = this.onChange_.bind(this);\n            this.boundMouseUpHandler = this.onMouseUp_.bind(this);\n            this.boundContainerMouseDownHandler = this.onContainerMouseDown_.bind(this);\n            this.element_.addEventListener('input', this.boundInputHandler);\n            this.element_.addEventListener('change', this.boundChangeHandler);\n            this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\n            this.element_.parentElement.addEventListener('mousedown', this.boundContainerMouseDownHandler);\n            this.updateValueStyles_();\n            this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n        }\n    }; // The component registers itself. It can assume componentHandler is available\n    // in the global scope.\n\n\n    componentHandler.register({\n        constructor: MaterialSlider,\n        classAsString: 'MaterialSlider',\n        cssClass: 'mdl-js-slider',\n        widget: true\n    }); /**\n         * Copyright 2015 Google Inc. All Rights Reserved.\n         *\n         * Licensed under the Apache License, Version 2.0 (the \"License\");\n         * you may not use this file except in compliance with the License.\n         * You may obtain a copy of the License at\n         *\n         *      http://www.apache.org/licenses/LICENSE-2.0\n         *\n         * Unless required by applicable law or agreed to in writing, software\n         * distributed under the License is distributed on an \"AS IS\" BASIS,\n         * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n         * See the License for the specific language governing permissions and\n         * limitations under the License.\n         */ /**\n               * Class constructor for Snackbar MDL component.\n               * Implements MDL component design pattern defined at:\n               * https://github.com/jasonmayes/mdl-component-design-pattern\n               *\n               * @constructor\n               * @param {HTMLElement} element The element that will be upgraded.\n               */\n\n    var MaterialSnackbar = function () {\n        function MaterialSnackbar(element) {\n            this.element_ = element;\n            this.textElement_ = this.element_.querySelector('.' + this.cssClasses_.MESSAGE);\n            this.actionElement_ = this.element_.querySelector('.' + this.cssClasses_.ACTION);\n\n            if (!this.textElement_) {\n                throw new Error('There must be a message element for a snackbar.');\n            }\n\n            if (!this.actionElement_) {\n                throw new Error('There must be an action element for a snackbar.');\n            }\n\n            this.active = false;\n            this.actionHandler_ = undefined;\n            this.message_ = undefined;\n            this.actionText_ = undefined;\n            this.queuedNotifications_ = [];\n            this.setActionHidden_(true);\n        }\n\n        return MaterialSnackbar;\n    }();\n\n    window['MaterialSnackbar'] = MaterialSnackbar; /**\n                                                      * Store constants in one place so they can be updated easily.\n                                                      *\n                                                      * @enum {string | number}\n                                                      * @private\n                                                      */\n    MaterialSnackbar.prototype.Constant_ = {\n        // The duration of the snackbar show/hide animation, in ms.\n        ANIMATION_LENGTH: 250\n    }; /**\n          * Store strings for class names defined by this component that are used in\n          * JavaScript. This allows us to simply change it in one place should we\n          * decide to modify at a later date.\n          *\n          * @enum {string}\n          * @private\n          */\n    MaterialSnackbar.prototype.cssClasses_ = {\n        SNACKBAR: 'mdl-snackbar',\n        MESSAGE: 'mdl-snackbar__text',\n        ACTION: 'mdl-snackbar__action',\n        ACTIVE: 'mdl-snackbar--active'\n    }; /**\n          * Display the snackbar.\n          *\n          * @private\n          */\n\n    MaterialSnackbar.prototype.displaySnackbar_ = function () {\n        this.element_.setAttribute('aria-hidden', 'true');\n\n        if (this.actionHandler_) {\n            this.actionElement_.textContent = this.actionText_;\n            this.actionElement_.addEventListener('click', this.actionHandler_);\n            this.setActionHidden_(false);\n        }\n\n        this.textElement_.textContent = this.message_;\n        this.element_.classList.add(this.cssClasses_.ACTIVE);\n        this.element_.setAttribute('aria-hidden', 'false');\n        setTimeout(this.cleanup_.bind(this), this.timeout_);\n    }; /**\n          * Show the snackbar.\n          *\n          * @param {Object} data The data for the notification.\n          * @public\n          */\n\n    MaterialSnackbar.prototype.showSnackbar = function (data) {\n        if (data === undefined) {\n            throw new Error('Please provide a data object with at least a message to display.');\n        }\n\n        if (data['message'] === undefined) {\n            throw new Error('Please provide a message to be displayed.');\n        }\n\n        if (data['actionHandler'] && !data['actionText']) {\n            throw new Error('Please provide action text with the handler.');\n        }\n\n        if (this.active) {\n            this.queuedNotifications_.push(data);\n        } else {\n            this.active = true;\n            this.message_ = data['message'];\n\n            if (data['timeout']) {\n                this.timeout_ = data['timeout'];\n            } else {\n                this.timeout_ = 2750;\n            }\n\n            if (data['actionHandler']) {\n                this.actionHandler_ = data['actionHandler'];\n            }\n\n            if (data['actionText']) {\n                this.actionText_ = data['actionText'];\n            }\n\n            this.displaySnackbar_();\n        }\n    };\n\n    MaterialSnackbar.prototype['showSnackbar'] = MaterialSnackbar.prototype.showSnackbar; /**\n                                                                                             * Check if the queue has items within it.\n                                                                                             * If it does, display the next entry.\n                                                                                             *\n                                                                                             * @private\n                                                                                             */\n\n    MaterialSnackbar.prototype.checkQueue_ = function () {\n        if (this.queuedNotifications_.length > 0) {\n            this.showSnackbar(this.queuedNotifications_.shift());\n        }\n    }; /**\n          * Cleanup the snackbar event listeners and accessiblity attributes.\n          *\n          * @private\n          */\n\n    MaterialSnackbar.prototype.cleanup_ = function () {\n        this.element_.classList.remove(this.cssClasses_.ACTIVE);\n        setTimeout(function () {\n            this.element_.setAttribute('aria-hidden', 'true');\n            this.textElement_.textContent = '';\n\n            if (!Boolean(this.actionElement_.getAttribute('aria-hidden'))) {\n                this.setActionHidden_(true);\n                this.actionElement_.textContent = '';\n                this.actionElement_.removeEventListener('click', this.actionHandler_);\n            }\n\n            this.actionHandler_ = undefined;\n            this.message_ = undefined;\n            this.actionText_ = undefined;\n            this.active = false;\n            this.checkQueue_();\n        }.bind(this), this.Constant_.ANIMATION_LENGTH);\n    }; /**\n          * Set the action handler hidden state.\n          *\n          * @param {boolean} value\n          * @private\n          */\n\n    MaterialSnackbar.prototype.setActionHidden_ = function (value) {\n        if (value) {\n            this.actionElement_.setAttribute('aria-hidden', 'true');\n        } else {\n            this.actionElement_.removeAttribute('aria-hidden');\n        }\n    }; // The component registers itself. It can assume componentHandler is available\n    // in the global scope.\n\n\n    componentHandler.register({\n        constructor: MaterialSnackbar,\n        classAsString: 'MaterialSnackbar',\n        cssClass: 'mdl-js-snackbar',\n        widget: true\n    }); /**\n         * @license\n         * Copyright 2015 Google Inc. All Rights Reserved.\n         *\n         * Licensed under the Apache License, Version 2.0 (the \"License\");\n         * you may not use this file except in compliance with the License.\n         * You may obtain a copy of the License at\n         *\n         *      http://www.apache.org/licenses/LICENSE-2.0\n         *\n         * Unless required by applicable law or agreed to in writing, software\n         * distributed under the License is distributed on an \"AS IS\" BASIS,\n         * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n         * See the License for the specific language governing permissions and\n         * limitations under the License.\n         */ /**\n               * Class constructor for Spinner MDL component.\n               * Implements MDL component design pattern defined at:\n               * https://github.com/jasonmayes/mdl-component-design-pattern\n               *\n               * @param {HTMLElement} element The element that will be upgraded.\n               * @constructor\n               */\n\n    var MaterialSpinner = function () {\n        function MaterialSpinner(element) {\n            this.element_ = element; // Initialize instance.\n\n            this.init();\n        }\n\n        return MaterialSpinner;\n    }();\n\n    window['MaterialSpinner'] = MaterialSpinner; /**\n                                                    * Store constants in one place so they can be updated easily.\n                                                    *\n                                                    * @enum {string | number}\n                                                    * @private\n                                                    */\n    MaterialSpinner.prototype.Constant_ = {\n        MDL_SPINNER_LAYER_COUNT: 4\n    }; /**\n          * Store strings for class names defined by this component that are used in\n          * JavaScript. This allows us to simply change it in one place should we\n          * decide to modify at a later date.\n          *\n          * @enum {string}\n          * @private\n          */\n    MaterialSpinner.prototype.CssClasses_ = {\n        MDL_SPINNER_LAYER: 'mdl-spinner__layer',\n        MDL_SPINNER_CIRCLE_CLIPPER: 'mdl-spinner__circle-clipper',\n        MDL_SPINNER_CIRCLE: 'mdl-spinner__circle',\n        MDL_SPINNER_GAP_PATCH: 'mdl-spinner__gap-patch',\n        MDL_SPINNER_LEFT: 'mdl-spinner__left',\n        MDL_SPINNER_RIGHT: 'mdl-spinner__right'\n    }; /**\n          * Auxiliary method to create a spinner layer.\n          *\n          * @param {number} index Index of the layer to be created.\n          * @public\n          */\n\n    MaterialSpinner.prototype.createLayer = function (index) {\n        var layer = document.createElement('div');\n        layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER);\n        layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER + '-' + index);\n        var leftClipper = document.createElement('div');\n        leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n        leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_LEFT);\n        var gapPatch = document.createElement('div');\n        gapPatch.classList.add(this.CssClasses_.MDL_SPINNER_GAP_PATCH);\n        var rightClipper = document.createElement('div');\n        rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n        rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_RIGHT);\n        var circleOwners = [leftClipper, gapPatch, rightClipper];\n\n        for (var i = 0; i < circleOwners.length; i++) {\n            var circle = document.createElement('div');\n            circle.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE);\n            circleOwners[i].appendChild(circle);\n        }\n\n        layer.appendChild(leftClipper);\n        layer.appendChild(gapPatch);\n        layer.appendChild(rightClipper);\n        this.element_.appendChild(layer);\n    };\n\n    MaterialSpinner.prototype['createLayer'] = MaterialSpinner.prototype.createLayer; /**\n                                                                                         * Stops the spinner animation.\n                                                                                         * Public method for users who need to stop the spinner for any reason.\n                                                                                         *\n                                                                                         * @public\n                                                                                         */\n\n    MaterialSpinner.prototype.stop = function () {\n        this.element_.classList.remove('is-active');\n    };\n\n    MaterialSpinner.prototype['stop'] = MaterialSpinner.prototype.stop; /**\n                                                                           * Starts the spinner animation.\n                                                                           * Public method for users who need to manually start the spinner for any reason\n                                                                           * (instead of just adding the 'is-active' class to their markup).\n                                                                           *\n                                                                           * @public\n                                                                           */\n\n    MaterialSpinner.prototype.start = function () {\n        this.element_.classList.add('is-active');\n    };\n\n    MaterialSpinner.prototype['start'] = MaterialSpinner.prototype.start; /**\n                                                                             * Initialize element.\n                                                                             */\n\n    MaterialSpinner.prototype.init = function () {\n        if (this.element_) {\n            for (var i = 1; i <= this.Constant_.MDL_SPINNER_LAYER_COUNT; i++) {\n                this.createLayer(i);\n            }\n\n            this.element_.classList.add('is-upgraded');\n        }\n    }; // The component registers itself. It can assume componentHandler is available\n    // in the global scope.\n\n\n    componentHandler.register({\n        constructor: MaterialSpinner,\n        classAsString: 'MaterialSpinner',\n        cssClass: 'mdl-js-spinner',\n        widget: true\n    }); /**\n         * @license\n         * Copyright 2015 Google Inc. All Rights Reserved.\n         *\n         * Licensed under the Apache License, Version 2.0 (the \"License\");\n         * you may not use this file except in compliance with the License.\n         * You may obtain a copy of the License at\n         *\n         *      http://www.apache.org/licenses/LICENSE-2.0\n         *\n         * Unless required by applicable law or agreed to in writing, software\n         * distributed under the License is distributed on an \"AS IS\" BASIS,\n         * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n         * See the License for the specific language governing permissions and\n         * limitations under the License.\n         */ /**\n               * Class constructor for Checkbox MDL component.\n               * Implements MDL component design pattern defined at:\n               * https://github.com/jasonmayes/mdl-component-design-pattern\n               *\n               * @constructor\n               * @param {HTMLElement} element The element that will be upgraded.\n               */\n\n    var MaterialSwitch = function () {\n        function MaterialSwitch(element) {\n            this.element_ = element; // Initialize instance.\n\n            this.init();\n        }\n\n        return MaterialSwitch;\n    }();\n\n    window['MaterialSwitch'] = MaterialSwitch; /**\n                                                  * Store constants in one place so they can be updated easily.\n                                                  *\n                                                  * @enum {string | number}\n                                                  * @private\n                                                  */\n    MaterialSwitch.prototype.Constant_ = {\n        TINY_TIMEOUT: 0.001\n    }; /**\n          * Store strings for class names defined by this component that are used in\n          * JavaScript. This allows us to simply change it in one place should we\n          * decide to modify at a later date.\n          *\n          * @enum {string}\n          * @private\n          */\n    MaterialSwitch.prototype.CssClasses_ = {\n        INPUT: 'mdl-switch__input',\n        TRACK: 'mdl-switch__track',\n        THUMB: 'mdl-switch__thumb',\n        FOCUS_HELPER: 'mdl-switch__focus-helper',\n        RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n        RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n        RIPPLE_CONTAINER: 'mdl-switch__ripple-container',\n        RIPPLE_CENTER: 'mdl-ripple--center',\n        RIPPLE: 'mdl-ripple',\n        IS_FOCUSED: 'is-focused',\n        IS_DISABLED: 'is-disabled',\n        IS_CHECKED: 'is-checked'\n    }; /**\n          * Handle change of state.\n          *\n          * @param {Event} event The event that fired.\n          * @private\n          */\n\n    MaterialSwitch.prototype.onChange_ = function (event) {\n        this.updateClasses_();\n    }; /**\n          * Handle focus of element.\n          *\n          * @param {Event} event The event that fired.\n          * @private\n          */\n\n    MaterialSwitch.prototype.onFocus_ = function (event) {\n        this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n    }; /**\n          * Handle lost focus of element.\n          *\n          * @param {Event} event The event that fired.\n          * @private\n          */\n\n    MaterialSwitch.prototype.onBlur_ = function (event) {\n        this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n    }; /**\n          * Handle mouseup.\n          *\n          * @param {Event} event The event that fired.\n          * @private\n          */\n\n    MaterialSwitch.prototype.onMouseUp_ = function (event) {\n        this.blur_();\n    }; /**\n          * Handle class updates.\n          *\n          * @private\n          */\n\n    MaterialSwitch.prototype.updateClasses_ = function () {\n        this.checkDisabled();\n        this.checkToggleState();\n    }; /**\n          * Add blur.\n          *\n          * @private\n          */\n\n    MaterialSwitch.prototype.blur_ = function () {\n        // TODO: figure out why there's a focus event being fired after our blur,\n        // so that we can avoid this hack.\n        window.setTimeout(function () {\n            this.inputElement_.blur();\n        }.bind(this), this.Constant_.TINY_TIMEOUT);\n    }; // Public methods.\n    /**\n       * Check the components disabled state.\n       *\n       * @public\n       */\n\n    MaterialSwitch.prototype.checkDisabled = function () {\n        if (this.inputElement_.disabled) {\n            this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n        } else {\n            this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n        }\n    };\n\n    MaterialSwitch.prototype['checkDisabled'] = MaterialSwitch.prototype.checkDisabled; /**\n                                                                                           * Check the components toggled state.\n                                                                                           *\n                                                                                           * @public\n                                                                                           */\n\n    MaterialSwitch.prototype.checkToggleState = function () {\n        if (this.inputElement_.checked) {\n            this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n        } else {\n            this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n        }\n    };\n\n    MaterialSwitch.prototype['checkToggleState'] = MaterialSwitch.prototype.checkToggleState; /**\n                                                                                                 * Disable switch.\n                                                                                                 *\n                                                                                                 * @public\n                                                                                                 */\n\n    MaterialSwitch.prototype.disable = function () {\n        this.inputElement_.disabled = true;\n        this.updateClasses_();\n    };\n\n    MaterialSwitch.prototype['disable'] = MaterialSwitch.prototype.disable; /**\n                                                                               * Enable switch.\n                                                                               *\n                                                                               * @public\n                                                                               */\n\n    MaterialSwitch.prototype.enable = function () {\n        this.inputElement_.disabled = false;\n        this.updateClasses_();\n    };\n\n    MaterialSwitch.prototype['enable'] = MaterialSwitch.prototype.enable; /**\n                                                                             * Activate switch.\n                                                                             *\n                                                                             * @public\n                                                                             */\n\n    MaterialSwitch.prototype.on = function () {\n        this.inputElement_.checked = true;\n        this.updateClasses_();\n    };\n\n    MaterialSwitch.prototype['on'] = MaterialSwitch.prototype.on; /**\n                                                                     * Deactivate switch.\n                                                                     *\n                                                                     * @public\n                                                                     */\n\n    MaterialSwitch.prototype.off = function () {\n        this.inputElement_.checked = false;\n        this.updateClasses_();\n    };\n\n    MaterialSwitch.prototype['off'] = MaterialSwitch.prototype.off; /**\n                                                                       * Initialize element.\n                                                                       */\n\n    MaterialSwitch.prototype.init = function () {\n        if (this.element_) {\n            this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n            var track = document.createElement('div');\n            track.classList.add(this.CssClasses_.TRACK);\n            var thumb = document.createElement('div');\n            thumb.classList.add(this.CssClasses_.THUMB);\n            var focusHelper = document.createElement('span');\n            focusHelper.classList.add(this.CssClasses_.FOCUS_HELPER);\n            thumb.appendChild(focusHelper);\n            this.element_.appendChild(track);\n            this.element_.appendChild(thumb);\n            this.boundMouseUpHandler = this.onMouseUp_.bind(this);\n\n            if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n                this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n                this.rippleContainerElement_ = document.createElement('span');\n                this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n                this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n                this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n                this.rippleContainerElement_.addEventListener('mouseup', this.boundMouseUpHandler);\n                var ripple = document.createElement('span');\n                ripple.classList.add(this.CssClasses_.RIPPLE);\n                this.rippleContainerElement_.appendChild(ripple);\n                this.element_.appendChild(this.rippleContainerElement_);\n            }\n\n            this.boundChangeHandler = this.onChange_.bind(this);\n            this.boundFocusHandler = this.onFocus_.bind(this);\n            this.boundBlurHandler = this.onBlur_.bind(this);\n            this.inputElement_.addEventListener('change', this.boundChangeHandler);\n            this.inputElement_.addEventListener('focus', this.boundFocusHandler);\n            this.inputElement_.addEventListener('blur', this.boundBlurHandler);\n            this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\n            this.updateClasses_();\n            this.element_.classList.add('is-upgraded');\n        }\n    }; // The component registers itself. It can assume componentHandler is available\n    // in the global scope.\n\n\n    componentHandler.register({\n        constructor: MaterialSwitch,\n        classAsString: 'MaterialSwitch',\n        cssClass: 'mdl-js-switch',\n        widget: true\n    }); /**\n         * @license\n         * Copyright 2015 Google Inc. All Rights Reserved.\n         *\n         * Licensed under the Apache License, Version 2.0 (the \"License\");\n         * you may not use this file except in compliance with the License.\n         * You may obtain a copy of the License at\n         *\n         *      http://www.apache.org/licenses/LICENSE-2.0\n         *\n         * Unless required by applicable law or agreed to in writing, software\n         * distributed under the License is distributed on an \"AS IS\" BASIS,\n         * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n         * See the License for the specific language governing permissions and\n         * limitations under the License.\n         */ /**\n               * Class constructor for Tabs MDL component.\n               * Implements MDL component design pattern defined at:\n               * https://github.com/jasonmayes/mdl-component-design-pattern\n               *\n               * @constructor\n               * @param {Element} element The element that will be upgraded.\n               */\n\n    var MaterialTabs = function () {\n        function MaterialTabs(element) {\n            // Stores the HTML element.\n            this.element_ = element; // Initialize instance.\n\n            this.init();\n        }\n\n        return MaterialTabs;\n    }();\n\n    window['MaterialTabs'] = MaterialTabs; /**\n                                              * Store constants in one place so they can be updated easily.\n                                              *\n                                              * @enum {string}\n                                              * @private\n                                              */\n    MaterialTabs.prototype.Constant_ = {}; /**\n                                              * Store strings for class names defined by this component that are used in\n                                              * JavaScript. This allows us to simply change it in one place should we\n                                              * decide to modify at a later date.\n                                              *\n                                              * @enum {string}\n                                              * @private\n                                              */\n    MaterialTabs.prototype.CssClasses_ = {\n        TAB_CLASS: 'mdl-tabs__tab',\n        PANEL_CLASS: 'mdl-tabs__panel',\n        ACTIVE_CLASS: 'is-active',\n        UPGRADED_CLASS: 'is-upgraded',\n        MDL_JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n        MDL_RIPPLE_CONTAINER: 'mdl-tabs__ripple-container',\n        MDL_RIPPLE: 'mdl-ripple',\n        MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events'\n    }; /**\n          * Handle clicks to a tabs component\n          *\n          * @private\n          */\n\n    MaterialTabs.prototype.initTabs_ = function () {\n        if (this.element_.classList.contains(this.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS);\n        } // Select element tabs, document panels\n\n\n        this.tabs_ = this.element_.querySelectorAll('.' + this.CssClasses_.TAB_CLASS);\n        this.panels_ = this.element_.querySelectorAll('.' + this.CssClasses_.PANEL_CLASS); // Create new tabs for each tab element\n\n        for (var i = 0; i < this.tabs_.length; i++) {\n            new MaterialTab(this.tabs_[i], this);\n        }\n\n        this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS);\n    }; /**\n          * Reset tab state, dropping active classes\n          *\n          * @private\n          */\n\n    MaterialTabs.prototype.resetTabState_ = function () {\n        for (var k = 0; k < this.tabs_.length; k++) {\n            this.tabs_[k].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n        }\n    }; /**\n          * Reset panel state, droping active classes\n          *\n          * @private\n          */\n\n    MaterialTabs.prototype.resetPanelState_ = function () {\n        for (var j = 0; j < this.panels_.length; j++) {\n            this.panels_[j].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n        }\n    }; /**\n          * Initialize element.\n          */\n\n    MaterialTabs.prototype.init = function () {\n        if (this.element_) {\n            this.initTabs_();\n        }\n    }; /**\n          * Constructor for an individual tab.\n          *\n          * @constructor\n          * @param {Element} tab The HTML element for the tab.\n          * @param {MaterialTabs} ctx The MaterialTabs object that owns the tab.\n          */\n\n    function MaterialTab(tab, ctx) {\n        if (tab) {\n            if (ctx.element_.classList.contains(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n                var rippleContainer = document.createElement('span');\n                rippleContainer.classList.add(ctx.CssClasses_.MDL_RIPPLE_CONTAINER);\n                rippleContainer.classList.add(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT);\n                var ripple = document.createElement('span');\n                ripple.classList.add(ctx.CssClasses_.MDL_RIPPLE);\n                rippleContainer.appendChild(ripple);\n                tab.appendChild(rippleContainer);\n            }\n\n            tab.addEventListener('click', function (e) {\n                if (tab.getAttribute('href').charAt(0) === '#') {\n                    e.preventDefault();\n                    var href = tab.href.split('#')[1];\n                    var panel = ctx.element_.querySelector('#' + href);\n                    ctx.resetTabState_();\n                    ctx.resetPanelState_();\n                    tab.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n                    panel.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n                }\n            });\n        }\n    } // The component registers itself. It can assume componentHandler is available\n    // in the global scope.\n\n\n    componentHandler.register({\n        constructor: MaterialTabs,\n        classAsString: 'MaterialTabs',\n        cssClass: 'mdl-js-tabs'\n    }); /**\n         * @license\n         * Copyright 2015 Google Inc. All Rights Reserved.\n         *\n         * Licensed under the Apache License, Version 2.0 (the \"License\");\n         * you may not use this file except in compliance with the License.\n         * You may obtain a copy of the License at\n         *\n         *      http://www.apache.org/licenses/LICENSE-2.0\n         *\n         * Unless required by applicable law or agreed to in writing, software\n         * distributed under the License is distributed on an \"AS IS\" BASIS,\n         * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n         * See the License for the specific language governing permissions and\n         * limitations under the License.\n         */ /**\n               * Class constructor for Textfield MDL component.\n               * Implements MDL component design pattern defined at:\n               * https://github.com/jasonmayes/mdl-component-design-pattern\n               *\n               * @constructor\n               * @param {HTMLElement} element The element that will be upgraded.\n               */\n\n    var MaterialTextfield = function () {\n        function MaterialTextfield(element) {\n            this.element_ = element;\n            this.maxRows = this.Constant_.NO_MAX_ROWS; // Initialize instance.\n\n            this.init();\n        }\n\n        return MaterialTextfield;\n    }();\n\n    window['MaterialTextfield'] = MaterialTextfield; /**\n                                                        * Store constants in one place so they can be updated easily.\n                                                        *\n                                                        * @enum {string | number}\n                                                        * @private\n                                                        */\n    MaterialTextfield.prototype.Constant_ = {\n        NO_MAX_ROWS: -1,\n        MAX_ROWS_ATTRIBUTE: 'maxrows'\n    }; /**\n          * Store strings for class names defined by this component that are used in\n          * JavaScript. This allows us to simply change it in one place should we\n          * decide to modify at a later date.\n          *\n          * @enum {string}\n          * @private\n          */\n    MaterialTextfield.prototype.CssClasses_ = {\n        LABEL: 'mdl-textfield__label',\n        INPUT: 'mdl-textfield__input',\n        IS_DIRTY: 'is-dirty',\n        IS_FOCUSED: 'is-focused',\n        IS_DISABLED: 'is-disabled',\n        IS_INVALID: 'is-invalid',\n        IS_UPGRADED: 'is-upgraded',\n        HAS_PLACEHOLDER: 'has-placeholder'\n    }; /**\n          * Handle input being entered.\n          *\n          * @param {Event} event The event that fired.\n          * @private\n          */\n\n    MaterialTextfield.prototype.onKeyDown_ = function (event) {\n        var currentRowCount = event.target.value.split('\\n').length;\n\n        if (event.keyCode === 13) {\n            if (currentRowCount >= this.maxRows) {\n                event.preventDefault();\n            }\n        }\n    }; /**\n          * Handle focus.\n          *\n          * @param {Event} event The event that fired.\n          * @private\n          */\n\n    MaterialTextfield.prototype.onFocus_ = function (event) {\n        this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n    }; /**\n          * Handle lost focus.\n          *\n          * @param {Event} event The event that fired.\n          * @private\n          */\n\n    MaterialTextfield.prototype.onBlur_ = function (event) {\n        this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n    }; /**\n          * Handle reset event from out side.\n          *\n          * @param {Event} event The event that fired.\n          * @private\n          */\n\n    MaterialTextfield.prototype.onReset_ = function (event) {\n        this.updateClasses_();\n    }; /**\n          * Handle class updates.\n          *\n          * @private\n          */\n\n    MaterialTextfield.prototype.updateClasses_ = function () {\n        this.checkDisabled();\n        this.checkValidity();\n        this.checkDirty();\n        this.checkFocus();\n    }; // Public methods.\n    /**\n       * Check the disabled state and update field accordingly.\n       *\n       * @public\n       */\n\n    MaterialTextfield.prototype.checkDisabled = function () {\n        if (this.input_.disabled) {\n            this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n        } else {\n            this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n        }\n    };\n\n    MaterialTextfield.prototype['checkDisabled'] = MaterialTextfield.prototype.checkDisabled; /**\n                                                                                                * Check the focus state and update field accordingly.\n                                                                                                *\n                                                                                                * @public\n                                                                                                */\n\n    MaterialTextfield.prototype.checkFocus = function () {\n        if (Boolean(this.element_.querySelector(':focus'))) {\n            this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n        } else {\n            this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n        }\n    };\n\n    MaterialTextfield.prototype['checkFocus'] = MaterialTextfield.prototype.checkFocus; /**\n                                                                                           * Check the validity state and update field accordingly.\n                                                                                           *\n                                                                                           * @public\n                                                                                           */\n\n    MaterialTextfield.prototype.checkValidity = function () {\n        if (this.input_.validity) {\n            if (this.input_.validity.valid) {\n                this.element_.classList.remove(this.CssClasses_.IS_INVALID);\n            } else {\n                this.element_.classList.add(this.CssClasses_.IS_INVALID);\n            }\n        }\n    };\n\n    MaterialTextfield.prototype['checkValidity'] = MaterialTextfield.prototype.checkValidity; /**\n                                                                                                 * Check the dirty state and update field accordingly.\n                                                                                                 *\n                                                                                                 * @public\n                                                                                                 */\n\n    MaterialTextfield.prototype.checkDirty = function () {\n        if (this.input_.value && this.input_.value.length > 0) {\n            this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n        } else {\n            this.element_.classList.remove(this.CssClasses_.IS_DIRTY);\n        }\n    };\n\n    MaterialTextfield.prototype['checkDirty'] = MaterialTextfield.prototype.checkDirty; /**\n                                                                                           * Disable text field.\n                                                                                           *\n                                                                                           * @public\n                                                                                           */\n\n    MaterialTextfield.prototype.disable = function () {\n        this.input_.disabled = true;\n        this.updateClasses_();\n    };\n\n    MaterialTextfield.prototype['disable'] = MaterialTextfield.prototype.disable; /**\n                                                                                     * Enable text field.\n                                                                                     *\n                                                                                     * @public\n                                                                                     */\n\n    MaterialTextfield.prototype.enable = function () {\n        this.input_.disabled = false;\n        this.updateClasses_();\n    };\n\n    MaterialTextfield.prototype['enable'] = MaterialTextfield.prototype.enable; /**\n                                                                                   * Update text field value.\n                                                                                   *\n                                                                                   * @param {string} value The value to which to set the control (optional).\n                                                                                   * @public\n                                                                                   */\n\n    MaterialTextfield.prototype.change = function (value) {\n        this.input_.value = value || '';\n        this.updateClasses_();\n    };\n\n    MaterialTextfield.prototype['change'] = MaterialTextfield.prototype.change; /**\n                                                                                   * Initialize element.\n                                                                                   */\n\n    MaterialTextfield.prototype.init = function () {\n        if (this.element_) {\n            this.label_ = this.element_.querySelector('.' + this.CssClasses_.LABEL);\n            this.input_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n\n            if (this.input_) {\n                if (this.input_.hasAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE)) {\n                    this.maxRows = parseInt(this.input_.getAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE), 10);\n\n                    if (isNaN(this.maxRows)) {\n                        this.maxRows = this.Constant_.NO_MAX_ROWS;\n                    }\n                }\n\n                if (this.input_.hasAttribute('placeholder')) {\n                    this.element_.classList.add(this.CssClasses_.HAS_PLACEHOLDER);\n                }\n\n                this.boundUpdateClassesHandler = this.updateClasses_.bind(this);\n                this.boundFocusHandler = this.onFocus_.bind(this);\n                this.boundBlurHandler = this.onBlur_.bind(this);\n                this.boundResetHandler = this.onReset_.bind(this);\n                this.input_.addEventListener('input', this.boundUpdateClassesHandler);\n                this.input_.addEventListener('focus', this.boundFocusHandler);\n                this.input_.addEventListener('blur', this.boundBlurHandler);\n                this.input_.addEventListener('reset', this.boundResetHandler);\n\n                if (this.maxRows !== this.Constant_.NO_MAX_ROWS) {\n                    // TODO: This should handle pasting multi line text.\n                    // Currently doesn't.\n                    this.boundKeyDownHandler = this.onKeyDown_.bind(this);\n                    this.input_.addEventListener('keydown', this.boundKeyDownHandler);\n                }\n\n                var invalid = this.element_.classList.contains(this.CssClasses_.IS_INVALID);\n                this.updateClasses_();\n                this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n\n                if (invalid) {\n                    this.element_.classList.add(this.CssClasses_.IS_INVALID);\n                }\n\n                if (this.input_.hasAttribute('autofocus')) {\n                    this.element_.focus();\n                    this.checkFocus();\n                }\n            }\n        }\n    }; // The component registers itself. It can assume componentHandler is available\n    // in the global scope.\n\n\n    componentHandler.register({\n        constructor: MaterialTextfield,\n        classAsString: 'MaterialTextfield',\n        cssClass: 'mdl-js-textfield',\n        widget: true\n    }); /**\n         * @license\n         * Copyright 2015 Google Inc. All Rights Reserved.\n         *\n         * Licensed under the Apache License, Version 2.0 (the \"License\");\n         * you may not use this file except in compliance with the License.\n         * You may obtain a copy of the License at\n         *\n         *      http://www.apache.org/licenses/LICENSE-2.0\n         *\n         * Unless required by applicable law or agreed to in writing, software\n         * distributed under the License is distributed on an \"AS IS\" BASIS,\n         * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n         * See the License for the specific language governing permissions and\n         * limitations under the License.\n         */ /**\n               * Class constructor for Tooltip MDL component.\n               * Implements MDL component design pattern defined at:\n               * https://github.com/jasonmayes/mdl-component-design-pattern\n               *\n               * @constructor\n               * @param {HTMLElement} element The element that will be upgraded.\n               */\n\n    var MaterialTooltip = function () {\n        function MaterialTooltip(element) {\n            this.element_ = element; // Initialize instance.\n\n            this.init();\n        }\n\n        return MaterialTooltip;\n    }();\n\n    window['MaterialTooltip'] = MaterialTooltip; /**\n                                                    * Store constants in one place so they can be updated easily.\n                                                    *\n                                                    * @enum {string | number}\n                                                    * @private\n                                                    */\n    MaterialTooltip.prototype.Constant_ = {}; /**\n                                                 * Store strings for class names defined by this component that are used in\n                                                 * JavaScript. This allows us to simply change it in one place should we\n                                                 * decide to modify at a later date.\n                                                 *\n                                                 * @enum {string}\n                                                 * @private\n                                                 */\n    MaterialTooltip.prototype.CssClasses_ = {\n        IS_ACTIVE: 'is-active',\n        BOTTOM: 'mdl-tooltip--bottom',\n        LEFT: 'mdl-tooltip--left',\n        RIGHT: 'mdl-tooltip--right',\n        TOP: 'mdl-tooltip--top'\n    }; /**\n          * Handle mouseenter for tooltip.\n          *\n          * @param {Event} event The event that fired.\n          * @private\n          */\n\n    MaterialTooltip.prototype.handleMouseEnter_ = function (event) {\n        var props = event.target.getBoundingClientRect();\n        var left = props.left + props.width / 2;\n        var top = props.top + props.height / 2;\n        var marginLeft = -1 * (this.element_.offsetWidth / 2);\n        var marginTop = -1 * (this.element_.offsetHeight / 2);\n\n        if (this.element_.classList.contains(this.CssClasses_.LEFT) || this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n            left = props.width / 2;\n\n            if (top + marginTop < 0) {\n                this.element_.style.top = '0';\n                this.element_.style.marginTop = '0';\n            } else {\n                this.element_.style.top = top + 'px';\n                this.element_.style.marginTop = marginTop + 'px';\n            }\n        } else {\n            if (left + marginLeft < 0) {\n                this.element_.style.left = '0';\n                this.element_.style.marginLeft = '0';\n            } else {\n                this.element_.style.left = left + 'px';\n                this.element_.style.marginLeft = marginLeft + 'px';\n            }\n        }\n\n        if (this.element_.classList.contains(this.CssClasses_.TOP)) {\n            this.element_.style.top = props.top - this.element_.offsetHeight - 10 + 'px';\n        } else if (this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n            this.element_.style.left = props.left + props.width + 10 + 'px';\n        } else if (this.element_.classList.contains(this.CssClasses_.LEFT)) {\n            this.element_.style.left = props.left - this.element_.offsetWidth - 10 + 'px';\n        } else {\n            this.element_.style.top = props.top + props.height + 10 + 'px';\n        }\n\n        this.element_.classList.add(this.CssClasses_.IS_ACTIVE);\n    }; /**\n          * Hide tooltip on mouseleave or scroll\n          *\n          * @private\n          */\n\n    MaterialTooltip.prototype.hideTooltip_ = function () {\n        this.element_.classList.remove(this.CssClasses_.IS_ACTIVE);\n    }; /**\n          * Initialize element.\n          */\n\n    MaterialTooltip.prototype.init = function () {\n        if (this.element_) {\n            var forElId = this.element_.getAttribute('for') || this.element_.getAttribute('data-mdl-for');\n\n            if (forElId) {\n                this.forElement_ = document.getElementById(forElId);\n            }\n\n            if (this.forElement_) {\n                // It's left here because it prevents accidental text selection on Android\n                if (!this.forElement_.hasAttribute('tabindex')) {\n                    this.forElement_.setAttribute('tabindex', '0');\n                }\n\n                this.boundMouseEnterHandler = this.handleMouseEnter_.bind(this);\n                this.boundMouseLeaveAndScrollHandler = this.hideTooltip_.bind(this);\n                this.forElement_.addEventListener('mouseenter', this.boundMouseEnterHandler, false);\n                this.forElement_.addEventListener('touchend', this.boundMouseEnterHandler, false);\n                this.forElement_.addEventListener('mouseleave', this.boundMouseLeaveAndScrollHandler, false);\n                window.addEventListener('scroll', this.boundMouseLeaveAndScrollHandler, true);\n                window.addEventListener('touchstart', this.boundMouseLeaveAndScrollHandler);\n            }\n        }\n    }; // The component registers itself. It can assume componentHandler is available\n    // in the global scope.\n\n\n    componentHandler.register({\n        constructor: MaterialTooltip,\n        classAsString: 'MaterialTooltip',\n        cssClass: 'mdl-tooltip'\n    }); /**\n         * @license\n         * Copyright 2015 Google Inc. All Rights Reserved.\n         *\n         * Licensed under the Apache License, Version 2.0 (the \"License\");\n         * you may not use this file except in compliance with the License.\n         * You may obtain a copy of the License at\n         *\n         *      http://www.apache.org/licenses/LICENSE-2.0\n         *\n         * Unless required by applicable law or agreed to in writing, software\n         * distributed under the License is distributed on an \"AS IS\" BASIS,\n         * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n         * See the License for the specific language governing permissions and\n         * limitations under the License.\n         */ /**\n               * Class constructor for Layout MDL component.\n               * Implements MDL component design pattern defined at:\n               * https://github.com/jasonmayes/mdl-component-design-pattern\n               *\n               * @constructor\n               * @param {HTMLElement} element The element that will be upgraded.\n               */\n\n    var MaterialLayout = function () {\n        function MaterialLayout(element) {\n            this.element_ = element; // Initialize instance.\n\n            this.init();\n        }\n\n        return MaterialLayout;\n    }();\n\n    window['MaterialLayout'] = MaterialLayout; /**\n                                                  * Store constants in one place so they can be updated easily.\n                                                  *\n                                                  * @enum {string | number}\n                                                  * @private\n                                                  */\n    MaterialLayout.prototype.Constant_ = {\n        MAX_WIDTH: '(max-width: 1024px)',\n        TAB_SCROLL_PIXELS: 100,\n        RESIZE_TIMEOUT: 100,\n        MENU_ICON: '&#xE5D2;',\n        CHEVRON_LEFT: 'chevron_left',\n        CHEVRON_RIGHT: 'chevron_right'\n    }; /**\n          * Keycodes, for code readability.\n          *\n          * @enum {number}\n          * @private\n          */\n    MaterialLayout.prototype.Keycodes_ = {\n        ENTER: 13,\n        ESCAPE: 27,\n        SPACE: 32\n    }; /**\n          * Modes.\n          *\n          * @enum {number}\n          * @private\n          */\n    MaterialLayout.prototype.Mode_ = {\n        STANDARD: 0,\n        SEAMED: 1,\n        WATERFALL: 2,\n        SCROLL: 3\n    }; /**\n          * Store strings for class names defined by this component that are used in\n          * JavaScript. This allows us to simply change it in one place should we\n          * decide to modify at a later date.\n          *\n          * @enum {string}\n          * @private\n          */\n    MaterialLayout.prototype.CssClasses_ = {\n        CONTAINER: 'mdl-layout__container',\n        HEADER: 'mdl-layout__header',\n        DRAWER: 'mdl-layout__drawer',\n        CONTENT: 'mdl-layout__content',\n        DRAWER_BTN: 'mdl-layout__drawer-button',\n        ICON: 'material-icons',\n        JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n        RIPPLE_CONTAINER: 'mdl-layout__tab-ripple-container',\n        RIPPLE: 'mdl-ripple',\n        RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n        HEADER_SEAMED: 'mdl-layout__header--seamed',\n        HEADER_WATERFALL: 'mdl-layout__header--waterfall',\n        HEADER_SCROLL: 'mdl-layout__header--scroll',\n        FIXED_HEADER: 'mdl-layout--fixed-header',\n        OBFUSCATOR: 'mdl-layout__obfuscator',\n        TAB_BAR: 'mdl-layout__tab-bar',\n        TAB_CONTAINER: 'mdl-layout__tab-bar-container',\n        TAB: 'mdl-layout__tab',\n        TAB_BAR_BUTTON: 'mdl-layout__tab-bar-button',\n        TAB_BAR_LEFT_BUTTON: 'mdl-layout__tab-bar-left-button',\n        TAB_BAR_RIGHT_BUTTON: 'mdl-layout__tab-bar-right-button',\n        TAB_MANUAL_SWITCH: 'mdl-layout__tab-manual-switch',\n        PANEL: 'mdl-layout__tab-panel',\n        HAS_DRAWER: 'has-drawer',\n        HAS_TABS: 'has-tabs',\n        HAS_SCROLLING_HEADER: 'has-scrolling-header',\n        CASTING_SHADOW: 'is-casting-shadow',\n        IS_COMPACT: 'is-compact',\n        IS_SMALL_SCREEN: 'is-small-screen',\n        IS_DRAWER_OPEN: 'is-visible',\n        IS_ACTIVE: 'is-active',\n        IS_UPGRADED: 'is-upgraded',\n        IS_ANIMATING: 'is-animating',\n        ON_LARGE_SCREEN: 'mdl-layout--large-screen-only',\n        ON_SMALL_SCREEN: 'mdl-layout--small-screen-only'\n    }; /**\n          * Handles scrolling on the content.\n          *\n          * @private\n          */\n\n    MaterialLayout.prototype.contentScrollHandler_ = function () {\n        if (this.header_.classList.contains(this.CssClasses_.IS_ANIMATING)) {\n            return;\n        }\n\n        var headerVisible = !this.element_.classList.contains(this.CssClasses_.IS_SMALL_SCREEN) || this.element_.classList.contains(this.CssClasses_.FIXED_HEADER);\n\n        if (this.content_.scrollTop > 0 && !this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n            this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\n            this.header_.classList.add(this.CssClasses_.IS_COMPACT);\n\n            if (headerVisible) {\n                this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n            }\n        } else if (this.content_.scrollTop <= 0 && this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n            this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n            this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\n\n            if (headerVisible) {\n                this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n            }\n        }\n    }; /**\n          * Handles a keyboard event on the drawer.\n          *\n          * @param {Event} evt The event that fired.\n          * @private\n          */\n\n    MaterialLayout.prototype.keyboardEventHandler_ = function (evt) {\n        // Only react when the drawer is open.\n        if (evt.keyCode === this.Keycodes_.ESCAPE && this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)) {\n            this.toggleDrawer();\n        }\n    }; /**\n          * Handles changes in screen size.\n          *\n          * @private\n          */\n\n    MaterialLayout.prototype.screenSizeHandler_ = function () {\n        if (this.screenSizeMediaQuery_.matches) {\n            this.element_.classList.add(this.CssClasses_.IS_SMALL_SCREEN);\n        } else {\n            this.element_.classList.remove(this.CssClasses_.IS_SMALL_SCREEN); // Collapse drawer (if any) when moving to a large screen size.\n\n            if (this.drawer_) {\n                this.drawer_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);\n                this.obfuscator_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);\n            }\n        }\n    }; /**\n          * Handles events of drawer button.\n          *\n          * @param {Event} evt The event that fired.\n          * @private\n          */\n\n    MaterialLayout.prototype.drawerToggleHandler_ = function (evt) {\n        if (evt && evt.type === 'keydown') {\n            if (evt.keyCode === this.Keycodes_.SPACE || evt.keyCode === this.Keycodes_.ENTER) {\n                // prevent scrolling in drawer nav\n                evt.preventDefault();\n            } else {\n                // prevent other keys\n                return;\n            }\n        }\n\n        this.toggleDrawer();\n    }; /**\n          * Handles (un)setting the `is-animating` class\n          *\n          * @private\n          */\n\n    MaterialLayout.prototype.headerTransitionEndHandler_ = function () {\n        this.header_.classList.remove(this.CssClasses_.IS_ANIMATING);\n    }; /**\n          * Handles expanding the header on click\n          *\n          * @private\n          */\n\n    MaterialLayout.prototype.headerClickHandler_ = function () {\n        if (this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n            this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\n            this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n        }\n    }; /**\n          * Reset tab state, dropping active classes\n          *\n          * @private\n          */\n\n    MaterialLayout.prototype.resetTabState_ = function (tabBar) {\n        for (var k = 0; k < tabBar.length; k++) {\n            tabBar[k].classList.remove(this.CssClasses_.IS_ACTIVE);\n        }\n    }; /**\n          * Reset panel state, droping active classes\n          *\n          * @private\n          */\n\n    MaterialLayout.prototype.resetPanelState_ = function (panels) {\n        for (var j = 0; j < panels.length; j++) {\n            panels[j].classList.remove(this.CssClasses_.IS_ACTIVE);\n        }\n    }; /**\n         * Toggle drawer state\n         *\n         * @public\n         */\n\n    MaterialLayout.prototype.toggleDrawer = function () {\n        var drawerButton = this.element_.querySelector('.' + this.CssClasses_.DRAWER_BTN);\n        this.drawer_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);\n        this.obfuscator_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN); // Set accessibility properties.\n\n        if (this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)) {\n            this.drawer_.setAttribute('aria-hidden', 'false');\n            drawerButton.setAttribute('aria-expanded', 'true');\n        } else {\n            this.drawer_.setAttribute('aria-hidden', 'true');\n            drawerButton.setAttribute('aria-expanded', 'false');\n        }\n    };\n\n    MaterialLayout.prototype['toggleDrawer'] = MaterialLayout.prototype.toggleDrawer; /**\n                                                                                         * Initialize element.\n                                                                                         */\n\n    MaterialLayout.prototype.init = function () {\n        if (this.element_) {\n            var container = document.createElement('div');\n            container.classList.add(this.CssClasses_.CONTAINER);\n            var focusedElement = this.element_.querySelector(':focus');\n            this.element_.parentElement.insertBefore(container, this.element_);\n            this.element_.parentElement.removeChild(this.element_);\n            container.appendChild(this.element_);\n\n            if (focusedElement) {\n                focusedElement.focus();\n            }\n\n            var directChildren = this.element_.childNodes;\n            var numChildren = directChildren.length;\n\n            for (var c = 0; c < numChildren; c++) {\n                var child = directChildren[c];\n\n                if (child.classList && child.classList.contains(this.CssClasses_.HEADER)) {\n                    this.header_ = child;\n                }\n\n                if (child.classList && child.classList.contains(this.CssClasses_.DRAWER)) {\n                    this.drawer_ = child;\n                }\n\n                if (child.classList && child.classList.contains(this.CssClasses_.CONTENT)) {\n                    this.content_ = child;\n                }\n            }\n\n            window.addEventListener('pageshow', function (e) {\n                if (e.persisted) {\n                    // when page is loaded from back/forward cache\n                    // trigger repaint to let layout scroll in safari\n                    this.element_.style.overflowY = 'hidden';\n                    requestAnimationFrame(function () {\n                        this.element_.style.overflowY = '';\n                    }.bind(this));\n                }\n            }.bind(this), false);\n\n            if (this.header_) {\n                this.tabBar_ = this.header_.querySelector('.' + this.CssClasses_.TAB_BAR);\n            }\n\n            var mode = this.Mode_.STANDARD;\n\n            if (this.header_) {\n                if (this.header_.classList.contains(this.CssClasses_.HEADER_SEAMED)) {\n                    mode = this.Mode_.SEAMED;\n                } else if (this.header_.classList.contains(this.CssClasses_.HEADER_WATERFALL)) {\n                    mode = this.Mode_.WATERFALL;\n                    this.header_.addEventListener('transitionend', this.headerTransitionEndHandler_.bind(this));\n                    this.header_.addEventListener('click', this.headerClickHandler_.bind(this));\n                } else if (this.header_.classList.contains(this.CssClasses_.HEADER_SCROLL)) {\n                    mode = this.Mode_.SCROLL;\n                    container.classList.add(this.CssClasses_.HAS_SCROLLING_HEADER);\n                }\n\n                if (mode === this.Mode_.STANDARD) {\n                    this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\n\n                    if (this.tabBar_) {\n                        this.tabBar_.classList.add(this.CssClasses_.CASTING_SHADOW);\n                    }\n                } else if (mode === this.Mode_.SEAMED || mode === this.Mode_.SCROLL) {\n                    this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n\n                    if (this.tabBar_) {\n                        this.tabBar_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n                    }\n                } else if (mode === this.Mode_.WATERFALL) {\n                    // Add and remove shadows depending on scroll position.\n                    // Also add/remove auxiliary class for styling of the compact version of\n                    // the header.\n                    this.content_.addEventListener('scroll', this.contentScrollHandler_.bind(this));\n                    this.contentScrollHandler_();\n                }\n            } // Add drawer toggling button to our layout, if we have an openable drawer.\n\n\n            if (this.drawer_) {\n                var drawerButton = this.element_.querySelector('.' + this.CssClasses_.DRAWER_BTN);\n\n                if (!drawerButton) {\n                    drawerButton = document.createElement('div');\n                    drawerButton.setAttribute('aria-expanded', 'false');\n                    drawerButton.setAttribute('role', 'button');\n                    drawerButton.setAttribute('tabindex', '0');\n                    drawerButton.classList.add(this.CssClasses_.DRAWER_BTN);\n                    var drawerButtonIcon = document.createElement('i');\n                    drawerButtonIcon.classList.add(this.CssClasses_.ICON);\n                    drawerButtonIcon.innerHTML = this.Constant_.MENU_ICON;\n                    drawerButton.appendChild(drawerButtonIcon);\n                }\n\n                if (this.drawer_.classList.contains(this.CssClasses_.ON_LARGE_SCREEN)) {\n                    //If drawer has ON_LARGE_SCREEN class then add it to the drawer toggle button as well.\n                    drawerButton.classList.add(this.CssClasses_.ON_LARGE_SCREEN);\n                } else if (this.drawer_.classList.contains(this.CssClasses_.ON_SMALL_SCREEN)) {\n                    //If drawer has ON_SMALL_SCREEN class then add it to the drawer toggle button as well.\n                    drawerButton.classList.add(this.CssClasses_.ON_SMALL_SCREEN);\n                }\n\n                drawerButton.addEventListener('click', this.drawerToggleHandler_.bind(this));\n                drawerButton.addEventListener('keydown', this.drawerToggleHandler_.bind(this)); // Add a class if the layout has a drawer, for altering the left padding.\n                // Adds the HAS_DRAWER to the elements since this.header_ may or may\n                // not be present.\n\n                this.element_.classList.add(this.CssClasses_.HAS_DRAWER); // If we have a fixed header, add the button to the header rather than\n                // the layout.\n\n                if (this.element_.classList.contains(this.CssClasses_.FIXED_HEADER)) {\n                    this.header_.insertBefore(drawerButton, this.header_.firstChild);\n                } else {\n                    this.element_.insertBefore(drawerButton, this.content_);\n                }\n\n                var obfuscator = document.createElement('div');\n                obfuscator.classList.add(this.CssClasses_.OBFUSCATOR);\n                this.element_.appendChild(obfuscator);\n                obfuscator.addEventListener('click', this.drawerToggleHandler_.bind(this));\n                this.obfuscator_ = obfuscator;\n                this.drawer_.addEventListener('keydown', this.keyboardEventHandler_.bind(this));\n                this.drawer_.setAttribute('aria-hidden', 'true');\n            } // Keep an eye on screen size, and add/remove auxiliary class for styling\n            // of small screens.\n\n\n            this.screenSizeMediaQuery_ = window.matchMedia(this.Constant_.MAX_WIDTH);\n            this.screenSizeMediaQuery_.addListener(this.screenSizeHandler_.bind(this));\n            this.screenSizeHandler_(); // Initialize tabs, if any.\n\n            if (this.header_ && this.tabBar_) {\n                this.element_.classList.add(this.CssClasses_.HAS_TABS);\n                var tabContainer = document.createElement('div');\n                tabContainer.classList.add(this.CssClasses_.TAB_CONTAINER);\n                this.header_.insertBefore(tabContainer, this.tabBar_);\n                this.header_.removeChild(this.tabBar_);\n                var leftButton = document.createElement('div');\n                leftButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n                leftButton.classList.add(this.CssClasses_.TAB_BAR_LEFT_BUTTON);\n                var leftButtonIcon = document.createElement('i');\n                leftButtonIcon.classList.add(this.CssClasses_.ICON);\n                leftButtonIcon.textContent = this.Constant_.CHEVRON_LEFT;\n                leftButton.appendChild(leftButtonIcon);\n                leftButton.addEventListener('click', function () {\n                    this.tabBar_.scrollLeft -= this.Constant_.TAB_SCROLL_PIXELS;\n                }.bind(this));\n                var rightButton = document.createElement('div');\n                rightButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n                rightButton.classList.add(this.CssClasses_.TAB_BAR_RIGHT_BUTTON);\n                var rightButtonIcon = document.createElement('i');\n                rightButtonIcon.classList.add(this.CssClasses_.ICON);\n                rightButtonIcon.textContent = this.Constant_.CHEVRON_RIGHT;\n                rightButton.appendChild(rightButtonIcon);\n                rightButton.addEventListener('click', function () {\n                    this.tabBar_.scrollLeft += this.Constant_.TAB_SCROLL_PIXELS;\n                }.bind(this));\n                tabContainer.appendChild(leftButton);\n                tabContainer.appendChild(this.tabBar_);\n                tabContainer.appendChild(rightButton); // Add and remove tab buttons depending on scroll position and total\n                // window size.\n\n                var tabUpdateHandler = function () {\n                    if (this.tabBar_.scrollLeft > 0) {\n                        leftButton.classList.add(this.CssClasses_.IS_ACTIVE);\n                    } else {\n                        leftButton.classList.remove(this.CssClasses_.IS_ACTIVE);\n                    }\n\n                    if (this.tabBar_.scrollLeft < this.tabBar_.scrollWidth - this.tabBar_.offsetWidth) {\n                        rightButton.classList.add(this.CssClasses_.IS_ACTIVE);\n                    } else {\n                        rightButton.classList.remove(this.CssClasses_.IS_ACTIVE);\n                    }\n                }.bind(this);\n\n                this.tabBar_.addEventListener('scroll', tabUpdateHandler);\n                tabUpdateHandler(); // Update tabs when the window resizes.\n\n                var windowResizeHandler = function () {\n                    // Use timeouts to make sure it doesn't happen too often.\n                    if (this.resizeTimeoutId_) {\n                        clearTimeout(this.resizeTimeoutId_);\n                    }\n\n                    this.resizeTimeoutId_ = setTimeout(function () {\n                        tabUpdateHandler();\n                        this.resizeTimeoutId_ = null;\n                    }.bind(this), this.Constant_.RESIZE_TIMEOUT);\n                }.bind(this);\n\n                window.addEventListener('resize', windowResizeHandler);\n\n                if (this.tabBar_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n                    this.tabBar_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n                } // Select element tabs, document panels\n\n\n                var tabs = this.tabBar_.querySelectorAll('.' + this.CssClasses_.TAB);\n                var panels = this.content_.querySelectorAll('.' + this.CssClasses_.PANEL); // Create new tabs for each tab element\n\n                for (var i = 0; i < tabs.length; i++) {\n                    new MaterialLayoutTab(tabs[i], tabs, panels, this);\n                }\n            }\n\n            this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n        }\n    }; /**\n          * Constructor for an individual tab.\n          *\n          * @constructor\n          * @param {HTMLElement} tab The HTML element for the tab.\n          * @param {!Array<HTMLElement>} tabs Array with HTML elements for all tabs.\n          * @param {!Array<HTMLElement>} panels Array with HTML elements for all panels.\n          * @param {MaterialLayout} layout The MaterialLayout object that owns the tab.\n          */\n\n    function MaterialLayoutTab(tab, tabs, panels, layout) {\n        /**\n         * Auxiliary method to programmatically select a tab in the UI.\n         */function selectTab() {\n            var href = tab.href.split('#')[1];\n            var panel = layout.content_.querySelector('#' + href);\n            layout.resetTabState_(tabs);\n            layout.resetPanelState_(panels);\n            tab.classList.add(layout.CssClasses_.IS_ACTIVE);\n            panel.classList.add(layout.CssClasses_.IS_ACTIVE);\n        }\n\n        if (layout.tabBar_.classList.contains(layout.CssClasses_.JS_RIPPLE_EFFECT)) {\n            var rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(layout.CssClasses_.RIPPLE_CONTAINER);\n            rippleContainer.classList.add(layout.CssClasses_.JS_RIPPLE_EFFECT);\n            var ripple = document.createElement('span');\n            ripple.classList.add(layout.CssClasses_.RIPPLE);\n            rippleContainer.appendChild(ripple);\n            tab.appendChild(rippleContainer);\n        }\n\n        if (!layout.tabBar_.classList.contains(layout.CssClasses_.TAB_MANUAL_SWITCH)) {\n            tab.addEventListener('click', function (e) {\n                if (tab.getAttribute('href').charAt(0) === '#') {\n                    e.preventDefault();\n                    selectTab();\n                }\n            });\n        }\n\n        tab.show = selectTab;\n    }\n\n    window['MaterialLayoutTab'] = MaterialLayoutTab; // The component registers itself. It can assume componentHandler is available\n    // in the global scope.\n\n    componentHandler.register({\n        constructor: MaterialLayout,\n        classAsString: 'MaterialLayout',\n        cssClass: 'mdl-js-layout'\n    }); /**\n         * @license\n         * Copyright 2015 Google Inc. All Rights Reserved.\n         *\n         * Licensed under the Apache License, Version 2.0 (the \"License\");\n         * you may not use this file except in compliance with the License.\n         * You may obtain a copy of the License at\n         *\n         *      http://www.apache.org/licenses/LICENSE-2.0\n         *\n         * Unless required by applicable law or agreed to in writing, software\n         * distributed under the License is distributed on an \"AS IS\" BASIS,\n         * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n         * See the License for the specific language governing permissions and\n         * limitations under the License.\n         */ /**\n               * Class constructor for Data Table Card MDL component.\n               * Implements MDL component design pattern defined at:\n               * https://github.com/jasonmayes/mdl-component-design-pattern\n               *\n               * @constructor\n               * @param {Element} element The element that will be upgraded.\n               */\n\n    var MaterialDataTable = function () {\n        function MaterialDataTable(element) {\n            this.element_ = element; // Initialize instance.\n\n            this.init();\n        }\n\n        return MaterialDataTable;\n    }();\n\n    window['MaterialDataTable'] = MaterialDataTable; /**\n                                                        * Store constants in one place so they can be updated easily.\n                                                        *\n                                                        * @enum {string | number}\n                                                        * @private\n                                                        */\n    MaterialDataTable.prototype.Constant_ = {}; /**\n                                                   * Store strings for class names defined by this component that are used in\n                                                   * JavaScript. This allows us to simply change it in one place should we\n                                                   * decide to modify at a later date.\n                                                   *\n                                                   * @enum {string}\n                                                   * @private\n                                                   */\n    MaterialDataTable.prototype.CssClasses_ = {\n        DATA_TABLE: 'mdl-data-table',\n        SELECTABLE: 'mdl-data-table--selectable',\n        SELECT_ELEMENT: 'mdl-data-table__select',\n        IS_SELECTED: 'is-selected',\n        IS_UPGRADED: 'is-upgraded'\n    }; /**\n          * Generates and returns a function that toggles the selection state of a\n          * single row (or multiple rows).\n          *\n          * @param {Element} checkbox Checkbox that toggles the selection state.\n          * @param {Element} row Row to toggle when checkbox changes.\n          * @param {(Array<Object>|NodeList)=} opt_rows Rows to toggle when checkbox changes.\n          * @private\n          */\n\n    MaterialDataTable.prototype.selectRow_ = function (checkbox, row, opt_rows) {\n        if (row) {\n            return function () {\n                if (checkbox.checked) {\n                    row.classList.add(this.CssClasses_.IS_SELECTED);\n                } else {\n                    row.classList.remove(this.CssClasses_.IS_SELECTED);\n                }\n            }.bind(this);\n        }\n\n        if (opt_rows) {\n            return function () {\n                var i;\n                var el;\n\n                if (checkbox.checked) {\n                    for (i = 0; i < opt_rows.length; i++) {\n                        el = opt_rows[i].querySelector('td').querySelector('.mdl-checkbox');\n                        el['MaterialCheckbox'].check();\n                        opt_rows[i].classList.add(this.CssClasses_.IS_SELECTED);\n                    }\n                } else {\n                    for (i = 0; i < opt_rows.length; i++) {\n                        el = opt_rows[i].querySelector('td').querySelector('.mdl-checkbox');\n                        el['MaterialCheckbox'].uncheck();\n                        opt_rows[i].classList.remove(this.CssClasses_.IS_SELECTED);\n                    }\n                }\n            }.bind(this);\n        }\n    }; /**\n          * Creates a checkbox for a single or or multiple rows and hooks up the\n          * event handling.\n          *\n          * @param {Element} row Row to toggle when checkbox changes.\n          * @param {(Array<Object>|NodeList)=} opt_rows Rows to toggle when checkbox changes.\n          * @private\n          */\n\n    MaterialDataTable.prototype.createCheckbox_ = function (row, opt_rows) {\n        var label = document.createElement('label');\n        var labelClasses = ['mdl-checkbox', 'mdl-js-checkbox', 'mdl-js-ripple-effect', this.CssClasses_.SELECT_ELEMENT];\n        label.className = labelClasses.join(' ');\n        var checkbox = document.createElement('input');\n        checkbox.type = 'checkbox';\n        checkbox.classList.add('mdl-checkbox__input');\n\n        if (row) {\n            checkbox.checked = row.classList.contains(this.CssClasses_.IS_SELECTED);\n            checkbox.addEventListener('change', this.selectRow_(checkbox, row));\n        } else if (opt_rows) {\n            checkbox.addEventListener('change', this.selectRow_(checkbox, null, opt_rows));\n        }\n\n        label.appendChild(checkbox);\n        componentHandler.upgradeElement(label, 'MaterialCheckbox');\n        return label;\n    }; /**\n          * Initialize element.\n          */\n\n    MaterialDataTable.prototype.init = function () {\n        if (this.element_) {\n            var firstHeader = this.element_.querySelector('th');\n            var bodyRows = Array.prototype.slice.call(this.element_.querySelectorAll('tbody tr'));\n            var footRows = Array.prototype.slice.call(this.element_.querySelectorAll('tfoot tr'));\n            var rows = bodyRows.concat(footRows);\n\n            if (this.element_.classList.contains(this.CssClasses_.SELECTABLE)) {\n                var th = document.createElement('th');\n                var headerCheckbox = this.createCheckbox_(null, rows);\n                th.appendChild(headerCheckbox);\n                firstHeader.parentElement.insertBefore(th, firstHeader);\n\n                for (var i = 0; i < rows.length; i++) {\n                    var firstCell = rows[i].querySelector('td');\n\n                    if (firstCell) {\n                        var td = document.createElement('td');\n\n                        if (rows[i].parentNode.nodeName.toUpperCase() === 'TBODY') {\n                            var rowCheckbox = this.createCheckbox_(rows[i]);\n                            td.appendChild(rowCheckbox);\n                        }\n\n                        rows[i].insertBefore(td, firstCell);\n                    }\n                }\n\n                this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n            }\n        }\n    }; // The component registers itself. It can assume componentHandler is available\n    // in the global scope.\n\n\n    componentHandler.register({\n        constructor: MaterialDataTable,\n        classAsString: 'MaterialDataTable',\n        cssClass: 'mdl-js-data-table'\n    }); /**\n         * @license\n         * Copyright 2015 Google Inc. All Rights Reserved.\n         *\n         * Licensed under the Apache License, Version 2.0 (the \"License\");\n         * you may not use this file except in compliance with the License.\n         * You may obtain a copy of the License at\n         *\n         *      http://www.apache.org/licenses/LICENSE-2.0\n         *\n         * Unless required by applicable law or agreed to in writing, software\n         * distributed under the License is distributed on an \"AS IS\" BASIS,\n         * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n         * See the License for the specific language governing permissions and\n         * limitations under the License.\n         */ /**\n               * Class constructor for Ripple MDL component.\n               * Implements MDL component design pattern defined at:\n               * https://github.com/jasonmayes/mdl-component-design-pattern\n               *\n               * @constructor\n               * @param {HTMLElement} element The element that will be upgraded.\n               */\n\n    var MaterialRipple = function () {\n        function MaterialRipple(element) {\n            this.element_ = element; // Initialize instance.\n\n            this.init();\n        }\n\n        return MaterialRipple;\n    }();\n\n    window['MaterialRipple'] = MaterialRipple; /**\n                                                  * Store constants in one place so they can be updated easily.\n                                                  *\n                                                  * @enum {string | number}\n                                                  * @private\n                                                  */\n    MaterialRipple.prototype.Constant_ = {\n        INITIAL_SCALE: 'scale(0.0001, 0.0001)',\n        INITIAL_SIZE: '1px',\n        INITIAL_OPACITY: '0.4',\n        FINAL_OPACITY: '0',\n        FINAL_SCALE: ''\n    }; /**\n          * Store strings for class names defined by this component that are used in\n          * JavaScript. This allows us to simply change it in one place should we\n          * decide to modify at a later date.\n          *\n          * @enum {string}\n          * @private\n          */\n    MaterialRipple.prototype.CssClasses_ = {\n        RIPPLE_CENTER: 'mdl-ripple--center',\n        RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n        RIPPLE: 'mdl-ripple',\n        IS_ANIMATING: 'is-animating',\n        IS_VISIBLE: 'is-visible'\n    }; /**\n          * Handle mouse / finger down on element.\n          *\n          * @param {Event} event The event that fired.\n          * @private\n          */\n\n    MaterialRipple.prototype.downHandler_ = function (event) {\n        if (!this.rippleElement_.style.width && !this.rippleElement_.style.height) {\n            var rect = this.element_.getBoundingClientRect();\n            this.boundHeight = rect.height;\n            this.boundWidth = rect.width;\n            this.rippleSize_ = Math.sqrt(rect.width * rect.width + rect.height * rect.height) * 2 + 2;\n            this.rippleElement_.style.width = this.rippleSize_ + 'px';\n            this.rippleElement_.style.height = this.rippleSize_ + 'px';\n        }\n\n        this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE);\n\n        if (event.type === 'mousedown' && this.ignoringMouseDown_) {\n            this.ignoringMouseDown_ = false;\n        } else {\n            if (event.type === 'touchstart') {\n                this.ignoringMouseDown_ = true;\n            }\n\n            var frameCount = this.getFrameCount();\n\n            if (frameCount > 0) {\n                return;\n            }\n\n            this.setFrameCount(1);\n            var bound = event.currentTarget.getBoundingClientRect();\n            var x;\n            var y; // Check if we are handling a keyboard click.\n\n            if (event.clientX === 0 && event.clientY === 0) {\n                x = Math.round(bound.width / 2);\n                y = Math.round(bound.height / 2);\n            } else {\n                var clientX = event.clientX !== undefined ? event.clientX : event.touches[0].clientX;\n                var clientY = event.clientY !== undefined ? event.clientY : event.touches[0].clientY;\n                x = Math.round(clientX - bound.left);\n                y = Math.round(clientY - bound.top);\n            }\n\n            this.setRippleXY(x, y);\n            this.setRippleStyles(true);\n            window.requestAnimationFrame(this.animFrameHandler.bind(this));\n        }\n    }; /**\n          * Handle mouse / finger up on element.\n          *\n          * @param {Event} event The event that fired.\n          * @private\n          */\n\n    MaterialRipple.prototype.upHandler_ = function (event) {\n        // Don't fire for the artificial \"mouseup\" generated by a double-click.\n        if (event && event.detail !== 2) {\n            // Allow a repaint to occur before removing this class, so the animation\n            // shows for tap events, which seem to trigger a mouseup too soon after\n            // mousedown.\n            window.setTimeout(function () {\n                this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE);\n            }.bind(this), 0);\n        }\n    }; /**\n          * Initialize element.\n          */\n\n    MaterialRipple.prototype.init = function () {\n        if (this.element_) {\n            var recentering = this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);\n\n            if (!this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)) {\n                this.rippleElement_ = this.element_.querySelector('.' + this.CssClasses_.RIPPLE);\n                this.frameCount_ = 0;\n                this.rippleSize_ = 0;\n                this.x_ = 0;\n                this.y_ = 0; // Touch start produces a compat mouse down event, which would cause a\n                // second ripples. To avoid that, we use this property to ignore the first\n                // mouse down after a touch start.\n\n                this.ignoringMouseDown_ = false;\n                this.boundDownHandler = this.downHandler_.bind(this);\n                this.element_.addEventListener('mousedown', this.boundDownHandler);\n                this.element_.addEventListener('touchstart', this.boundDownHandler);\n                this.boundUpHandler = this.upHandler_.bind(this);\n                this.element_.addEventListener('mouseup', this.boundUpHandler);\n                this.element_.addEventListener('mouseleave', this.boundUpHandler);\n                this.element_.addEventListener('touchend', this.boundUpHandler);\n                this.element_.addEventListener('blur', this.boundUpHandler); /**\n                                                                             * Getter for frameCount_.\n                                                                             * @return {number} the frame count.\n                                                                             */\n\n                this.getFrameCount = function () {\n                    return this.frameCount_;\n                }; /**\n                   * Setter for frameCount_.\n                   * @param {number} fC the frame count.\n                   */\n\n                this.setFrameCount = function (fC) {\n                    this.frameCount_ = fC;\n                }; /**\n                   * Getter for rippleElement_.\n                   * @return {Element} the ripple element.\n                   */\n\n                this.getRippleElement = function () {\n                    return this.rippleElement_;\n                }; /**\n                   * Sets the ripple X and Y coordinates.\n                   * @param  {number} newX the new X coordinate\n                   * @param  {number} newY the new Y coordinate\n                   */\n\n                this.setRippleXY = function (newX, newY) {\n                    this.x_ = newX;\n                    this.y_ = newY;\n                }; /**\n                   * Sets the ripple styles.\n                   * @param  {boolean} start whether or not this is the start frame.\n                   */\n\n                this.setRippleStyles = function (start) {\n                    if (this.rippleElement_ !== null) {\n                        var transformString;\n                        var scale;\n                        var size;\n                        var offset = 'translate(' + this.x_ + 'px, ' + this.y_ + 'px)';\n\n                        if (start) {\n                            scale = this.Constant_.INITIAL_SCALE;\n                            size = this.Constant_.INITIAL_SIZE;\n                        } else {\n                            scale = this.Constant_.FINAL_SCALE;\n                            size = this.rippleSize_ + 'px';\n\n                            if (recentering) {\n                                offset = 'translate(' + this.boundWidth / 2 + 'px, ' + this.boundHeight / 2 + 'px)';\n                            }\n                        }\n\n                        transformString = 'translate(-50%, -50%) ' + offset + scale;\n                        this.rippleElement_.style.webkitTransform = transformString;\n                        this.rippleElement_.style.msTransform = transformString;\n                        this.rippleElement_.style.transform = transformString;\n\n                        if (start) {\n                            this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING);\n                        } else {\n                            this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING);\n                        }\n                    }\n                }; /**\n                   * Handles an animation frame.\n                   */\n\n                this.animFrameHandler = function () {\n                    if (this.frameCount_-- > 0) {\n                        window.requestAnimationFrame(this.animFrameHandler.bind(this));\n                    } else {\n                        this.setRippleStyles(false);\n                    }\n                };\n            }\n        }\n    }; // The component registers itself. It can assume componentHandler is available\n    // in the global scope.\n\n\n    componentHandler.register({\n        constructor: MaterialRipple,\n        classAsString: 'MaterialRipple',\n        cssClass: 'mdl-js-ripple-effect',\n        widget: false\n    });\n})();","map":{"version":3,"sources":["packages/zodiase:mdl-assets/dist/material.js"],"names":["componentHandler","upgradeDom","optJsClass","optCssClass","upgradeElement","element","upgradeElements","elements","upgradeAllRegistered","registerUpgradedCallback","jsClass","callback","register","config","downgradeElements","nodes","registeredComponents_","createdComponents_","componentConfigProperty_","findRegisteredClass_","name","optReplace","i","length","className","getUpgradedListOfElement_","dataUpgraded","getAttribute","split","isElementUpgraded_","upgradedList","indexOf","createEvent_","eventType","bubbles","cancelable","window","CustomEvent","ev","document","createEvent","initEvent","upgradeDomInternal","cssClass","registeredClass","querySelectorAll","n","upgradeElementInternal","Element","Error","upgradingEv","dispatchEvent","defaultPrevented","classesToUpgrade","classList","forEach","component","contains","push","setAttribute","join","instance","classConstructor","j","m","callbacks","widget","upgradedEv","upgradeElementsInternal","Array","isArray","prototype","slice","call","HTMLElement","children","registerInternal","widgetMissing","newConfig","constructor","classAsString","item","hasOwnProperty","found","registerUpgradedCallbackInternal","regClass","upgradeAllRegisteredInternal","deconstructComponentInternal","componentIndex","splice","upgrades","element_","componentPlace","downgradeNodesInternal","downgradeNode","node","filter","NodeList","Node","ComponentConfigPublic","ComponentConfig","Component","addEventListener","createElement","documentElement","add","Date","now","getTime","vendors","requestAnimationFrame","vp","cancelAnimationFrame","test","navigator","userAgent","lastTime","nextTime","Math","max","setTimeout","clearTimeout","MaterialButton","init","Constant_","CssClasses_","RIPPLE_EFFECT","RIPPLE_CONTAINER","RIPPLE","blurHandler_","event","blur","disable","disabled","enable","rippleContainer","rippleElement_","appendChild","boundRippleBlurHandler","bind","boundButtonBlurHandler","MaterialCheckbox","TINY_TIMEOUT","INPUT","BOX_OUTLINE","FOCUS_HELPER","TICK_OUTLINE","RIPPLE_IGNORE_EVENTS","RIPPLE_CENTER","IS_FOCUSED","IS_DISABLED","IS_CHECKED","IS_UPGRADED","onChange_","updateClasses_","onFocus_","onBlur_","remove","onMouseUp_","blur_","checkDisabled","checkToggleState","inputElement_","checked","check","uncheck","querySelector","boxOutline","tickContainer","tickOutline","rippleContainerElement_","boundRippleMouseUp","ripple","boundInputOnChange","boundInputOnFocus","boundInputOnBlur","boundElementMouseUp","MaterialIconToggle","JS_RIPPLE_EFFECT","boundElementOnMouseUp","MaterialMenu","TRANSITION_DURATION_SECONDS","TRANSITION_DURATION_FRACTION","CLOSE_TIMEOUT","Keycodes_","ENTER","ESCAPE","SPACE","UP_ARROW","DOWN_ARROW","CONTAINER","OUTLINE","ITEM","ITEM_RIPPLE_CONTAINER","IS_VISIBLE","IS_ANIMATING","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","UNALIGNED","container","parentElement","insertBefore","removeChild","container_","outline","outline_","forElId","forEl","getElementById","forElement_","handleForClick_","handleForKeyboardEvent_","items","boundItemKeydown_","handleItemKeyboardEvent_","boundItemClick_","handleItemClick_","tabIndex","evt","rect","getBoundingClientRect","forRect","style","right","top","offsetTop","offsetHeight","left","offsetLeft","bottom","toggle","keyCode","preventDefault","focus","currentIndex","target","e","MouseEvent","click","hide","hasAttribute","stopPropagation","closing_","applyClip_","height","width","clip","removeAnimationEndListener_","addAnimationEndListener_","show","transitionDuration","itemDelay","transitionDelay","parentNode","removeEventListener","removeProperty","MaterialProgress","INDETERMINATE_CLASS","setProgress","p","progressbar_","setBuffer","bufferbar_","auxbar_","el","MaterialRadio","JS_RADIO","RADIO_BTN","RADIO_OUTER_CIRCLE","RADIO_INNER_CIRCLE","radios","getElementsByClassName","button","btnElement_","onMouseup_","boundChangeHandler_","boundFocusHandler_","boundBlurHandler_","boundMouseUpHandler_","outerCircle","innerCircle","MaterialSlider","isIE_","msPointerEnabled","IE_CONTAINER","SLIDER_CONTAINER","BACKGROUND_FLEX","BACKGROUND_LOWER","BACKGROUND_UPPER","IS_LOWEST_VALUE","onInput_","updateValueStyles_","onContainerMouseDown_","newEvent","buttons","clientX","clientY","y","fraction","value","min","backgroundLower_","flex","webkitFlex","backgroundUpper_","change","containerIE","backgroundFlex","boundInputHandler","boundChangeHandler","boundMouseUpHandler","boundContainerMouseDownHandler","MaterialSnackbar","textElement_","cssClasses_","MESSAGE","actionElement_","ACTION","active","actionHandler_","undefined","message_","actionText_","queuedNotifications_","setActionHidden_","ANIMATION_LENGTH","SNACKBAR","ACTIVE","displaySnackbar_","textContent","cleanup_","timeout_","showSnackbar","data","checkQueue_","shift","Boolean","removeAttribute","MaterialSpinner","MDL_SPINNER_LAYER_COUNT","MDL_SPINNER_LAYER","MDL_SPINNER_CIRCLE_CLIPPER","MDL_SPINNER_CIRCLE","MDL_SPINNER_GAP_PATCH","MDL_SPINNER_LEFT","MDL_SPINNER_RIGHT","createLayer","index","layer","leftClipper","gapPatch","rightClipper","circleOwners","circle","stop","start","MaterialSwitch","TRACK","THUMB","on","off","track","thumb","focusHelper","boundFocusHandler","boundBlurHandler","MaterialTabs","TAB_CLASS","PANEL_CLASS","ACTIVE_CLASS","UPGRADED_CLASS","MDL_JS_RIPPLE_EFFECT","MDL_RIPPLE_CONTAINER","MDL_RIPPLE","MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS","initTabs_","tabs_","panels_","MaterialTab","resetTabState_","k","resetPanelState_","tab","ctx","charAt","href","panel","MaterialTextfield","maxRows","NO_MAX_ROWS","MAX_ROWS_ATTRIBUTE","LABEL","IS_DIRTY","IS_INVALID","HAS_PLACEHOLDER","onKeyDown_","currentRowCount","onReset_","checkValidity","checkDirty","checkFocus","input_","validity","valid","label_","parseInt","isNaN","boundUpdateClassesHandler","boundResetHandler","boundKeyDownHandler","invalid","MaterialTooltip","IS_ACTIVE","BOTTOM","LEFT","RIGHT","TOP","handleMouseEnter_","props","marginLeft","offsetWidth","marginTop","hideTooltip_","boundMouseEnterHandler","boundMouseLeaveAndScrollHandler","MaterialLayout","MAX_WIDTH","TAB_SCROLL_PIXELS","RESIZE_TIMEOUT","MENU_ICON","CHEVRON_LEFT","CHEVRON_RIGHT","Mode_","STANDARD","SEAMED","WATERFALL","SCROLL","HEADER","DRAWER","CONTENT","DRAWER_BTN","ICON","HEADER_SEAMED","HEADER_WATERFALL","HEADER_SCROLL","FIXED_HEADER","OBFUSCATOR","TAB_BAR","TAB_CONTAINER","TAB","TAB_BAR_BUTTON","TAB_BAR_LEFT_BUTTON","TAB_BAR_RIGHT_BUTTON","TAB_MANUAL_SWITCH","PANEL","HAS_DRAWER","HAS_TABS","HAS_SCROLLING_HEADER","CASTING_SHADOW","IS_COMPACT","IS_SMALL_SCREEN","IS_DRAWER_OPEN","ON_LARGE_SCREEN","ON_SMALL_SCREEN","contentScrollHandler_","header_","headerVisible","content_","scrollTop","keyboardEventHandler_","drawer_","toggleDrawer","screenSizeHandler_","screenSizeMediaQuery_","matches","obfuscator_","drawerToggleHandler_","type","headerTransitionEndHandler_","headerClickHandler_","tabBar","panels","drawerButton","focusedElement","directChildren","childNodes","numChildren","c","child","persisted","overflowY","tabBar_","mode","drawerButtonIcon","innerHTML","firstChild","obfuscator","matchMedia","addListener","tabContainer","leftButton","leftButtonIcon","scrollLeft","rightButton","rightButtonIcon","tabUpdateHandler","scrollWidth","windowResizeHandler","resizeTimeoutId_","tabs","MaterialLayoutTab","layout","selectTab","MaterialDataTable","DATA_TABLE","SELECTABLE","SELECT_ELEMENT","IS_SELECTED","selectRow_","checkbox","row","opt_rows","createCheckbox_","label","labelClasses","firstHeader","bodyRows","footRows","rows","concat","th","headerCheckbox","firstCell","td","nodeName","toUpperCase","rowCheckbox","MaterialRipple","INITIAL_SCALE","INITIAL_SIZE","INITIAL_OPACITY","FINAL_OPACITY","FINAL_SCALE","RIPPLE_EFFECT_IGNORE_EVENTS","downHandler_","boundHeight","boundWidth","rippleSize_","sqrt","ignoringMouseDown_","frameCount","getFrameCount","setFrameCount","bound","currentTarget","x","round","touches","setRippleXY","setRippleStyles","animFrameHandler","upHandler_","detail","recentering","frameCount_","x_","y_","boundDownHandler","boundUpHandler","fC","getRippleElement","newX","newY","transformString","scale","size","offset","webkitTransform","msTransform","transform"],"mappings":";;;;;;AAAA;;AAAE,aAAW;AACb,iBADa,CAGb;;;;;;;;;;;;;;;qBAHa,CAoBb;;;;;;yBApBa,CA2Bb,+BA3Ba,CA6Bb;AACA;;AACA,QAAIA,mBAAmB;AACrB;;;;;;;;WASAC,YAAY,UAASC,UAAT,EAAqBC,WAArB,EAAkC,CAAE,CAV3B;AAWrB;;;;;;WAOAC,gBAAgB,UAASC,OAAT,EAAkBH,UAAlB,EAA8B,CAAE,CAlB3B;AAmBrB;;;;;WAMAI,iBAAiB,UAASC,QAAT,EAAmB,CAAE,CAzBjB;AA0BrB;;;WAIAC,sBAAsB,YAAW,CAAE,CA9Bd;AA+BrB;;;;;;;;;WAUAC,0BAA0B,UAASC,OAAT,EAAkBC,QAAlB,EAA4B,CAAE,CAzCnC;AA0CrB;;;;WAKAC,UAAU,UAASC,MAAT,EAAiB,CAAE,CA/CR;AAgDrB;;;;WAKAC,mBAAmB,UAASC,KAAT,EAAgB,CAAE;AArDhB,KAAvB;;AAwDAf,uBAAoB,YAAW;AAC7B,qBAD6B,CAG7B;;AACA,YAAIgB,wBAAwB,EAA5B,CAJ6B,CAM7B;AACA,YAAIC,qBAAqB,EAAzB;AAEA,YAAIC,2BAA2B,6BAA/B,CAT6B,CAW7B;;;;;;;;;;AASA,iBAASC,oBAAT,CAA8BC,IAA9B,EAAoCC,UAApC,EAAgD;AAC9C,iBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIN,sBAAsBO,MAA1C,EAAkDD,GAAlD,EAAuD;AACrD,oBAAIN,sBAAsBM,CAAtB,EAAyBE,SAAzB,KAAuCJ,IAA3C,EAAiD;AAC/C,wBAAI,OAAOC,UAAP,KAAsB,WAA1B,EAAuC;AACrCL,8CAAsBM,CAAtB,IAA2BD,UAA3B;AACD;;AACD,2BAAOL,sBAAsBM,CAAtB,CAAP;AACD;AACF;;AACD,mBAAO,KAAP;AACD,SA9B4B,CAgC7B;;;;;;;;AAOA,iBAASG,yBAAT,CAAmCpB,OAAnC,EAA4C;AAC1C,gBAAIqB,eAAerB,QAAQsB,YAAR,CAAqB,eAArB,CAAnB,CAD0C,CAE1C;;AACA,mBAAOD,iBAAiB,IAAjB,GAAwB,CAAC,EAAD,CAAxB,GAA+BA,aAAaE,KAAb,CAAmB,GAAnB,CAAtC;AACD,SA3C4B,CA6C7B;;;;;;;;;;AASA,iBAASC,kBAAT,CAA4BxB,OAA5B,EAAqCK,OAArC,EAA8C;AAC5C,gBAAIoB,eAAeL,0BAA0BpB,OAA1B,CAAnB;AACA,mBAAOyB,aAAaC,OAAb,CAAqBrB,OAArB,MAAkC,CAAC,CAA1C;AACD,SAzD4B,CA2D7B;;;;;;;;;AAQA,iBAASsB,YAAT,CAAsBC,SAAtB,EAAiCC,OAAjC,EAA0CC,UAA1C,EAAsD;AACpD,gBAAI,iBAAiBC,MAAjB,IAA2B,OAAOA,OAAOC,WAAd,KAA8B,UAA7D,EAAyE;AACvE,uBAAO,IAAIA,WAAJ,CAAgBJ,SAAhB,EAA2B;AAChCC,6BAASA,OADuB;AAEhCC,gCAAYA;AAFoB,iBAA3B,CAAP;AAID,aALD,MAKO;AACL,oBAAIG,KAAKC,SAASC,WAAT,CAAqB,QAArB,CAAT;AACAF,mBAAGG,SAAH,CAAaR,SAAb,EAAwBC,OAAxB,EAAiCC,UAAjC;AACA,uBAAOG,EAAP;AACD;AACF,SA9E4B,CAgF7B;;;;;;;;;;AASA,iBAASI,kBAAT,CAA4BxC,UAA5B,EAAwCC,WAAxC,EAAqD;AACnD,gBAAI,OAAOD,UAAP,KAAsB,WAAtB,IACA,OAAOC,WAAP,KAAuB,WAD3B,EACwC;AACtC,qBAAK,IAAImB,IAAI,CAAb,EAAgBA,IAAIN,sBAAsBO,MAA1C,EAAkDD,GAAlD,EAAuD;AACrDoB,uCAAmB1B,sBAAsBM,CAAtB,EAAyBE,SAA5C,EACIR,sBAAsBM,CAAtB,EAAyBqB,QAD7B;AAED;AACF,aAND,MAMO;AACL,oBAAIjC,UAAU,qBAAuBR,UAArC;;AACA,oBAAI,OAAOC,WAAP,KAAuB,WAA3B,EAAwC;AACtC,wBAAIyC,kBAAkBzB,qBAAqBT,OAArB,CAAtB;;AACA,wBAAIkC,eAAJ,EAAqB;AACnBzC,sCAAcyC,gBAAgBD,QAA9B;AACD;AACF;;AAED,oBAAIpC,WAAWgC,SAASM,gBAAT,CAA0B,MAAM1C,WAAhC,CAAf;;AACA,qBAAK,IAAI2C,IAAI,CAAb,EAAgBA,IAAIvC,SAASgB,MAA7B,EAAqCuB,GAArC,EAA0C;AACxCC,2CAAuBxC,SAASuC,CAAT,CAAvB,EAAoCpC,OAApC;AACD;AACF;AACF,SA9G4B,CAgH7B;;;;;;;;AAOA,iBAASqC,sBAAT,CAAgC1C,OAAhC,EAAyCH,UAAzC,EAAqD;AACnD;AACA,gBAAI,EAAE,QAAOG,OAAP,uDAAOA,OAAP,OAAmB,QAAnB,IAA+BA,mBAAmB2C,OAApD,CAAJ,EAAkE;AAChE,sBAAM,IAAIC,KAAJ,CAAU,mDAAV,CAAN;AACD,aAJkD,CAKnD;;;AACA,gBAAIC,cAAclB,aAAa,wBAAb,EAAuC,IAAvC,EAA6C,IAA7C,CAAlB;AACA3B,oBAAQ8C,aAAR,CAAsBD,WAAtB;;AACA,gBAAIA,YAAYE,gBAAhB,EAAkC;AAChC;AACD;;AAED,gBAAItB,eAAeL,0BAA0BpB,OAA1B,CAAnB;AACA,gBAAIgD,mBAAmB,EAAvB,CAbmD,CAcnD;AACA;;AACA,gBAAI,CAACnD,UAAL,EAAiB;AACf,oBAAIoD,YAAYjD,QAAQiD,SAAxB;AACAtC,sCAAsBuC,OAAtB,CAA8B,UAASC,SAAT,EAAoB;AAChD;AACA,wBAAIF,UAAUG,QAAV,CAAmBD,UAAUb,QAA7B,KACAU,iBAAiBtB,OAAjB,CAAyByB,SAAzB,MAAwC,CAAC,CADzC,IAEA,CAAC3B,mBAAmBxB,OAAnB,EAA4BmD,UAAUhC,SAAtC,CAFL,EAEuD;AACrD6B,yCAAiBK,IAAjB,CAAsBF,SAAtB;AACD;AACF,iBAPD;AAQD,aAVD,MAUO,IAAI,CAAC3B,mBAAmBxB,OAAnB,EAA4BH,UAA5B,CAAL,EAA8C;AACnDmD,iCAAiBK,IAAjB,CAAsBvC,qBAAqBjB,UAArB,CAAtB;AACD,aA5BkD,CA8BnD;;;AACA,iBAAK,IAAIoB,IAAI,CAAR,EAAWwB,IAAIO,iBAAiB9B,MAAhC,EAAwCqB,eAA7C,EAA8DtB,IAAIwB,CAAlE,EAAqExB,GAArE,EAA0E;AACxEsB,kCAAkBS,iBAAiB/B,CAAjB,CAAlB;;AACA,oBAAIsB,eAAJ,EAAqB;AACnB;AACAd,iCAAa4B,IAAb,CAAkBd,gBAAgBpB,SAAlC;AACAnB,4BAAQsD,YAAR,CAAqB,eAArB,EAAsC7B,aAAa8B,IAAb,CAAkB,GAAlB,CAAtC;AACA,wBAAIC,WAAW,IAAIjB,gBAAgBkB,gBAApB,CAAqCzD,OAArC,CAAf;AACAwD,6BAAS3C,wBAAT,IAAqC0B,eAArC;AACA3B,uCAAmByC,IAAnB,CAAwBG,QAAxB,EANmB,CAOnB;;AACA,yBAAK,IAAIE,IAAI,CAAR,EAAWC,IAAIpB,gBAAgBqB,SAAhB,CAA0B1C,MAA9C,EAAsDwC,IAAIC,CAA1D,EAA6DD,GAA7D,EAAkE;AAChEnB,wCAAgBqB,SAAhB,CAA0BF,CAA1B,EAA6B1D,OAA7B;AACD;;AAED,wBAAIuC,gBAAgBsB,MAApB,EAA4B;AAC1B;AACA7D,gCAAQuC,gBAAgBpB,SAAxB,IAAqCqC,QAArC;AACD;AACF,iBAhBD,MAgBO;AACL,0BAAM,IAAIZ,KAAJ,CACJ,4DADI,CAAN;AAED;;AAED,oBAAIkB,aAAanC,aAAa,uBAAb,EAAsC,IAAtC,EAA4C,KAA5C,CAAjB;AACA3B,wBAAQ8C,aAAR,CAAsBgB,UAAtB;AACD;AACF,SAhL4B,CAkL7B;;;;;;;AAMA,iBAASC,uBAAT,CAAiC7D,QAAjC,EAA2C;AACzC,gBAAI,CAAC8D,MAAMC,OAAN,CAAc/D,QAAd,CAAL,EAA8B;AAC5B,oBAAIA,oBAAoByC,OAAxB,EAAiC;AAC/BzC,+BAAW,CAACA,QAAD,CAAX;AACD,iBAFD,MAEO;AACLA,+BAAW8D,MAAME,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BlE,QAA3B,CAAX;AACD;AACF;;AACD,iBAAK,IAAIe,IAAI,CAAR,EAAWwB,IAAIvC,SAASgB,MAAxB,EAAgClB,OAArC,EAA8CiB,IAAIwB,CAAlD,EAAqDxB,GAArD,EAA0D;AACxDjB,0BAAUE,SAASe,CAAT,CAAV;;AACA,oBAAIjB,mBAAmBqE,WAAvB,EAAoC;AAClC3B,2CAAuB1C,OAAvB;;AACA,wBAAIA,QAAQsE,QAAR,CAAiBpD,MAAjB,GAA0B,CAA9B,EAAiC;AAC/B6C,gDAAwB/D,QAAQsE,QAAhC;AACD;AACF;AACF;AACF,SAzM4B,CA2M7B;;;;;;AAKA,iBAASC,gBAAT,CAA0B/D,MAA1B,EAAkC;AAChC;AACA;AACA;AACA;AACA,gBAAIgE,gBAAiB,OAAOhE,OAAOqD,MAAd,KAAyB,WAAzB,IACjB,OAAOrD,OAAO,QAAP,CAAP,KAA4B,WADhC;AAEA,gBAAIqD,SAAS,IAAb;;AAEA,gBAAI,CAACW,aAAL,EAAoB;AAClBX,yBAASrD,OAAOqD,MAAP,IAAiBrD,OAAO,QAAP,CAA1B;AACD;;AAED,gBAAIiE,YAAY,+CAAiD;AAC/DhB,kCAAkBjD,OAAOkE,WAAP,IAAsBlE,OAAO,aAAP,CADuB;AAE/DW,2BAAWX,OAAOmE,aAAP,IAAwBnE,OAAO,eAAP,CAF4B;AAG/D8B,0BAAU9B,OAAO8B,QAAP,IAAmB9B,OAAO,UAAP,CAHkC;AAI/DqD,wBAAQA,MAJuD;AAK/DD,2BAAW;AALoD,aAAjE;AAQAjD,kCAAsBuC,OAAtB,CAA8B,UAAS0B,IAAT,EAAe;AAC3C,oBAAIA,KAAKtC,QAAL,KAAkBmC,UAAUnC,QAAhC,EAA0C;AACxC,0BAAM,IAAIM,KAAJ,CAAU,wDAAwDgC,KAAKtC,QAAvE,CAAN;AACD;;AACD,oBAAIsC,KAAKzD,SAAL,KAAmBsD,UAAUtD,SAAjC,EAA4C;AAC1C,0BAAM,IAAIyB,KAAJ,CAAU,oDAAV,CAAN;AACD;AACF,aAPD;;AASA,gBAAIpC,OAAOkE,WAAP,CAAmBR,SAAnB,CACCW,cADD,CACgBhE,wBADhB,CAAJ,EAC+C;AAC7C,sBAAM,IAAI+B,KAAJ,CACF,yCAAyC/B,wBAAzC,GACA,yBAFE,CAAN;AAGD;;AAED,gBAAIiE,QAAQhE,qBAAqBN,OAAOmE,aAA5B,EAA2CF,SAA3C,CAAZ;;AAEA,gBAAI,CAACK,KAAL,EAAY;AACVnE,sCAAsB0C,IAAtB,CAA2BoB,SAA3B;AACD;AACF,SA1P4B,CA4P7B;;;;;;;;;;;AAUA,iBAASM,gCAAT,CAA0C1E,OAA1C,EAAmDC,QAAnD,EAA6D;AAC3D,gBAAI0E,WAAWlE,qBAAqBT,OAArB,CAAf;;AACA,gBAAI2E,QAAJ,EAAc;AACZA,yBAASpB,SAAT,CAAmBP,IAAnB,CAAwB/C,QAAxB;AACD;AACF,SA3Q4B,CA6Q7B;;;;;AAIA,iBAAS2E,4BAAT,GAAwC;AACtC,iBAAK,IAAIxC,IAAI,CAAb,EAAgBA,IAAI9B,sBAAsBO,MAA1C,EAAkDuB,GAAlD,EAAuD;AACrDJ,mCAAmB1B,sBAAsB8B,CAAtB,EAAyBtB,SAA5C;AACD;AACF,SArR4B,CAuR7B;;;;;;;;AAOA,iBAAS+D,4BAAT,CAAsC/B,SAAtC,EAAiD;AAC/C,gBAAIA,SAAJ,EAAe;AACb,oBAAIgC,iBAAiBvE,mBAAmBc,OAAnB,CAA2ByB,SAA3B,CAArB;AACAvC,mCAAmBwE,MAAnB,CAA0BD,cAA1B,EAA0C,CAA1C;AAEA,oBAAIE,WAAWlC,UAAUmC,QAAV,CAAmBhE,YAAnB,CAAgC,eAAhC,EAAiDC,KAAjD,CAAuD,GAAvD,CAAf;AACA,oBAAIgE,iBAAiBF,SAAS3D,OAAT,CAAiByB,UAAUtC,wBAAV,EAAoC8D,aAArD,CAArB;AACAU,yBAASD,MAAT,CAAgBG,cAAhB,EAAgC,CAAhC;AACApC,0BAAUmC,QAAV,CAAmBhC,YAAnB,CAAgC,eAAhC,EAAiD+B,SAAS9B,IAAT,CAAc,GAAd,CAAjD;AAEA,oBAAItB,KAAKN,aAAa,yBAAb,EAAwC,IAAxC,EAA8C,KAA9C,CAAT;AACAwB,0BAAUmC,QAAV,CAAmBxC,aAAnB,CAAiCb,EAAjC;AACD;AACF,SA3S4B,CA6S7B;;;;;;AAKA,iBAASuD,sBAAT,CAAgC9E,KAAhC,EAAuC;AACrC;;;eAIA,IAAI+E,gBAAgB,UAASC,IAAT,EAAe;AACjC9E,mCAAmB+E,MAAnB,CAA0B,UAASf,IAAT,EAAe;AACvC,2BAAOA,KAAKU,QAAL,KAAkBI,IAAzB;AACD,iBAFD,EAEGxC,OAFH,CAEWgC,4BAFX;AAGD,aAJD;;AAKA,gBAAIxE,iBAAiBsD,KAAjB,IAA0BtD,iBAAiBkF,QAA/C,EAAyD;AACvD,qBAAK,IAAInD,IAAI,CAAb,EAAgBA,IAAI/B,MAAMQ,MAA1B,EAAkCuB,GAAlC,EAAuC;AACrCgD,kCAAc/E,MAAM+B,CAAN,CAAd;AACD;AACF,aAJD,MAIO,IAAI/B,iBAAiBmF,IAArB,EAA2B;AAChCJ,8BAAc/E,KAAd;AACD,aAFM,MAEA;AACL,sBAAM,IAAIkC,KAAJ,CAAU,mDAAV,CAAN;AACD;AACF,SArU4B,CAuU7B;AACA;;;AACA,eAAO;AACLhD,wBAAYyC,kBADP;AAELtC,4BAAgB2C,sBAFX;AAGLzC,6BAAiB8D,uBAHZ;AAIL5D,kCAAsB8E,4BAJjB;AAKL7E,sCAA0B2E,gCALrB;AAMLxE,sBAAUgE,gBANL;AAOL9D,+BAAmB+E;AAPd,SAAP;AASD,KAlVkB,EAAnB,CAvFa,CA2ab;;;;;;;;;;;;AAWA7F,qBAAiBmG,qBAAjB,CAtba,CAsb4B;AAEzC;;;;;;;;;;;;AAYAnG,qBAAiBoG,eAAjB,CApca,CAocsB;AAEnC;;;;;;;;;;;;AAYApG,qBAAiBqG,SAAjB,CAlda,CAkdgB;AAE7B;AACA;;AACArG,qBAAiB,YAAjB,IAAiCA,iBAAiBC,UAAlD;AACAD,qBAAiB,gBAAjB,IAAqCA,iBAAiBI,cAAtD;AACAJ,qBAAiB,iBAAjB,IAAsCA,iBAAiBM,eAAvD;AACAN,qBAAiB,sBAAjB,IACIA,iBAAiBQ,oBADrB;AAEAR,qBAAiB,0BAAjB,IACIA,iBAAiBS,wBADrB;AAEAT,qBAAiB,UAAjB,IAA+BA,iBAAiBY,QAAhD;AACAZ,qBAAiB,mBAAjB,IAAwCA,iBAAiBc,iBAAzD;AACAsB,WAAOpC,gBAAP,GAA0BA,gBAA1B;AACAoC,WAAO,kBAAP,IAA6BpC,gBAA7B;AAEAoC,WAAOkE,gBAAP,CAAwB,MAAxB,EAAgC,YAAW;AACzC,qBADyC,CAGzC;;;;;;AAKA,YAAI,eAAe/D,SAASgE,aAAT,CAAuB,KAAvB,CAAf,IACA,mBAAmBhE,QADnB,IAEA,sBAAsBH,MAFtB,IAEgCiC,MAAME,SAAN,CAAgBhB,OAFpD,EAE6D;AAC3DhB,qBAASiE,eAAT,CAAyBlD,SAAzB,CAAmCmD,GAAnC,CAAuC,QAAvC;AACAzG,6BAAiBQ,oBAAjB;AACD,SALD,MAKO;AACL;;eAGAR,iBAAiBI,cAAjB,GAAkC,YAAW,CAAE,CAA/C,CAJK,CAKL;;;;AAGAJ,6BAAiBY,QAAjB,GAA4B,YAAW,CAAE,CAAzC;AACD;AACF,KAvBD,EAlea,CA2fb;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAI,CAAC8F,KAAKC,GAAV,EAAe;AACX;;;WAIAD,KAAKC,GAAL,GAAW,YAAY;AACnB,mBAAO,IAAID,IAAJ,GAAWE,OAAX,EAAP;AACH,SAFD;;AAGAF,aAAK,KAAL,IAAcA,KAAKC,GAAnB;AACH;;AACD,QAAIE,UAAU,CACV,QADU,EAEV,KAFU,CAAd;;AAIA,SAAK,IAAIvF,IAAI,CAAb,EAAgBA,IAAIuF,QAAQtF,MAAZ,IAAsB,CAACa,OAAO0E,qBAA9C,EAAqE,EAAExF,CAAvE,EAA0E;AACtE,YAAIyF,KAAKF,QAAQvF,CAAR,CAAT;AACAc,eAAO0E,qBAAP,GAA+B1E,OAAO2E,KAAK,uBAAZ,CAA/B;AACA3E,eAAO4E,oBAAP,GAA8B5E,OAAO2E,KAAK,sBAAZ,KAAuC3E,OAAO2E,KAAK,6BAAZ,CAArE;AACA3E,eAAO,uBAAP,IAAkCA,OAAO0E,qBAAzC;AACA1E,eAAO,sBAAP,IAAiCA,OAAO4E,oBAAxC;AACH;;AACD,QAAI,uBAAuBC,IAAvB,CAA4B7E,OAAO8E,SAAP,CAAiBC,SAA7C,KAA2D,CAAC/E,OAAO0E,qBAAnE,IAA4F,CAAC1E,OAAO4E,oBAAxG,EAA8H;AAC1H,YAAII,WAAW,CAAf,CAD0H,CAE1H;;;;;AAIAhF,eAAO0E,qBAAP,GAA+B,UAAUnG,QAAV,EAAoB;AAC/C,gBAAIgG,MAAMD,KAAKC,GAAL,EAAV;AACA,gBAAIU,WAAWC,KAAKC,GAAL,CAASH,WAAW,EAApB,EAAwBT,GAAxB,CAAf;AACA,mBAAOa,WAAW,YAAY;AAC1B7G,yBAASyG,WAAWC,QAApB;AACH,aAFM,EAEJA,WAAWV,GAFP,CAAP;AAGH,SAND;;AAOAvE,eAAO4E,oBAAP,GAA8BS,YAA9B;AACArF,eAAO,uBAAP,IAAkCA,OAAO0E,qBAAzC;AACA1E,eAAO,sBAAP,IAAiCA,OAAO4E,oBAAxC;AACH,KAviBY,CAwiBb;;;;;;;;;;;;;;;SAxiBa,CAwjBb;;;;;;;;AAOA,QAAIU;AAAiB,iBAASA,cAAT,CAAwBrH,OAAxB,EAAiC;AAClD,iBAAKsF,QAAL,GAAgBtF,OAAhB,CADkD,CAElD;;AACA,iBAAKsH,IAAL;AACH;;AAJG,eAA0BD,cAA1B;AAAA,OAAJ;;AAKAtF,WAAO,gBAAP,IAA2BsF,cAA3B,CApkBa,CAqkBb;;;;;;AAMAA,mBAAenD,SAAf,CAAyBqD,SAAzB,GAAqC,EAArC,CA3kBa,CA4kBb;;;;;;;;AAQAF,mBAAenD,SAAf,CAAyBsD,WAAzB,GAAuC;AACnCC,uBAAe,sBADoB;AAEnCC,0BAAkB,8BAFiB;AAGnCC,gBAAQ;AAH2B,KAAvC,CAplBa,CAylBb;;;;;;;AAMAN,mBAAenD,SAAf,CAAyB0D,YAAzB,GAAwC,UAAUC,KAAV,EAAiB;AACrD,YAAIA,KAAJ,EAAW;AACP,iBAAKvC,QAAL,CAAcwC,IAAd;AACH;AACJ,KAJD,CA/lBa,CAomBb;AACA;;;;;;AAKAT,mBAAenD,SAAf,CAAyB6D,OAAzB,GAAmC,YAAY;AAC3C,aAAKzC,QAAL,CAAc0C,QAAd,GAAyB,IAAzB;AACH,KAFD;;AAGAX,mBAAenD,SAAf,CAAyB,SAAzB,IAAsCmD,eAAenD,SAAf,CAAyB6D,OAA/D,CA7mBa,CA8mBb;;;;;;AAKAV,mBAAenD,SAAf,CAAyB+D,MAAzB,GAAkC,YAAY;AAC1C,aAAK3C,QAAL,CAAc0C,QAAd,GAAyB,KAAzB;AACH,KAFD;;AAGAX,mBAAenD,SAAf,CAAyB,QAAzB,IAAqCmD,eAAenD,SAAf,CAAyB+D,MAA9D,CAtnBa,CAunBb;;;;AAGAZ,mBAAenD,SAAf,CAAyBoD,IAAzB,GAAgC,YAAY;AACxC,YAAI,KAAKhC,QAAT,EAAmB;AACf,gBAAI,KAAKA,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiBC,aAAlD,CAAJ,EAAsE;AAClE,oBAAIS,kBAAkBhG,SAASgE,aAAT,CAAuB,MAAvB,CAAtB;AACAgC,gCAAgBjF,SAAhB,CAA0BmD,GAA1B,CAA8B,KAAKoB,WAAL,CAAiBE,gBAA/C;AACA,qBAAKS,cAAL,GAAsBjG,SAASgE,aAAT,CAAuB,MAAvB,CAAtB;AACA,qBAAKiC,cAAL,CAAoBlF,SAApB,CAA8BmD,GAA9B,CAAkC,KAAKoB,WAAL,CAAiBG,MAAnD;AACAO,gCAAgBE,WAAhB,CAA4B,KAAKD,cAAjC;AACA,qBAAKE,sBAAL,GAA8B,KAAKT,YAAL,CAAkBU,IAAlB,CAAuB,IAAvB,CAA9B;AACA,qBAAKH,cAAL,CAAoBlC,gBAApB,CAAqC,SAArC,EAAgD,KAAKoC,sBAArD;AACA,qBAAK/C,QAAL,CAAc8C,WAAd,CAA0BF,eAA1B;AACH;;AACD,iBAAKK,sBAAL,GAA8B,KAAKX,YAAL,CAAkBU,IAAlB,CAAuB,IAAvB,CAA9B;AACA,iBAAKhD,QAAL,CAAcW,gBAAd,CAA+B,SAA/B,EAA0C,KAAKsC,sBAA/C;AACA,iBAAKjD,QAAL,CAAcW,gBAAd,CAA+B,YAA/B,EAA6C,KAAKsC,sBAAlD;AACH;AACJ,KAhBD,CA1nBa,CA2oBb;AACA;;;AACA5I,qBAAiBY,QAAjB,CAA0B;AACtBmE,qBAAa2C,cADS;AAEtB1C,uBAAe,gBAFO;AAGtBrC,kBAAU,eAHY;AAItBuB,gBAAQ;AAJc,KAA1B,EA7oBa,CAmpBb;;;;;;;;;;;;;;;WAnpBa,CAmqBb;;;;;;;;;AAQA,QAAI2E;AAAmB,iBAASA,gBAAT,CAA0BxI,OAA1B,EAAmC;AACtD,iBAAKsF,QAAL,GAAgBtF,OAAhB,CADsD,CAEtD;;AACA,iBAAKsH,IAAL;AACH;;AAJG,eAA4BkB,gBAA5B;AAAA,OAAJ;;AAKAzG,WAAO,kBAAP,IAA6ByG,gBAA7B,CAhrBa,CAirBb;;;;;;AAMAA,qBAAiBtE,SAAjB,CAA2BqD,SAA3B,GAAuC;AAAEkB,sBAAc;AAAhB,KAAvC,CAvrBa,CAwrBb;;;;;;;;AAQAD,qBAAiBtE,SAAjB,CAA2BsD,WAA3B,GAAyC;AACrCkB,eAAO,qBAD8B;AAErCC,qBAAa,2BAFwB;AAGrCC,sBAAc,4BAHuB;AAIrCC,sBAAc,4BAJuB;AAKrCpB,uBAAe,sBALsB;AAMrCqB,8BAAsB,qCANe;AAOrCpB,0BAAkB,gCAPmB;AAQrCqB,uBAAe,oBARsB;AASrCpB,gBAAQ,YAT6B;AAUrCqB,oBAAY,YAVyB;AAWrCC,qBAAa,aAXwB;AAYrCC,oBAAY,YAZyB;AAarCC,qBAAa;AAbwB,KAAzC,CAhsBa,CA+sBb;;;;;;;AAMAX,qBAAiBtE,SAAjB,CAA2BkF,SAA3B,GAAuC,UAAUvB,KAAV,EAAiB;AACpD,aAAKwB,cAAL;AACH,KAFD,CArtBa,CAwtBb;;;;;;;AAMAb,qBAAiBtE,SAAjB,CAA2BoF,QAA3B,GAAsC,UAAUzB,KAAV,EAAiB;AACnD,aAAKvC,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiBwB,UAA7C;AACH,KAFD,CA9tBa,CAiuBb;;;;;;;AAMAR,qBAAiBtE,SAAjB,CAA2BqF,OAA3B,GAAqC,UAAU1B,KAAV,EAAiB;AAClD,aAAKvC,QAAL,CAAcrC,SAAd,CAAwBuG,MAAxB,CAA+B,KAAKhC,WAAL,CAAiBwB,UAAhD;AACH,KAFD,CAvuBa,CA0uBb;;;;;;;AAMAR,qBAAiBtE,SAAjB,CAA2BuF,UAA3B,GAAwC,UAAU5B,KAAV,EAAiB;AACrD,aAAK6B,KAAL;AACH,KAFD,CAhvBa,CAmvBb;;;;;;AAKAlB,qBAAiBtE,SAAjB,CAA2BmF,cAA3B,GAA4C,YAAY;AACpD,aAAKM,aAAL;AACA,aAAKC,gBAAL;AACH,KAHD,CAxvBa,CA4vBb;;;;;;AAKApB,qBAAiBtE,SAAjB,CAA2BwF,KAA3B,GAAmC,YAAY;AAC3C;AACA;AACA3H,eAAOoF,UAAP,CAAkB,YAAY;AAC1B,iBAAK0C,aAAL,CAAmB/B,IAAnB;AACH,SAFiB,CAEhBQ,IAFgB,CAEX,IAFW,CAAlB,EAEc,KAAKf,SAAL,CAAekB,YAF7B;AAGH,KAND,CAjwBa,CAwwBb;AACA;;;;;;AAKAD,qBAAiBtE,SAAjB,CAA2B0F,gBAA3B,GAA8C,YAAY;AACtD,YAAI,KAAKC,aAAL,CAAmBC,OAAvB,EAAgC;AAC5B,iBAAKxE,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiB0B,UAA7C;AACH,SAFD,MAEO;AACH,iBAAK5D,QAAL,CAAcrC,SAAd,CAAwBuG,MAAxB,CAA+B,KAAKhC,WAAL,CAAiB0B,UAAhD;AACH;AACJ,KAND;;AAOAV,qBAAiBtE,SAAjB,CAA2B,kBAA3B,IAAiDsE,iBAAiBtE,SAAjB,CAA2B0F,gBAA5E,CArxBa,CAsxBb;;;;;;AAKApB,qBAAiBtE,SAAjB,CAA2ByF,aAA3B,GAA2C,YAAY;AACnD,YAAI,KAAKE,aAAL,CAAmB7B,QAAvB,EAAiC;AAC7B,iBAAK1C,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiByB,WAA7C;AACH,SAFD,MAEO;AACH,iBAAK3D,QAAL,CAAcrC,SAAd,CAAwBuG,MAAxB,CAA+B,KAAKhC,WAAL,CAAiByB,WAAhD;AACH;AACJ,KAND;;AAOAT,qBAAiBtE,SAAjB,CAA2B,eAA3B,IAA8CsE,iBAAiBtE,SAAjB,CAA2ByF,aAAzE,CAlyBa,CAmyBb;;;;;;AAKAnB,qBAAiBtE,SAAjB,CAA2B6D,OAA3B,GAAqC,YAAY;AAC7C,aAAK8B,aAAL,CAAmB7B,QAAnB,GAA8B,IAA9B;AACA,aAAKqB,cAAL;AACH,KAHD;;AAIAb,qBAAiBtE,SAAjB,CAA2B,SAA3B,IAAwCsE,iBAAiBtE,SAAjB,CAA2B6D,OAAnE,CA5yBa,CA6yBb;;;;;;AAKAS,qBAAiBtE,SAAjB,CAA2B+D,MAA3B,GAAoC,YAAY;AAC5C,aAAK4B,aAAL,CAAmB7B,QAAnB,GAA8B,KAA9B;AACA,aAAKqB,cAAL;AACH,KAHD;;AAIAb,qBAAiBtE,SAAjB,CAA2B,QAA3B,IAAuCsE,iBAAiBtE,SAAjB,CAA2B+D,MAAlE,CAtzBa,CAuzBb;;;;;;AAKAO,qBAAiBtE,SAAjB,CAA2B6F,KAA3B,GAAmC,YAAY;AAC3C,aAAKF,aAAL,CAAmBC,OAAnB,GAA6B,IAA7B;AACA,aAAKT,cAAL;AACH,KAHD;;AAIAb,qBAAiBtE,SAAjB,CAA2B,OAA3B,IAAsCsE,iBAAiBtE,SAAjB,CAA2B6F,KAAjE,CAh0Ba,CAi0Bb;;;;;;AAKAvB,qBAAiBtE,SAAjB,CAA2B8F,OAA3B,GAAqC,YAAY;AAC7C,aAAKH,aAAL,CAAmBC,OAAnB,GAA6B,KAA7B;AACA,aAAKT,cAAL;AACH,KAHD;;AAIAb,qBAAiBtE,SAAjB,CAA2B,SAA3B,IAAwCsE,iBAAiBtE,SAAjB,CAA2B8F,OAAnE,CA10Ba,CA20Bb;;;;AAGAxB,qBAAiBtE,SAAjB,CAA2BoD,IAA3B,GAAkC,YAAY;AAC1C,YAAI,KAAKhC,QAAT,EAAmB;AACf,iBAAKuE,aAAL,GAAqB,KAAKvE,QAAL,CAAc2E,aAAd,CAA4B,MAAM,KAAKzC,WAAL,CAAiBkB,KAAnD,CAArB;AACA,gBAAIwB,aAAahI,SAASgE,aAAT,CAAuB,MAAvB,CAAjB;AACAgE,uBAAWjH,SAAX,CAAqBmD,GAArB,CAAyB,KAAKoB,WAAL,CAAiBmB,WAA1C;AACA,gBAAIwB,gBAAgBjI,SAASgE,aAAT,CAAuB,MAAvB,CAApB;AACAiE,0BAAclH,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiBoB,YAA7C;AACA,gBAAIwB,cAAclI,SAASgE,aAAT,CAAuB,MAAvB,CAAlB;AACAkE,wBAAYnH,SAAZ,CAAsBmD,GAAtB,CAA0B,KAAKoB,WAAL,CAAiBqB,YAA3C;AACAqB,uBAAW9B,WAAX,CAAuBgC,WAAvB;AACA,iBAAK9E,QAAL,CAAc8C,WAAd,CAA0B+B,aAA1B;AACA,iBAAK7E,QAAL,CAAc8C,WAAd,CAA0B8B,UAA1B;;AACA,gBAAI,KAAK5E,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiBC,aAAlD,CAAJ,EAAsE;AAClE,qBAAKnC,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiBsB,oBAA7C;AACA,qBAAKuB,uBAAL,GAA+BnI,SAASgE,aAAT,CAAuB,MAAvB,CAA/B;AACA,qBAAKmE,uBAAL,CAA6BpH,SAA7B,CAAuCmD,GAAvC,CAA2C,KAAKoB,WAAL,CAAiBE,gBAA5D;AACA,qBAAK2C,uBAAL,CAA6BpH,SAA7B,CAAuCmD,GAAvC,CAA2C,KAAKoB,WAAL,CAAiBC,aAA5D;AACA,qBAAK4C,uBAAL,CAA6BpH,SAA7B,CAAuCmD,GAAvC,CAA2C,KAAKoB,WAAL,CAAiBuB,aAA5D;AACA,qBAAKuB,kBAAL,GAA0B,KAAKb,UAAL,CAAgBnB,IAAhB,CAAqB,IAArB,CAA1B;AACA,qBAAK+B,uBAAL,CAA6BpE,gBAA7B,CAA8C,SAA9C,EAAyD,KAAKqE,kBAA9D;AACA,oBAAIC,SAASrI,SAASgE,aAAT,CAAuB,MAAvB,CAAb;AACAqE,uBAAOtH,SAAP,CAAiBmD,GAAjB,CAAqB,KAAKoB,WAAL,CAAiBG,MAAtC;AACA,qBAAK0C,uBAAL,CAA6BjC,WAA7B,CAAyCmC,MAAzC;AACA,qBAAKjF,QAAL,CAAc8C,WAAd,CAA0B,KAAKiC,uBAA/B;AACH;;AACD,iBAAKG,kBAAL,GAA0B,KAAKpB,SAAL,CAAed,IAAf,CAAoB,IAApB,CAA1B;AACA,iBAAKmC,iBAAL,GAAyB,KAAKnB,QAAL,CAAchB,IAAd,CAAmB,IAAnB,CAAzB;AACA,iBAAKoC,gBAAL,GAAwB,KAAKnB,OAAL,CAAajB,IAAb,CAAkB,IAAlB,CAAxB;AACA,iBAAKqC,mBAAL,GAA2B,KAAKlB,UAAL,CAAgBnB,IAAhB,CAAqB,IAArB,CAA3B;AACA,iBAAKuB,aAAL,CAAmB5D,gBAAnB,CAAoC,QAApC,EAA8C,KAAKuE,kBAAnD;AACA,iBAAKX,aAAL,CAAmB5D,gBAAnB,CAAoC,OAApC,EAA6C,KAAKwE,iBAAlD;AACA,iBAAKZ,aAAL,CAAmB5D,gBAAnB,CAAoC,MAApC,EAA4C,KAAKyE,gBAAjD;AACA,iBAAKpF,QAAL,CAAcW,gBAAd,CAA+B,SAA/B,EAA0C,KAAK0E,mBAA/C;AACA,iBAAKtB,cAAL;AACA,iBAAK/D,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiB2B,WAA7C;AACH;AACJ,KApCD,CA90Ba,CAm3Bb;AACA;;;AACAxJ,qBAAiBY,QAAjB,CAA0B;AACtBmE,qBAAa8D,gBADS;AAEtB7D,uBAAe,kBAFO;AAGtBrC,kBAAU,iBAHY;AAItBuB,gBAAQ;AAJc,KAA1B,EAr3Ba,CA23Bb;;;;;;;;;;;;;;;WA33Ba,CA24Bb;;;;;;;;;AAQA,QAAI+G;AAAqB,iBAASA,kBAAT,CAA4B5K,OAA5B,EAAqC;AAC1D,iBAAKsF,QAAL,GAAgBtF,OAAhB,CAD0D,CAE1D;;AACA,iBAAKsH,IAAL;AACH;;AAJG,eAA8BsD,kBAA9B;AAAA,OAAJ;;AAKA7I,WAAO,oBAAP,IAA+B6I,kBAA/B,CAx5Ba,CAy5Bb;;;;;;AAMAA,uBAAmB1G,SAAnB,CAA6BqD,SAA7B,GAAyC;AAAEkB,sBAAc;AAAhB,KAAzC,CA/5Ba,CAg6Bb;;;;;;;;AAQAmC,uBAAmB1G,SAAnB,CAA6BsD,WAA7B,GAA2C;AACvCkB,eAAO,wBADgC;AAEvCmC,0BAAkB,sBAFqB;AAGvC/B,8BAAsB,qCAHiB;AAIvCpB,0BAAkB,mCAJqB;AAKvCqB,uBAAe,oBALwB;AAMvCpB,gBAAQ,YAN+B;AAOvCqB,oBAAY,YAP2B;AAQvCC,qBAAa,aAR0B;AASvCC,oBAAY;AAT2B,KAA3C,CAx6Ba,CAm7Bb;;;;;;;AAMA0B,uBAAmB1G,SAAnB,CAA6BkF,SAA7B,GAAyC,UAAUvB,KAAV,EAAiB;AACtD,aAAKwB,cAAL;AACH,KAFD,CAz7Ba,CA47Bb;;;;;;;AAMAuB,uBAAmB1G,SAAnB,CAA6BoF,QAA7B,GAAwC,UAAUzB,KAAV,EAAiB;AACrD,aAAKvC,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiBwB,UAA7C;AACH,KAFD,CAl8Ba,CAq8Bb;;;;;;;AAMA4B,uBAAmB1G,SAAnB,CAA6BqF,OAA7B,GAAuC,UAAU1B,KAAV,EAAiB;AACpD,aAAKvC,QAAL,CAAcrC,SAAd,CAAwBuG,MAAxB,CAA+B,KAAKhC,WAAL,CAAiBwB,UAAhD;AACH,KAFD,CA38Ba,CA88Bb;;;;;;;AAMA4B,uBAAmB1G,SAAnB,CAA6BuF,UAA7B,GAA0C,UAAU5B,KAAV,EAAiB;AACvD,aAAK6B,KAAL;AACH,KAFD,CAp9Ba,CAu9Bb;;;;;;AAKAkB,uBAAmB1G,SAAnB,CAA6BmF,cAA7B,GAA8C,YAAY;AACtD,aAAKM,aAAL;AACA,aAAKC,gBAAL;AACH,KAHD,CA59Ba,CAg+Bb;;;;;;AAKAgB,uBAAmB1G,SAAnB,CAA6BwF,KAA7B,GAAqC,YAAY;AAC7C;AACA;AACA3H,eAAOoF,UAAP,CAAkB,YAAY;AAC1B,iBAAK0C,aAAL,CAAmB/B,IAAnB;AACH,SAFiB,CAEhBQ,IAFgB,CAEX,IAFW,CAAlB,EAEc,KAAKf,SAAL,CAAekB,YAF7B;AAGH,KAND,CAr+Ba,CA4+Bb;AACA;;;;;;AAKAmC,uBAAmB1G,SAAnB,CAA6B0F,gBAA7B,GAAgD,YAAY;AACxD,YAAI,KAAKC,aAAL,CAAmBC,OAAvB,EAAgC;AAC5B,iBAAKxE,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiB0B,UAA7C;AACH,SAFD,MAEO;AACH,iBAAK5D,QAAL,CAAcrC,SAAd,CAAwBuG,MAAxB,CAA+B,KAAKhC,WAAL,CAAiB0B,UAAhD;AACH;AACJ,KAND;;AAOA0B,uBAAmB1G,SAAnB,CAA6B,kBAA7B,IAAmD0G,mBAAmB1G,SAAnB,CAA6B0F,gBAAhF,CAz/Ba,CA0/Bb;;;;;;AAKAgB,uBAAmB1G,SAAnB,CAA6ByF,aAA7B,GAA6C,YAAY;AACrD,YAAI,KAAKE,aAAL,CAAmB7B,QAAvB,EAAiC;AAC7B,iBAAK1C,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiByB,WAA7C;AACH,SAFD,MAEO;AACH,iBAAK3D,QAAL,CAAcrC,SAAd,CAAwBuG,MAAxB,CAA+B,KAAKhC,WAAL,CAAiByB,WAAhD;AACH;AACJ,KAND;;AAOA2B,uBAAmB1G,SAAnB,CAA6B,eAA7B,IAAgD0G,mBAAmB1G,SAAnB,CAA6ByF,aAA7E,CAtgCa,CAugCb;;;;;;AAKAiB,uBAAmB1G,SAAnB,CAA6B6D,OAA7B,GAAuC,YAAY;AAC/C,aAAK8B,aAAL,CAAmB7B,QAAnB,GAA8B,IAA9B;AACA,aAAKqB,cAAL;AACH,KAHD;;AAIAuB,uBAAmB1G,SAAnB,CAA6B,SAA7B,IAA0C0G,mBAAmB1G,SAAnB,CAA6B6D,OAAvE,CAhhCa,CAihCb;;;;;;AAKA6C,uBAAmB1G,SAAnB,CAA6B+D,MAA7B,GAAsC,YAAY;AAC9C,aAAK4B,aAAL,CAAmB7B,QAAnB,GAA8B,KAA9B;AACA,aAAKqB,cAAL;AACH,KAHD;;AAIAuB,uBAAmB1G,SAAnB,CAA6B,QAA7B,IAAyC0G,mBAAmB1G,SAAnB,CAA6B+D,MAAtE,CA1hCa,CA2hCb;;;;;;AAKA2C,uBAAmB1G,SAAnB,CAA6B6F,KAA7B,GAAqC,YAAY;AAC7C,aAAKF,aAAL,CAAmBC,OAAnB,GAA6B,IAA7B;AACA,aAAKT,cAAL;AACH,KAHD;;AAIAuB,uBAAmB1G,SAAnB,CAA6B,OAA7B,IAAwC0G,mBAAmB1G,SAAnB,CAA6B6F,KAArE,CApiCa,CAqiCb;;;;;;AAKAa,uBAAmB1G,SAAnB,CAA6B8F,OAA7B,GAAuC,YAAY;AAC/C,aAAKH,aAAL,CAAmBC,OAAnB,GAA6B,KAA7B;AACA,aAAKT,cAAL;AACH,KAHD;;AAIAuB,uBAAmB1G,SAAnB,CAA6B,SAA7B,IAA0C0G,mBAAmB1G,SAAnB,CAA6B8F,OAAvE,CA9iCa,CA+iCb;;;;AAGAY,uBAAmB1G,SAAnB,CAA6BoD,IAA7B,GAAoC,YAAY;AAC5C,YAAI,KAAKhC,QAAT,EAAmB;AACf,iBAAKuE,aAAL,GAAqB,KAAKvE,QAAL,CAAc2E,aAAd,CAA4B,MAAM,KAAKzC,WAAL,CAAiBkB,KAAnD,CAArB;;AACA,gBAAI,KAAKpD,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiBqD,gBAAlD,CAAJ,EAAyE;AACrE,qBAAKvF,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiBsB,oBAA7C;AACA,qBAAKuB,uBAAL,GAA+BnI,SAASgE,aAAT,CAAuB,MAAvB,CAA/B;AACA,qBAAKmE,uBAAL,CAA6BpH,SAA7B,CAAuCmD,GAAvC,CAA2C,KAAKoB,WAAL,CAAiBE,gBAA5D;AACA,qBAAK2C,uBAAL,CAA6BpH,SAA7B,CAAuCmD,GAAvC,CAA2C,KAAKoB,WAAL,CAAiBqD,gBAA5D;AACA,qBAAKR,uBAAL,CAA6BpH,SAA7B,CAAuCmD,GAAvC,CAA2C,KAAKoB,WAAL,CAAiBuB,aAA5D;AACA,qBAAKuB,kBAAL,GAA0B,KAAKb,UAAL,CAAgBnB,IAAhB,CAAqB,IAArB,CAA1B;AACA,qBAAK+B,uBAAL,CAA6BpE,gBAA7B,CAA8C,SAA9C,EAAyD,KAAKqE,kBAA9D;AACA,oBAAIC,SAASrI,SAASgE,aAAT,CAAuB,MAAvB,CAAb;AACAqE,uBAAOtH,SAAP,CAAiBmD,GAAjB,CAAqB,KAAKoB,WAAL,CAAiBG,MAAtC;AACA,qBAAK0C,uBAAL,CAA6BjC,WAA7B,CAAyCmC,MAAzC;AACA,qBAAKjF,QAAL,CAAc8C,WAAd,CAA0B,KAAKiC,uBAA/B;AACH;;AACD,iBAAKG,kBAAL,GAA0B,KAAKpB,SAAL,CAAed,IAAf,CAAoB,IAApB,CAA1B;AACA,iBAAKmC,iBAAL,GAAyB,KAAKnB,QAAL,CAAchB,IAAd,CAAmB,IAAnB,CAAzB;AACA,iBAAKoC,gBAAL,GAAwB,KAAKnB,OAAL,CAAajB,IAAb,CAAkB,IAAlB,CAAxB;AACA,iBAAKwC,qBAAL,GAA6B,KAAKrB,UAAL,CAAgBnB,IAAhB,CAAqB,IAArB,CAA7B;AACA,iBAAKuB,aAAL,CAAmB5D,gBAAnB,CAAoC,QAApC,EAA8C,KAAKuE,kBAAnD;AACA,iBAAKX,aAAL,CAAmB5D,gBAAnB,CAAoC,OAApC,EAA6C,KAAKwE,iBAAlD;AACA,iBAAKZ,aAAL,CAAmB5D,gBAAnB,CAAoC,MAApC,EAA4C,KAAKyE,gBAAjD;AACA,iBAAKpF,QAAL,CAAcW,gBAAd,CAA+B,SAA/B,EAA0C,KAAK6E,qBAA/C;AACA,iBAAKzB,cAAL;AACA,iBAAK/D,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,aAA5B;AACH;AACJ,KA3BD,CAljCa,CA8kCb;AACA;;;AACAzG,qBAAiBY,QAAjB,CAA0B;AACtBmE,qBAAakG,kBADS;AAEtBjG,uBAAe,oBAFO;AAGtBrC,kBAAU,oBAHY;AAItBuB,gBAAQ;AAJc,KAA1B,EAhlCa,CAslCb;;;;;;;;;;;;;;;WAtlCa,CAsmCb;;;;;;;;;AAQA,QAAIkH;AAAe,iBAASA,YAAT,CAAsB/K,OAAtB,EAA+B;AAC9C,iBAAKsF,QAAL,GAAgBtF,OAAhB,CAD8C,CAE9C;;AACA,iBAAKsH,IAAL;AACH;;AAJG,eAAwByD,YAAxB;AAAA,OAAJ;;AAKAhJ,WAAO,cAAP,IAAyBgJ,YAAzB,CAnnCa,CAonCb;;;;;;AAMAA,iBAAa7G,SAAb,CAAuBqD,SAAvB,GAAmC;AAC/B;AACAyD,qCAA6B,GAFE;AAG/B;AACAC,sCAA8B,GAJC;AAK/B;AACA;AACAC,uBAAe;AAPgB,KAAnC,CA1nCa,CAmoCb;;;;;;AAMAH,iBAAa7G,SAAb,CAAuBiH,SAAvB,GAAmC;AAC/BC,eAAO,EADwB;AAE/BC,gBAAQ,EAFuB;AAG/BC,eAAO,EAHwB;AAI/BC,kBAAU,EAJqB;AAK/BC,oBAAY;AALmB,KAAnC,CAzoCa,CAgpCb;;;;;;;;AAQAT,iBAAa7G,SAAb,CAAuBsD,WAAvB,GAAqC;AACjCiE,mBAAW,qBADsB;AAEjCC,iBAAS,mBAFwB;AAGjCC,cAAM,gBAH2B;AAIjCC,+BAAuB,iCAJU;AAKjCnE,uBAAe,sBALkB;AAMjCqB,8BAAsB,qCANW;AAOjCnB,gBAAQ,YAPyB;AAQjC;AACAwB,qBAAa,aAToB;AAUjC0C,oBAAY,YAVqB;AAWjCC,sBAAc,cAXmB;AAYjC;AACAC,qBAAa,uBAboB;AAcjC;AACAC,sBAAc,wBAfmB;AAgBjCC,kBAAU,oBAhBuB;AAiBjCC,mBAAW,qBAjBsB;AAkBjCC,mBAAW;AAlBsB,KAArC,CAxpCa,CA4qCb;;;;AAGApB,iBAAa7G,SAAb,CAAuBoD,IAAvB,GAA8B,YAAY;AACtC,YAAI,KAAKhC,QAAT,EAAmB;AACf;AACA,gBAAI8G,YAAYlK,SAASgE,aAAT,CAAuB,KAAvB,CAAhB;AACAkG,sBAAUnJ,SAAV,CAAoBmD,GAApB,CAAwB,KAAKoB,WAAL,CAAiBiE,SAAzC;AACA,iBAAKnG,QAAL,CAAc+G,aAAd,CAA4BC,YAA5B,CAAyCF,SAAzC,EAAoD,KAAK9G,QAAzD;AACA,iBAAKA,QAAL,CAAc+G,aAAd,CAA4BE,WAA5B,CAAwC,KAAKjH,QAA7C;AACA8G,sBAAUhE,WAAV,CAAsB,KAAK9C,QAA3B;AACA,iBAAKkH,UAAL,GAAkBJ,SAAlB,CAPe,CAQf;;AACA,gBAAIK,UAAUvK,SAASgE,aAAT,CAAuB,KAAvB,CAAd;AACAuG,oBAAQxJ,SAAR,CAAkBmD,GAAlB,CAAsB,KAAKoB,WAAL,CAAiBkE,OAAvC;AACA,iBAAKgB,QAAL,GAAgBD,OAAhB;AACAL,sBAAUE,YAAV,CAAuBG,OAAvB,EAAgC,KAAKnH,QAArC,EAZe,CAaf;;AACA,gBAAIqH,UAAU,KAAKrH,QAAL,CAAchE,YAAd,CAA2B,KAA3B,KAAqC,KAAKgE,QAAL,CAAchE,YAAd,CAA2B,cAA3B,CAAnD;AACA,gBAAIsL,QAAQ,IAAZ;;AACA,gBAAID,OAAJ,EAAa;AACTC,wBAAQ1K,SAAS2K,cAAT,CAAwBF,OAAxB,CAAR;;AACA,oBAAIC,KAAJ,EAAW;AACP,yBAAKE,WAAL,GAAmBF,KAAnB;AACAA,0BAAM3G,gBAAN,CAAuB,OAAvB,EAAgC,KAAK8G,eAAL,CAAqBzE,IAArB,CAA0B,IAA1B,CAAhC;AACAsE,0BAAM3G,gBAAN,CAAuB,SAAvB,EAAkC,KAAK+G,uBAAL,CAA6B1E,IAA7B,CAAkC,IAAlC,CAAlC;AACH;AACJ;;AACD,gBAAI2E,QAAQ,KAAK3H,QAAL,CAAc9C,gBAAd,CAA+B,MAAM,KAAKgF,WAAL,CAAiBmE,IAAtD,CAAZ;AACA,iBAAKuB,iBAAL,GAAyB,KAAKC,wBAAL,CAA8B7E,IAA9B,CAAmC,IAAnC,CAAzB;AACA,iBAAK8E,eAAL,GAAuB,KAAKC,gBAAL,CAAsB/E,IAAtB,CAA2B,IAA3B,CAAvB;;AACA,iBAAK,IAAIrH,IAAI,CAAb,EAAgBA,IAAIgM,MAAM/L,MAA1B,EAAkCD,GAAlC,EAAuC;AACnC;AACAgM,sBAAMhM,CAAN,EAASgF,gBAAT,CAA0B,OAA1B,EAAmC,KAAKmH,eAAxC,EAFmC,CAGnC;;AACAH,sBAAMhM,CAAN,EAASqM,QAAT,GAAoB,IAApB,CAJmC,CAKnC;;AACAL,sBAAMhM,CAAN,EAASgF,gBAAT,CAA0B,SAA1B,EAAqC,KAAKiH,iBAA1C;AACH,aAlCc,CAmCf;;;AACA,gBAAI,KAAK5H,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiBC,aAAlD,CAAJ,EAAsE;AAClE,qBAAKnC,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiBsB,oBAA7C;;AACA,qBAAK7H,IAAI,CAAT,EAAYA,IAAIgM,MAAM/L,MAAtB,EAA8BD,GAA9B,EAAmC;AAC/B,wBAAI2D,OAAOqI,MAAMhM,CAAN,CAAX;AACA,wBAAIiH,kBAAkBhG,SAASgE,aAAT,CAAuB,MAAvB,CAAtB;AACAgC,oCAAgBjF,SAAhB,CAA0BmD,GAA1B,CAA8B,KAAKoB,WAAL,CAAiBoE,qBAA/C;AACA,wBAAIrB,SAASrI,SAASgE,aAAT,CAAuB,MAAvB,CAAb;AACAqE,2BAAOtH,SAAP,CAAiBmD,GAAjB,CAAqB,KAAKoB,WAAL,CAAiBG,MAAtC;AACAO,oCAAgBE,WAAhB,CAA4BmC,MAA5B;AACA3F,yBAAKwD,WAAL,CAAiBF,eAAjB;AACAtD,yBAAK3B,SAAL,CAAemD,GAAf,CAAmB,KAAKoB,WAAL,CAAiBC,aAApC;AACH;AACJ,aAhDc,CAiDf;;;AACA,gBAAI,KAAKnC,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiBuE,WAAlD,CAAJ,EAAoE;AAChE,qBAAKW,QAAL,CAAczJ,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiBuE,WAA7C;AACH;;AACD,gBAAI,KAAKzG,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiBwE,YAAlD,CAAJ,EAAqE;AACjE,qBAAKU,QAAL,CAAczJ,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiBwE,YAA7C;AACH;;AACD,gBAAI,KAAK1G,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiByE,QAAlD,CAAJ,EAAiE;AAC7D,qBAAKS,QAAL,CAAczJ,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiByE,QAA7C;AACH;;AACD,gBAAI,KAAK3G,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiB0E,SAAlD,CAAJ,EAAkE;AAC9D,qBAAKQ,QAAL,CAAczJ,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiB0E,SAA7C;AACH;;AACD,gBAAI,KAAK5G,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiB2E,SAAlD,CAAJ,EAAkE;AAC9D,qBAAKO,QAAL,CAAczJ,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiB2E,SAA7C;AACH;;AACDC,sBAAUnJ,SAAV,CAAoBmD,GAApB,CAAwB,KAAKoB,WAAL,CAAiB2B,WAAzC;AACH;AACJ,KApED,CA/qCa,CAovCb;;;;;;;;AAOA4B,iBAAa7G,SAAb,CAAuB6I,eAAvB,GAAyC,UAAUQ,GAAV,EAAe;AACpD,YAAI,KAAKjI,QAAL,IAAiB,KAAKwH,WAA1B,EAAuC;AACnC,gBAAIU,OAAO,KAAKV,WAAL,CAAiBW,qBAAjB,EAAX;AACA,gBAAIC,UAAU,KAAKZ,WAAL,CAAiBT,aAAjB,CAA+BoB,qBAA/B,EAAd;;AACA,gBAAI,KAAKnI,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiB2E,SAAlD,CAAJ,EAAkE,CACjE,CADD,MACO,IAAI,KAAK7G,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiBwE,YAAlD,CAAJ,EAAqE;AACxE;AACA,qBAAKQ,UAAL,CAAgBmB,KAAhB,CAAsBC,KAAtB,GAA8BF,QAAQE,KAAR,GAAgBJ,KAAKI,KAArB,GAA6B,IAA3D;AACA,qBAAKpB,UAAL,CAAgBmB,KAAhB,CAAsBE,GAAtB,GAA4B,KAAKf,WAAL,CAAiBgB,SAAjB,GAA6B,KAAKhB,WAAL,CAAiBiB,YAA9C,GAA6D,IAAzF;AACH,aAJM,MAIA,IAAI,KAAKzI,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiByE,QAAlD,CAAJ,EAAiE;AACpE;AACA,qBAAKO,UAAL,CAAgBmB,KAAhB,CAAsBK,IAAtB,GAA6B,KAAKlB,WAAL,CAAiBmB,UAAjB,GAA8B,IAA3D;AACA,qBAAKzB,UAAL,CAAgBmB,KAAhB,CAAsBO,MAAtB,GAA+BR,QAAQQ,MAAR,GAAiBV,KAAKK,GAAtB,GAA4B,IAA3D;AACH,aAJM,MAIA,IAAI,KAAKvI,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiB0E,SAAlD,CAAJ,EAAkE;AACrE;AACA,qBAAKM,UAAL,CAAgBmB,KAAhB,CAAsBC,KAAtB,GAA8BF,QAAQE,KAAR,GAAgBJ,KAAKI,KAArB,GAA6B,IAA3D;AACA,qBAAKpB,UAAL,CAAgBmB,KAAhB,CAAsBO,MAAtB,GAA+BR,QAAQQ,MAAR,GAAiBV,KAAKK,GAAtB,GAA4B,IAA3D;AACH,aAJM,MAIA;AACH;AACA,qBAAKrB,UAAL,CAAgBmB,KAAhB,CAAsBK,IAAtB,GAA6B,KAAKlB,WAAL,CAAiBmB,UAAjB,GAA8B,IAA3D;AACA,qBAAKzB,UAAL,CAAgBmB,KAAhB,CAAsBE,GAAtB,GAA4B,KAAKf,WAAL,CAAiBgB,SAAjB,GAA6B,KAAKhB,WAAL,CAAiBiB,YAA9C,GAA6D,IAAzF;AACH;AACJ;;AACD,aAAKI,MAAL,CAAYZ,GAAZ;AACH,KAxBD,CA3vCa,CAoxCb;;;;;;;AAMAxC,iBAAa7G,SAAb,CAAuB8I,uBAAvB,GAAiD,UAAUO,GAAV,EAAe;AAC5D,YAAI,KAAKjI,QAAL,IAAiB,KAAKkH,UAAtB,IAAoC,KAAKM,WAA7C,EAA0D;AACtD,gBAAIG,QAAQ,KAAK3H,QAAL,CAAc9C,gBAAd,CAA+B,MAAM,KAAKgF,WAAL,CAAiBmE,IAAvB,GAA8B,kBAA7D,CAAZ;;AACA,gBAAIsB,SAASA,MAAM/L,MAAN,GAAe,CAAxB,IAA6B,KAAKsL,UAAL,CAAgBvJ,SAAhB,CAA0BG,QAA1B,CAAmC,KAAKoE,WAAL,CAAiBqE,UAApD,CAAjC,EAAkG;AAC9F,oBAAI0B,IAAIa,OAAJ,KAAgB,KAAKjD,SAAL,CAAeI,QAAnC,EAA6C;AACzCgC,wBAAIc,cAAJ;AACApB,0BAAMA,MAAM/L,MAAN,GAAe,CAArB,EAAwBoN,KAAxB;AACH,iBAHD,MAGO,IAAIf,IAAIa,OAAJ,KAAgB,KAAKjD,SAAL,CAAeK,UAAnC,EAA+C;AAClD+B,wBAAIc,cAAJ;AACApB,0BAAM,CAAN,EAASqB,KAAT;AACH;AACJ;AACJ;AACJ,KAbD,CA1xCa,CAwyCb;;;;;;;AAMAvD,iBAAa7G,SAAb,CAAuBiJ,wBAAvB,GAAkD,UAAUI,GAAV,EAAe;AAC7D,YAAI,KAAKjI,QAAL,IAAiB,KAAKkH,UAA1B,EAAsC;AAClC,gBAAIS,QAAQ,KAAK3H,QAAL,CAAc9C,gBAAd,CAA+B,MAAM,KAAKgF,WAAL,CAAiBmE,IAAvB,GAA8B,kBAA7D,CAAZ;;AACA,gBAAIsB,SAASA,MAAM/L,MAAN,GAAe,CAAxB,IAA6B,KAAKsL,UAAL,CAAgBvJ,SAAhB,CAA0BG,QAA1B,CAAmC,KAAKoE,WAAL,CAAiBqE,UAApD,CAAjC,EAAkG;AAC9F,oBAAI0C,eAAevK,MAAME,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2B6I,KAA3B,EAAkCvL,OAAlC,CAA0C6L,IAAIiB,MAA9C,CAAnB;;AACA,oBAAIjB,IAAIa,OAAJ,KAAgB,KAAKjD,SAAL,CAAeI,QAAnC,EAA6C;AACzCgC,wBAAIc,cAAJ;;AACA,wBAAIE,eAAe,CAAnB,EAAsB;AAClBtB,8BAAMsB,eAAe,CAArB,EAAwBD,KAAxB;AACH,qBAFD,MAEO;AACHrB,8BAAMA,MAAM/L,MAAN,GAAe,CAArB,EAAwBoN,KAAxB;AACH;AACJ,iBAPD,MAOO,IAAIf,IAAIa,OAAJ,KAAgB,KAAKjD,SAAL,CAAeK,UAAnC,EAA+C;AAClD+B,wBAAIc,cAAJ;;AACA,wBAAIpB,MAAM/L,MAAN,GAAeqN,eAAe,CAAlC,EAAqC;AACjCtB,8BAAMsB,eAAe,CAArB,EAAwBD,KAAxB;AACH,qBAFD,MAEO;AACHrB,8BAAM,CAAN,EAASqB,KAAT;AACH;AACJ,iBAPM,MAOA,IAAIf,IAAIa,OAAJ,KAAgB,KAAKjD,SAAL,CAAeG,KAA/B,IAAwCiC,IAAIa,OAAJ,KAAgB,KAAKjD,SAAL,CAAeC,KAA3E,EAAkF;AACrFmC,wBAAIc,cAAJ,GADqF,CAErF;;AACA,wBAAII,IAAI,IAAIC,UAAJ,CAAe,WAAf,CAAR;AACAnB,wBAAIiB,MAAJ,CAAW1L,aAAX,CAAyB2L,CAAzB;AACAA,wBAAI,IAAIC,UAAJ,CAAe,SAAf,CAAJ;AACAnB,wBAAIiB,MAAJ,CAAW1L,aAAX,CAAyB2L,CAAzB,EANqF,CAOrF;;AACAlB,wBAAIiB,MAAJ,CAAWG,KAAX;AACH,iBATM,MASA,IAAIpB,IAAIa,OAAJ,KAAgB,KAAKjD,SAAL,CAAeE,MAAnC,EAA2C;AAC9CkC,wBAAIc,cAAJ;AACA,yBAAKO,IAAL;AACH;AACJ;AACJ;AACJ,KAlCD,CA9yCa,CAi1Cb;;;;;;;AAMA7D,iBAAa7G,SAAb,CAAuBmJ,gBAAvB,GAA0C,UAAUE,GAAV,EAAe;AACrD,YAAIA,IAAIiB,MAAJ,CAAWK,YAAX,CAAwB,UAAxB,CAAJ,EAAyC;AACrCtB,gBAAIuB,eAAJ;AACH,SAFD,MAEO;AACH;AACA,iBAAKC,QAAL,GAAgB,IAAhB;AACAhN,mBAAOoF,UAAP,CAAkB,UAAUoG,GAAV,EAAe;AAC7B,qBAAKqB,IAAL;AACA,qBAAKG,QAAL,GAAgB,KAAhB;AACH,aAHiB,CAGhBzG,IAHgB,CAGX,IAHW,CAAlB,EAGc,KAAKf,SAAL,CAAe2D,aAH7B;AAIH;AACJ,KAXD,CAv1Ca,CAm2Cb;;;;;;;;;;AASAH,iBAAa7G,SAAb,CAAuB8K,UAAvB,GAAoC,UAAUC,MAAV,EAAkBC,KAAlB,EAAyB;AACzD,YAAI,KAAK5J,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiB2E,SAAlD,CAAJ,EAAkE;AAC9D;AACA,iBAAK7G,QAAL,CAAcqI,KAAd,CAAoBwB,IAApB,GAA2B,EAA3B;AACH,SAHD,MAGO,IAAI,KAAK7J,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiBwE,YAAlD,CAAJ,EAAqE;AACxE;AACA,iBAAK1G,QAAL,CAAcqI,KAAd,CAAoBwB,IAApB,GAA2B,YAAYD,KAAZ,GAAoB,KAApB,GAA4B,IAA5B,GAAmCA,KAAnC,GAA2C,KAAtE;AACH,SAHM,MAGA,IAAI,KAAK5J,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiByE,QAAlD,CAAJ,EAAiE;AACpE;AACA,iBAAK3G,QAAL,CAAcqI,KAAd,CAAoBwB,IAApB,GAA2B,UAAUF,MAAV,GAAmB,OAAnB,GAA6BA,MAA7B,GAAsC,OAAjE;AACH,SAHM,MAGA,IAAI,KAAK3J,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiB0E,SAAlD,CAAJ,EAAkE;AACrE;AACA,iBAAK5G,QAAL,CAAcqI,KAAd,CAAoBwB,IAApB,GAA2B,UAAUF,MAAV,GAAmB,KAAnB,GAA2BC,KAA3B,GAAmC,KAAnC,GAA2CD,MAA3C,GAAoD,KAApD,GAA4DC,KAA5D,GAAoE,KAA/F;AACH,SAHM,MAGA;AACH;AACA,iBAAK5J,QAAL,CAAcqI,KAAd,CAAoBwB,IAApB,GAA2B,EAA3B;AACH;AACJ,KAjBD,CA52Ca,CA83Cb;;;;;;;AAMApE,iBAAa7G,SAAb,CAAuBkL,2BAAvB,GAAqD,UAAU7B,GAAV,EAAe;AAChEA,YAAIiB,MAAJ,CAAWvL,SAAX,CAAqBuG,MAArB,CAA4BuB,aAAa7G,SAAb,CAAuBsD,WAAvB,CAAmCsE,YAA/D;AACH,KAFD,CAp4Ca,CAu4Cb;;;;;;AAKAf,iBAAa7G,SAAb,CAAuBmL,wBAAvB,GAAkD,YAAY;AAC1D,aAAK/J,QAAL,CAAcW,gBAAd,CAA+B,eAA/B,EAAgD,KAAKmJ,2BAArD;AACA,aAAK9J,QAAL,CAAcW,gBAAd,CAA+B,qBAA/B,EAAsD,KAAKmJ,2BAA3D;AACH,KAHD,CA54Ca,CAg5Cb;;;;;;AAKArE,iBAAa7G,SAAb,CAAuBoL,IAAvB,GAA8B,UAAU/B,GAAV,EAAe;AACzC,YAAI,KAAKjI,QAAL,IAAiB,KAAKkH,UAAtB,IAAoC,KAAKE,QAA7C,EAAuD;AACnD;AACA,gBAAIuC,SAAS,KAAK3J,QAAL,CAAcmI,qBAAd,GAAsCwB,MAAnD;AACA,gBAAIC,QAAQ,KAAK5J,QAAL,CAAcmI,qBAAd,GAAsCyB,KAAlD,CAHmD,CAInD;;AACA,iBAAK1C,UAAL,CAAgBmB,KAAhB,CAAsBuB,KAAtB,GAA8BA,QAAQ,IAAtC;AACA,iBAAK1C,UAAL,CAAgBmB,KAAhB,CAAsBsB,MAAtB,GAA+BA,SAAS,IAAxC;AACA,iBAAKvC,QAAL,CAAciB,KAAd,CAAoBuB,KAApB,GAA4BA,QAAQ,IAApC;AACA,iBAAKxC,QAAL,CAAciB,KAAd,CAAoBsB,MAApB,GAA6BA,SAAS,IAAtC;AACA,gBAAIM,qBAAqB,KAAKhI,SAAL,CAAeyD,2BAAf,GAA6C,KAAKzD,SAAL,CAAe0D,4BAArF,CATmD,CAUnD;AACA;;AACA,gBAAIgC,QAAQ,KAAK3H,QAAL,CAAc9C,gBAAd,CAA+B,MAAM,KAAKgF,WAAL,CAAiBmE,IAAtD,CAAZ;;AACA,iBAAK,IAAI1K,IAAI,CAAb,EAAgBA,IAAIgM,MAAM/L,MAA1B,EAAkCD,GAAlC,EAAuC;AACnC,oBAAIuO,YAAY,IAAhB;;AACA,oBAAI,KAAKlK,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiByE,QAAlD,KAA+D,KAAK3G,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiB0E,SAAlD,CAAnE,EAAiI;AAC7HsD,gCAAY,CAACP,SAAShC,MAAMhM,CAAN,EAAS6M,SAAlB,GAA8Bb,MAAMhM,CAAN,EAAS8M,YAAxC,IAAwDkB,MAAxD,GAAiEM,kBAAjE,GAAsF,GAAlG;AACH,iBAFD,MAEO;AACHC,gCAAYvC,MAAMhM,CAAN,EAAS6M,SAAT,GAAqBmB,MAArB,GAA8BM,kBAA9B,GAAmD,GAA/D;AACH;;AACDtC,sBAAMhM,CAAN,EAAS0M,KAAT,CAAe8B,eAAf,GAAiCD,SAAjC;AACH,aArBkD,CAsBnD;;;AACA,iBAAKR,UAAL,CAAgBC,MAAhB,EAAwBC,KAAxB,EAvBmD,CAwBnD;AACA;;AACAnN,mBAAO0E,qBAAP,CAA6B,YAAY;AACrC,qBAAKnB,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiBsE,YAA7C;AACA,qBAAKxG,QAAL,CAAcqI,KAAd,CAAoBwB,IAApB,GAA2B,YAAYD,KAAZ,GAAoB,KAApB,GAA4BD,MAA5B,GAAqC,OAAhE;AACA,qBAAKzC,UAAL,CAAgBvJ,SAAhB,CAA0BmD,GAA1B,CAA8B,KAAKoB,WAAL,CAAiBqE,UAA/C;AACH,aAJ4B,CAI3BvD,IAJ2B,CAItB,IAJsB,CAA7B,EA1BmD,CA+BnD;;AACA,iBAAK+G,wBAAL,GAhCmD,CAiCnD;;AACA,gBAAI/O,WAAW,UAAUmO,CAAV,EAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAIA,MAAMlB,GAAN,IAAa,CAAC,KAAKwB,QAAnB,IAA+BN,EAAED,MAAF,CAASkB,UAAT,KAAwB,KAAKpK,QAAhE,EAA0E;AACtEpD,6BAASyN,mBAAT,CAA6B,OAA7B,EAAsCrP,QAAtC;AACA,yBAAKsO,IAAL;AACH;AACJ,aAXc,CAWbtG,IAXa,CAWR,IAXQ,CAAf;;AAYApG,qBAAS+D,gBAAT,CAA0B,OAA1B,EAAmC3F,QAAnC;AACH;AACJ,KAjDD;;AAkDAyK,iBAAa7G,SAAb,CAAuB,MAAvB,IAAiC6G,aAAa7G,SAAb,CAAuBoL,IAAxD,CAv8Ca,CAw8Cb;;;;;;AAKAvE,iBAAa7G,SAAb,CAAuB0K,IAAvB,GAA8B,YAAY;AACtC,YAAI,KAAKtJ,QAAL,IAAiB,KAAKkH,UAAtB,IAAoC,KAAKE,QAA7C,EAAuD;AACnD,gBAAIO,QAAQ,KAAK3H,QAAL,CAAc9C,gBAAd,CAA+B,MAAM,KAAKgF,WAAL,CAAiBmE,IAAtD,CAAZ,CADmD,CAEnD;;AACA,iBAAK,IAAI1K,IAAI,CAAb,EAAgBA,IAAIgM,MAAM/L,MAA1B,EAAkCD,GAAlC,EAAuC;AACnCgM,sBAAMhM,CAAN,EAAS0M,KAAT,CAAeiC,cAAf,CAA8B,kBAA9B;AACH,aALkD,CAMnD;;;AACA,gBAAIpC,OAAO,KAAKlI,QAAL,CAAcmI,qBAAd,EAAX;AACA,gBAAIwB,SAASzB,KAAKyB,MAAlB;AACA,gBAAIC,QAAQ1B,KAAK0B,KAAjB,CATmD,CAUnD;AACA;;AACA,iBAAK5J,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiBsE,YAA7C;AACA,iBAAKkD,UAAL,CAAgBC,MAAhB,EAAwBC,KAAxB;AACA,iBAAK1C,UAAL,CAAgBvJ,SAAhB,CAA0BuG,MAA1B,CAAiC,KAAKhC,WAAL,CAAiBqE,UAAlD,EAdmD,CAenD;;AACA,iBAAKwD,wBAAL;AACH;AACJ,KAnBD;;AAoBAtE,iBAAa7G,SAAb,CAAuB,MAAvB,IAAiC6G,aAAa7G,SAAb,CAAuB0K,IAAxD,CAj+Ca,CAk+Cb;;;;;;AAKA7D,iBAAa7G,SAAb,CAAuBiK,MAAvB,GAAgC,UAAUZ,GAAV,EAAe;AAC3C,YAAI,KAAKf,UAAL,CAAgBvJ,SAAhB,CAA0BG,QAA1B,CAAmC,KAAKoE,WAAL,CAAiBqE,UAApD,CAAJ,EAAqE;AACjE,iBAAK+C,IAAL;AACH,SAFD,MAEO;AACH,iBAAKU,IAAL,CAAU/B,GAAV;AACH;AACJ,KAND;;AAOAxC,iBAAa7G,SAAb,CAAuB,QAAvB,IAAmC6G,aAAa7G,SAAb,CAAuBiK,MAA1D,CA9+Ca,CA++Cb;AACA;;AACAxO,qBAAiBY,QAAjB,CAA0B;AACtBmE,qBAAaqG,YADS;AAEtBpG,uBAAe,cAFO;AAGtBrC,kBAAU,aAHY;AAItBuB,gBAAQ;AAJc,KAA1B,EAj/Ca,CAu/Cb;;;;;;;;;;;;;;;WAv/Ca,CAugDb;;;;;;;;;AAQA,QAAIgM;AAAmB,iBAASA,gBAAT,CAA0B7P,OAA1B,EAAmC;AACtD,iBAAKsF,QAAL,GAAgBtF,OAAhB,CADsD,CAEtD;;AACA,iBAAKsH,IAAL;AACH;;AAJG,eAA4BuI,gBAA5B;AAAA,OAAJ;;AAKA9N,WAAO,kBAAP,IAA6B8N,gBAA7B,CAphDa,CAqhDb;;;;;;AAMAA,qBAAiB3L,SAAjB,CAA2BqD,SAA3B,GAAuC,EAAvC,CA3hDa,CA4hDb;;;;;;;;AAQAsI,qBAAiB3L,SAAjB,CAA2BsD,WAA3B,GAAyC;AAAEsI,6BAAqB;AAAvB,KAAzC,CApiDa,CAqiDb;;;;;;;AAMAD,qBAAiB3L,SAAjB,CAA2B6L,WAA3B,GAAyC,UAAUC,CAAV,EAAa;AAClD,YAAI,KAAK1K,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiBsI,mBAAlD,CAAJ,EAA4E;AACxE;AACH;;AACD,aAAKG,YAAL,CAAkBtC,KAAlB,CAAwBuB,KAAxB,GAAgCc,IAAI,GAApC;AACH,KALD;;AAMAH,qBAAiB3L,SAAjB,CAA2B,aAA3B,IAA4C2L,iBAAiB3L,SAAjB,CAA2B6L,WAAvE,CAjjDa,CAkjDb;;;;;;;AAMAF,qBAAiB3L,SAAjB,CAA2BgM,SAA3B,GAAuC,UAAUF,CAAV,EAAa;AAChD,aAAKG,UAAL,CAAgBxC,KAAhB,CAAsBuB,KAAtB,GAA8Bc,IAAI,GAAlC;AACA,aAAKI,OAAL,CAAazC,KAAb,CAAmBuB,KAAnB,GAA2B,MAAMc,CAAN,GAAU,GAArC;AACH,KAHD;;AAIAH,qBAAiB3L,SAAjB,CAA2B,WAA3B,IAA0C2L,iBAAiB3L,SAAjB,CAA2BgM,SAArE,CA5jDa,CA6jDb;;;;AAGAL,qBAAiB3L,SAAjB,CAA2BoD,IAA3B,GAAkC,YAAY;AAC1C,YAAI,KAAKhC,QAAT,EAAmB;AACf,gBAAI+K,KAAKnO,SAASgE,aAAT,CAAuB,KAAvB,CAAT;AACAmK,eAAGlP,SAAH,GAAe,sBAAf;AACA,iBAAKmE,QAAL,CAAc8C,WAAd,CAA0BiI,EAA1B;AACA,iBAAKJ,YAAL,GAAoBI,EAApB;AACAA,iBAAKnO,SAASgE,aAAT,CAAuB,KAAvB,CAAL;AACAmK,eAAGlP,SAAH,GAAe,oBAAf;AACA,iBAAKmE,QAAL,CAAc8C,WAAd,CAA0BiI,EAA1B;AACA,iBAAKF,UAAL,GAAkBE,EAAlB;AACAA,iBAAKnO,SAASgE,aAAT,CAAuB,KAAvB,CAAL;AACAmK,eAAGlP,SAAH,GAAe,iBAAf;AACA,iBAAKmE,QAAL,CAAc8C,WAAd,CAA0BiI,EAA1B;AACA,iBAAKD,OAAL,GAAeC,EAAf;AACA,iBAAKJ,YAAL,CAAkBtC,KAAlB,CAAwBuB,KAAxB,GAAgC,IAAhC;AACA,iBAAKiB,UAAL,CAAgBxC,KAAhB,CAAsBuB,KAAtB,GAA8B,MAA9B;AACA,iBAAKkB,OAAL,CAAazC,KAAb,CAAmBuB,KAAnB,GAA2B,IAA3B;AACA,iBAAK5J,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,aAA5B;AACH;AACJ,KAnBD,CAhkDa,CAolDb;AACA;;;AACAzG,qBAAiBY,QAAjB,CAA0B;AACtBmE,qBAAamL,gBADS;AAEtBlL,uBAAe,kBAFO;AAGtBrC,kBAAU,iBAHY;AAItBuB,gBAAQ;AAJc,KAA1B,EAtlDa,CA4lDb;;;;;;;;;;;;;;;WA5lDa,CA4mDb;;;;;;;;;AAQA,QAAIyM;AAAgB,iBAASA,aAAT,CAAuBtQ,OAAvB,EAAgC;AAChD,iBAAKsF,QAAL,GAAgBtF,OAAhB,CADgD,CAEhD;;AACA,iBAAKsH,IAAL;AACH;;AAJG,eAAyBgJ,aAAzB;AAAA,OAAJ;;AAKAvO,WAAO,eAAP,IAA0BuO,aAA1B,CAznDa,CA0nDb;;;;;;AAMAA,kBAAcpM,SAAd,CAAwBqD,SAAxB,GAAoC;AAAEkB,sBAAc;AAAhB,KAApC,CAhoDa,CAioDb;;;;;;;;AAQA6H,kBAAcpM,SAAd,CAAwBsD,WAAxB,GAAsC;AAClCwB,oBAAY,YADsB;AAElCC,qBAAa,aAFqB;AAGlCC,oBAAY,YAHsB;AAIlCC,qBAAa,aAJqB;AAKlCoH,kBAAU,cALwB;AAMlCC,mBAAW,mBANuB;AAOlCC,4BAAoB,yBAPc;AAQlCC,4BAAoB,yBARc;AASlCjJ,uBAAe,sBATmB;AAUlCqB,8BAAsB,qCAVY;AAWlCpB,0BAAkB,6BAXgB;AAYlCqB,uBAAe,oBAZmB;AAalCpB,gBAAQ;AAb0B,KAAtC,CAzoDa,CAwpDb;;;;;;;AAMA2I,kBAAcpM,SAAd,CAAwBkF,SAAxB,GAAoC,UAAUvB,KAAV,EAAiB;AACjD;AACA;AACA,YAAI8I,SAASzO,SAAS0O,sBAAT,CAAgC,KAAKpJ,WAAL,CAAiB+I,QAAjD,CAAb;;AACA,aAAK,IAAItP,IAAI,CAAb,EAAgBA,IAAI0P,OAAOzP,MAA3B,EAAmCD,GAAnC,EAAwC;AACpC,gBAAI4P,SAASF,OAAO1P,CAAP,EAAUgJ,aAAV,CAAwB,MAAM,KAAKzC,WAAL,CAAiBgJ,SAA/C,CAAb,CADoC,CAEpC;;AACA,gBAAIK,OAAOvP,YAAP,CAAoB,MAApB,MAAgC,KAAKwP,WAAL,CAAiBxP,YAAjB,CAA8B,MAA9B,CAApC,EAA2E;AACvE,oBAAI,OAAOqP,OAAO1P,CAAP,EAAU,eAAV,CAAP,KAAsC,WAA1C,EAAuD;AACnD0P,2BAAO1P,CAAP,EAAU,eAAV,EAA2BoI,cAA3B;AACH;AACJ;AACJ;AACJ,KAbD,CA9pDa,CA4qDb;;;;;;;AAMAiH,kBAAcpM,SAAd,CAAwBoF,QAAxB,GAAmC,UAAUzB,KAAV,EAAiB;AAChD,aAAKvC,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiBwB,UAA7C;AACH,KAFD,CAlrDa,CAqrDb;;;;;;;AAMAsH,kBAAcpM,SAAd,CAAwBqF,OAAxB,GAAkC,UAAU1B,KAAV,EAAiB;AAC/C,aAAKvC,QAAL,CAAcrC,SAAd,CAAwBuG,MAAxB,CAA+B,KAAKhC,WAAL,CAAiBwB,UAAhD;AACH,KAFD,CA3rDa,CA8rDb;;;;;;;AAMAsH,kBAAcpM,SAAd,CAAwB6M,UAAxB,GAAqC,UAAUlJ,KAAV,EAAiB;AAClD,aAAK6B,KAAL;AACH,KAFD,CApsDa,CAusDb;;;;;;AAKA4G,kBAAcpM,SAAd,CAAwBmF,cAAxB,GAAyC,YAAY;AACjD,aAAKM,aAAL;AACA,aAAKC,gBAAL;AACH,KAHD,CA5sDa,CAgtDb;;;;;;AAKA0G,kBAAcpM,SAAd,CAAwBwF,KAAxB,GAAgC,YAAY;AACxC;AACA;AACA3H,eAAOoF,UAAP,CAAkB,YAAY;AAC1B,iBAAK2J,WAAL,CAAiBhJ,IAAjB;AACH,SAFiB,CAEhBQ,IAFgB,CAEX,IAFW,CAAlB,EAEc,KAAKf,SAAL,CAAekB,YAF7B;AAGH,KAND,CArtDa,CA4tDb;AACA;;;;;;AAKA6H,kBAAcpM,SAAd,CAAwByF,aAAxB,GAAwC,YAAY;AAChD,YAAI,KAAKmH,WAAL,CAAiB9I,QAArB,EAA+B;AAC3B,iBAAK1C,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiByB,WAA7C;AACH,SAFD,MAEO;AACH,iBAAK3D,QAAL,CAAcrC,SAAd,CAAwBuG,MAAxB,CAA+B,KAAKhC,WAAL,CAAiByB,WAAhD;AACH;AACJ,KAND;;AAOAqH,kBAAcpM,SAAd,CAAwB,eAAxB,IAA2CoM,cAAcpM,SAAd,CAAwByF,aAAnE,CAzuDa,CA0uDb;;;;;;AAKA2G,kBAAcpM,SAAd,CAAwB0F,gBAAxB,GAA2C,YAAY;AACnD,YAAI,KAAKkH,WAAL,CAAiBhH,OAArB,EAA8B;AAC1B,iBAAKxE,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiB0B,UAA7C;AACH,SAFD,MAEO;AACH,iBAAK5D,QAAL,CAAcrC,SAAd,CAAwBuG,MAAxB,CAA+B,KAAKhC,WAAL,CAAiB0B,UAAhD;AACH;AACJ,KAND;;AAOAoH,kBAAcpM,SAAd,CAAwB,kBAAxB,IAA8CoM,cAAcpM,SAAd,CAAwB0F,gBAAtE,CAtvDa,CAuvDb;;;;;;AAKA0G,kBAAcpM,SAAd,CAAwB6D,OAAxB,GAAkC,YAAY;AAC1C,aAAK+I,WAAL,CAAiB9I,QAAjB,GAA4B,IAA5B;AACA,aAAKqB,cAAL;AACH,KAHD;;AAIAiH,kBAAcpM,SAAd,CAAwB,SAAxB,IAAqCoM,cAAcpM,SAAd,CAAwB6D,OAA7D,CAhwDa,CAiwDb;;;;;;AAKAuI,kBAAcpM,SAAd,CAAwB+D,MAAxB,GAAiC,YAAY;AACzC,aAAK6I,WAAL,CAAiB9I,QAAjB,GAA4B,KAA5B;AACA,aAAKqB,cAAL;AACH,KAHD;;AAIAiH,kBAAcpM,SAAd,CAAwB,QAAxB,IAAoCoM,cAAcpM,SAAd,CAAwB+D,MAA5D,CA1wDa,CA2wDb;;;;;;AAKAqI,kBAAcpM,SAAd,CAAwB6F,KAAxB,GAAgC,YAAY;AACxC,aAAK+G,WAAL,CAAiBhH,OAAjB,GAA2B,IAA3B;AACA,aAAKV,SAAL,CAAe,IAAf;AACH,KAHD;;AAIAkH,kBAAcpM,SAAd,CAAwB,OAAxB,IAAmCoM,cAAcpM,SAAd,CAAwB6F,KAA3D,CApxDa,CAqxDb;;;;;;AAKAuG,kBAAcpM,SAAd,CAAwB8F,OAAxB,GAAkC,YAAY;AAC1C,aAAK8G,WAAL,CAAiBhH,OAAjB,GAA2B,KAA3B;AACA,aAAKV,SAAL,CAAe,IAAf;AACH,KAHD;;AAIAkH,kBAAcpM,SAAd,CAAwB,SAAxB,IAAqCoM,cAAcpM,SAAd,CAAwB8F,OAA7D,CA9xDa,CA+xDb;;;;AAGAsG,kBAAcpM,SAAd,CAAwBoD,IAAxB,GAA+B,YAAY;AACvC,YAAI,KAAKhC,QAAT,EAAmB;AACf,iBAAKwL,WAAL,GAAmB,KAAKxL,QAAL,CAAc2E,aAAd,CAA4B,MAAM,KAAKzC,WAAL,CAAiBgJ,SAAnD,CAAnB;AACA,iBAAKQ,mBAAL,GAA2B,KAAK5H,SAAL,CAAed,IAAf,CAAoB,IAApB,CAA3B;AACA,iBAAK2I,kBAAL,GAA0B,KAAK7H,SAAL,CAAed,IAAf,CAAoB,IAApB,CAA1B;AACA,iBAAK4I,iBAAL,GAAyB,KAAK3H,OAAL,CAAajB,IAAb,CAAkB,IAAlB,CAAzB;AACA,iBAAK6I,oBAAL,GAA4B,KAAKJ,UAAL,CAAgBzI,IAAhB,CAAqB,IAArB,CAA5B;AACA,gBAAI8I,cAAclP,SAASgE,aAAT,CAAuB,MAAvB,CAAlB;AACAkL,wBAAYnO,SAAZ,CAAsBmD,GAAtB,CAA0B,KAAKoB,WAAL,CAAiBiJ,kBAA3C;AACA,gBAAIY,cAAcnP,SAASgE,aAAT,CAAuB,MAAvB,CAAlB;AACAmL,wBAAYpO,SAAZ,CAAsBmD,GAAtB,CAA0B,KAAKoB,WAAL,CAAiBkJ,kBAA3C;AACA,iBAAKpL,QAAL,CAAc8C,WAAd,CAA0BgJ,WAA1B;AACA,iBAAK9L,QAAL,CAAc8C,WAAd,CAA0BiJ,WAA1B;AACA,gBAAInJ,eAAJ;;AACA,gBAAI,KAAK5C,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiBC,aAAlD,CAAJ,EAAsE;AAClE,qBAAKnC,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiBsB,oBAA7C;AACAZ,kCAAkBhG,SAASgE,aAAT,CAAuB,MAAvB,CAAlB;AACAgC,gCAAgBjF,SAAhB,CAA0BmD,GAA1B,CAA8B,KAAKoB,WAAL,CAAiBE,gBAA/C;AACAQ,gCAAgBjF,SAAhB,CAA0BmD,GAA1B,CAA8B,KAAKoB,WAAL,CAAiBC,aAA/C;AACAS,gCAAgBjF,SAAhB,CAA0BmD,GAA1B,CAA8B,KAAKoB,WAAL,CAAiBuB,aAA/C;AACAb,gCAAgBjC,gBAAhB,CAAiC,SAAjC,EAA4C,KAAKkL,oBAAjD;AACA,oBAAI5G,SAASrI,SAASgE,aAAT,CAAuB,MAAvB,CAAb;AACAqE,uBAAOtH,SAAP,CAAiBmD,GAAjB,CAAqB,KAAKoB,WAAL,CAAiBG,MAAtC;AACAO,gCAAgBE,WAAhB,CAA4BmC,MAA5B;AACA,qBAAKjF,QAAL,CAAc8C,WAAd,CAA0BF,eAA1B;AACH;;AACD,iBAAK4I,WAAL,CAAiB7K,gBAAjB,CAAkC,QAAlC,EAA4C,KAAK+K,mBAAjD;AACA,iBAAKF,WAAL,CAAiB7K,gBAAjB,CAAkC,OAAlC,EAA2C,KAAKgL,kBAAhD;AACA,iBAAKH,WAAL,CAAiB7K,gBAAjB,CAAkC,MAAlC,EAA0C,KAAKiL,iBAA/C;AACA,iBAAK5L,QAAL,CAAcW,gBAAd,CAA+B,SAA/B,EAA0C,KAAKkL,oBAA/C;AACA,iBAAK9H,cAAL;AACA,iBAAK/D,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiB2B,WAA7C;AACH;AACJ,KAjCD,CAlyDa,CAo0Db;AACA;;;AACAxJ,qBAAiBY,QAAjB,CAA0B;AACtBmE,qBAAa4L,aADS;AAEtB3L,uBAAe,eAFO;AAGtBrC,kBAAU,cAHY;AAItBuB,gBAAQ;AAJc,KAA1B,EAt0Da,CA40Db;;;;;;;;;;;;;;;WA50Da,CA41Db;;;;;;;;;AAQA,QAAIyN;AAAiB,iBAASA,cAAT,CAAwBtR,OAAxB,EAAiC;AAClD,iBAAKsF,QAAL,GAAgBtF,OAAhB,CADkD,CAElD;;AACA,iBAAKuR,KAAL,GAAaxP,OAAO8E,SAAP,CAAiB2K,gBAA9B,CAHkD,CAIlD;;AACA,iBAAKlK,IAAL;AACH;;AANG,eAA0BgK,cAA1B;AAAA,OAAJ;;AAOAvP,WAAO,gBAAP,IAA2BuP,cAA3B,CA32Da,CA42Db;;;;;;AAMAA,mBAAepN,SAAf,CAAyBqD,SAAzB,GAAqC,EAArC,CAl3Da,CAm3Db;;;;;;;;AAQA+J,mBAAepN,SAAf,CAAyBsD,WAAzB,GAAuC;AACnCiK,sBAAc,0BADqB;AAEnCC,0BAAkB,uBAFiB;AAGnCC,yBAAiB,6BAHkB;AAInCC,0BAAkB,8BAJiB;AAKnCC,0BAAkB,8BALiB;AAMnCC,yBAAiB,iBANkB;AAOnC3I,qBAAa;AAPsB,KAAvC,CA33Da,CAo4Db;;;;;;;AAMAmI,mBAAepN,SAAf,CAAyB6N,QAAzB,GAAoC,UAAUlK,KAAV,EAAiB;AACjD,aAAKmK,kBAAL;AACH,KAFD,CA14Da,CA64Db;;;;;;;AAMAV,mBAAepN,SAAf,CAAyBkF,SAAzB,GAAqC,UAAUvB,KAAV,EAAiB;AAClD,aAAKmK,kBAAL;AACH,KAFD,CAn5Da,CAs5Db;;;;;;;AAMAV,mBAAepN,SAAf,CAAyBuF,UAAzB,GAAsC,UAAU5B,KAAV,EAAiB;AACnDA,cAAM2G,MAAN,CAAa1G,IAAb;AACH,KAFD,CA55Da,CA+5Db;;;;;;;;;;;AAUAwJ,mBAAepN,SAAf,CAAyB+N,qBAAzB,GAAiD,UAAUpK,KAAV,EAAiB;AAC9D;AACA;AACA,YAAIA,MAAM2G,MAAN,KAAiB,KAAKlJ,QAAL,CAAc+G,aAAnC,EAAkD;AAC9C;AACH,SAL6D,CAM9D;AACA;;;AACAxE,cAAMwG,cAAN;AACA,YAAI6D,WAAW,IAAIxD,UAAJ,CAAe,WAAf,EAA4B;AACvCF,oBAAQ3G,MAAM2G,MADyB;AAEvC2D,qBAAStK,MAAMsK,OAFwB;AAGvCC,qBAASvK,MAAMuK,OAHwB;AAIvCC,qBAAS,KAAK/M,QAAL,CAAcmI,qBAAd,GAAsC6E;AAJR,SAA5B,CAAf;AAMA,aAAKhN,QAAL,CAAcxC,aAAd,CAA4BoP,QAA5B;AACH,KAhBD,CAz6Da,CA07Db;;;;;;AAKAZ,mBAAepN,SAAf,CAAyB8N,kBAAzB,GAA8C,YAAY;AACtD;AACA,YAAIO,WAAW,CAAC,KAAKjN,QAAL,CAAckN,KAAd,GAAsB,KAAKlN,QAAL,CAAcmN,GAArC,KAA6C,KAAKnN,QAAL,CAAc4B,GAAd,GAAoB,KAAK5B,QAAL,CAAcmN,GAA/E,CAAf;;AACA,YAAIF,aAAa,CAAjB,EAAoB;AAChB,iBAAKjN,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiBsK,eAA7C;AACH,SAFD,MAEO;AACH,iBAAKxM,QAAL,CAAcrC,SAAd,CAAwBuG,MAAxB,CAA+B,KAAKhC,WAAL,CAAiBsK,eAAhD;AACH;;AACD,YAAI,CAAC,KAAKP,KAAV,EAAiB;AACb,iBAAKmB,gBAAL,CAAsB/E,KAAtB,CAA4BgF,IAA5B,GAAmCJ,QAAnC;AACA,iBAAKG,gBAAL,CAAsB/E,KAAtB,CAA4BiF,UAA5B,GAAyCL,QAAzC;AACA,iBAAKM,gBAAL,CAAsBlF,KAAtB,CAA4BgF,IAA5B,GAAmC,IAAIJ,QAAvC;AACA,iBAAKM,gBAAL,CAAsBlF,KAAtB,CAA4BiF,UAA5B,GAAyC,IAAIL,QAA7C;AACH;AACJ,KAdD,CA/7Da,CA88Db;AACA;;;;;;AAKAjB,mBAAepN,SAAf,CAAyB6D,OAAzB,GAAmC,YAAY;AAC3C,aAAKzC,QAAL,CAAc0C,QAAd,GAAyB,IAAzB;AACH,KAFD;;AAGAsJ,mBAAepN,SAAf,CAAyB,SAAzB,IAAsCoN,eAAepN,SAAf,CAAyB6D,OAA/D,CAv9Da,CAw9Db;;;;;;AAKAuJ,mBAAepN,SAAf,CAAyB+D,MAAzB,GAAkC,YAAY;AAC1C,aAAK3C,QAAL,CAAc0C,QAAd,GAAyB,KAAzB;AACH,KAFD;;AAGAsJ,mBAAepN,SAAf,CAAyB,QAAzB,IAAqCoN,eAAepN,SAAf,CAAyB+D,MAA9D,CAh+Da,CAi+Db;;;;;;;AAMAqJ,mBAAepN,SAAf,CAAyB4O,MAAzB,GAAkC,UAAUN,KAAV,EAAiB;AAC/C,YAAI,OAAOA,KAAP,KAAiB,WAArB,EAAkC;AAC9B,iBAAKlN,QAAL,CAAckN,KAAd,GAAsBA,KAAtB;AACH;;AACD,aAAKR,kBAAL;AACH,KALD;;AAMAV,mBAAepN,SAAf,CAAyB,QAAzB,IAAqCoN,eAAepN,SAAf,CAAyB4O,MAA9D,CA7+Da,CA8+Db;;;;AAGAxB,mBAAepN,SAAf,CAAyBoD,IAAzB,GAAgC,YAAY;AACxC,YAAI,KAAKhC,QAAT,EAAmB;AACf,gBAAI,KAAKiM,KAAT,EAAgB;AACZ;AACA;AACA;AACA,oBAAIwB,cAAc7Q,SAASgE,aAAT,CAAuB,KAAvB,CAAlB;AACA6M,4BAAY9P,SAAZ,CAAsBmD,GAAtB,CAA0B,KAAKoB,WAAL,CAAiBiK,YAA3C;AACA,qBAAKnM,QAAL,CAAc+G,aAAd,CAA4BC,YAA5B,CAAyCyG,WAAzC,EAAsD,KAAKzN,QAA3D;AACA,qBAAKA,QAAL,CAAc+G,aAAd,CAA4BE,WAA5B,CAAwC,KAAKjH,QAA7C;AACAyN,4BAAY3K,WAAZ,CAAwB,KAAK9C,QAA7B;AACH,aATD,MASO;AACH;AACA;AACA;AACA,oBAAI8G,YAAYlK,SAASgE,aAAT,CAAuB,KAAvB,CAAhB;AACAkG,0BAAUnJ,SAAV,CAAoBmD,GAApB,CAAwB,KAAKoB,WAAL,CAAiBkK,gBAAzC;AACA,qBAAKpM,QAAL,CAAc+G,aAAd,CAA4BC,YAA5B,CAAyCF,SAAzC,EAAoD,KAAK9G,QAAzD;AACA,qBAAKA,QAAL,CAAc+G,aAAd,CAA4BE,WAA5B,CAAwC,KAAKjH,QAA7C;AACA8G,0BAAUhE,WAAV,CAAsB,KAAK9C,QAA3B;AACA,oBAAI0N,iBAAiB9Q,SAASgE,aAAT,CAAuB,KAAvB,CAArB;AACA8M,+BAAe/P,SAAf,CAAyBmD,GAAzB,CAA6B,KAAKoB,WAAL,CAAiBmK,eAA9C;AACAvF,0BAAUhE,WAAV,CAAsB4K,cAAtB;AACA,qBAAKN,gBAAL,GAAwBxQ,SAASgE,aAAT,CAAuB,KAAvB,CAAxB;AACA,qBAAKwM,gBAAL,CAAsBzP,SAAtB,CAAgCmD,GAAhC,CAAoC,KAAKoB,WAAL,CAAiBoK,gBAArD;AACAoB,+BAAe5K,WAAf,CAA2B,KAAKsK,gBAAhC;AACA,qBAAKG,gBAAL,GAAwB3Q,SAASgE,aAAT,CAAuB,KAAvB,CAAxB;AACA,qBAAK2M,gBAAL,CAAsB5P,SAAtB,CAAgCmD,GAAhC,CAAoC,KAAKoB,WAAL,CAAiBqK,gBAArD;AACAmB,+BAAe5K,WAAf,CAA2B,KAAKyK,gBAAhC;AACH;;AACD,iBAAKI,iBAAL,GAAyB,KAAKlB,QAAL,CAAczJ,IAAd,CAAmB,IAAnB,CAAzB;AACA,iBAAK4K,kBAAL,GAA0B,KAAK9J,SAAL,CAAed,IAAf,CAAoB,IAApB,CAA1B;AACA,iBAAK6K,mBAAL,GAA2B,KAAK1J,UAAL,CAAgBnB,IAAhB,CAAqB,IAArB,CAA3B;AACA,iBAAK8K,8BAAL,GAAsC,KAAKnB,qBAAL,CAA2B3J,IAA3B,CAAgC,IAAhC,CAAtC;AACA,iBAAKhD,QAAL,CAAcW,gBAAd,CAA+B,OAA/B,EAAwC,KAAKgN,iBAA7C;AACA,iBAAK3N,QAAL,CAAcW,gBAAd,CAA+B,QAA/B,EAAyC,KAAKiN,kBAA9C;AACA,iBAAK5N,QAAL,CAAcW,gBAAd,CAA+B,SAA/B,EAA0C,KAAKkN,mBAA/C;AACA,iBAAK7N,QAAL,CAAc+G,aAAd,CAA4BpG,gBAA5B,CAA6C,WAA7C,EAA0D,KAAKmN,8BAA/D;AACA,iBAAKpB,kBAAL;AACA,iBAAK1M,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiB2B,WAA7C;AACH;AACJ,KAzCD,CAj/Da,CA2hEb;AACA;;;AACAxJ,qBAAiBY,QAAjB,CAA0B;AACtBmE,qBAAa4M,cADS;AAEtB3M,uBAAe,gBAFO;AAGtBrC,kBAAU,eAHY;AAItBuB,gBAAQ;AAJc,KAA1B,EA7hEa,CAmiEb;;;;;;;;;;;;;;WAniEa,CAkjEb;;;;;;;;;AAQA,QAAIwP;AAAmB,iBAASA,gBAAT,CAA0BrT,OAA1B,EAAmC;AACtD,iBAAKsF,QAAL,GAAgBtF,OAAhB;AACA,iBAAKsT,YAAL,GAAoB,KAAKhO,QAAL,CAAc2E,aAAd,CAA4B,MAAM,KAAKsJ,WAAL,CAAiBC,OAAnD,CAApB;AACA,iBAAKC,cAAL,GAAsB,KAAKnO,QAAL,CAAc2E,aAAd,CAA4B,MAAM,KAAKsJ,WAAL,CAAiBG,MAAnD,CAAtB;;AACA,gBAAI,CAAC,KAAKJ,YAAV,EAAwB;AACpB,sBAAM,IAAI1Q,KAAJ,CAAU,iDAAV,CAAN;AACH;;AACD,gBAAI,CAAC,KAAK6Q,cAAV,EAA0B;AACtB,sBAAM,IAAI7Q,KAAJ,CAAU,iDAAV,CAAN;AACH;;AACD,iBAAK+Q,MAAL,GAAc,KAAd;AACA,iBAAKC,cAAL,GAAsBC,SAAtB;AACA,iBAAKC,QAAL,GAAgBD,SAAhB;AACA,iBAAKE,WAAL,GAAmBF,SAAnB;AACA,iBAAKG,oBAAL,GAA4B,EAA5B;AACA,iBAAKC,gBAAL,CAAsB,IAAtB;AACH;;AAhBG,eAA4BZ,gBAA5B;AAAA,OAAJ;;AAiBAtR,WAAO,kBAAP,IAA6BsR,gBAA7B,CA3kEa,CA4kEb;;;;;;AAMAA,qBAAiBnP,SAAjB,CAA2BqD,SAA3B,GAAuC;AACnC;AACA2M,0BAAkB;AAFiB,KAAvC,CAllEa,CAslEb;;;;;;;;AAQAb,qBAAiBnP,SAAjB,CAA2BqP,WAA3B,GAAyC;AACrCY,kBAAU,cAD2B;AAErCX,iBAAS,oBAF4B;AAGrCE,gBAAQ,sBAH6B;AAIrCU,gBAAQ;AAJ6B,KAAzC,CA9lEa,CAomEb;;;;;;AAKAf,qBAAiBnP,SAAjB,CAA2BmQ,gBAA3B,GAA8C,YAAY;AACtD,aAAK/O,QAAL,CAAchC,YAAd,CAA2B,aAA3B,EAA0C,MAA1C;;AACA,YAAI,KAAKsQ,cAAT,EAAyB;AACrB,iBAAKH,cAAL,CAAoBa,WAApB,GAAkC,KAAKP,WAAvC;AACA,iBAAKN,cAAL,CAAoBxN,gBAApB,CAAqC,OAArC,EAA8C,KAAK2N,cAAnD;AACA,iBAAKK,gBAAL,CAAsB,KAAtB;AACH;;AACD,aAAKX,YAAL,CAAkBgB,WAAlB,GAAgC,KAAKR,QAArC;AACA,aAAKxO,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKmN,WAAL,CAAiBa,MAA7C;AACA,aAAK9O,QAAL,CAAchC,YAAd,CAA2B,aAA3B,EAA0C,OAA1C;AACA6D,mBAAW,KAAKoN,QAAL,CAAcjM,IAAd,CAAmB,IAAnB,CAAX,EAAqC,KAAKkM,QAA1C;AACH,KAXD,CAzmEa,CAqnEb;;;;;;;AAMAnB,qBAAiBnP,SAAjB,CAA2BuQ,YAA3B,GAA0C,UAAUC,IAAV,EAAgB;AACtD,YAAIA,SAASb,SAAb,EAAwB;AACpB,kBAAM,IAAIjR,KAAJ,CAAU,kEAAV,CAAN;AACH;;AACD,YAAI8R,KAAK,SAAL,MAAoBb,SAAxB,EAAmC;AAC/B,kBAAM,IAAIjR,KAAJ,CAAU,2CAAV,CAAN;AACH;;AACD,YAAI8R,KAAK,eAAL,KAAyB,CAACA,KAAK,YAAL,CAA9B,EAAkD;AAC9C,kBAAM,IAAI9R,KAAJ,CAAU,8CAAV,CAAN;AACH;;AACD,YAAI,KAAK+Q,MAAT,EAAiB;AACb,iBAAKK,oBAAL,CAA0B3Q,IAA1B,CAA+BqR,IAA/B;AACH,SAFD,MAEO;AACH,iBAAKf,MAAL,GAAc,IAAd;AACA,iBAAKG,QAAL,GAAgBY,KAAK,SAAL,CAAhB;;AACA,gBAAIA,KAAK,SAAL,CAAJ,EAAqB;AACjB,qBAAKF,QAAL,GAAgBE,KAAK,SAAL,CAAhB;AACH,aAFD,MAEO;AACH,qBAAKF,QAAL,GAAgB,IAAhB;AACH;;AACD,gBAAIE,KAAK,eAAL,CAAJ,EAA2B;AACvB,qBAAKd,cAAL,GAAsBc,KAAK,eAAL,CAAtB;AACH;;AACD,gBAAIA,KAAK,YAAL,CAAJ,EAAwB;AACpB,qBAAKX,WAAL,GAAmBW,KAAK,YAAL,CAAnB;AACH;;AACD,iBAAKL,gBAAL;AACH;AACJ,KA5BD;;AA6BAhB,qBAAiBnP,SAAjB,CAA2B,cAA3B,IAA6CmP,iBAAiBnP,SAAjB,CAA2BuQ,YAAxE,CAxpEa,CAypEb;;;;;;;AAMApB,qBAAiBnP,SAAjB,CAA2ByQ,WAA3B,GAAyC,YAAY;AACjD,YAAI,KAAKX,oBAAL,CAA0B9S,MAA1B,GAAmC,CAAvC,EAA0C;AACtC,iBAAKuT,YAAL,CAAkB,KAAKT,oBAAL,CAA0BY,KAA1B,EAAlB;AACH;AACJ,KAJD,CA/pEa,CAoqEb;;;;;;AAKAvB,qBAAiBnP,SAAjB,CAA2BqQ,QAA3B,GAAsC,YAAY;AAC9C,aAAKjP,QAAL,CAAcrC,SAAd,CAAwBuG,MAAxB,CAA+B,KAAK+J,WAAL,CAAiBa,MAAhD;AACAjN,mBAAW,YAAY;AACnB,iBAAK7B,QAAL,CAAchC,YAAd,CAA2B,aAA3B,EAA0C,MAA1C;AACA,iBAAKgQ,YAAL,CAAkBgB,WAAlB,GAAgC,EAAhC;;AACA,gBAAI,CAACO,QAAQ,KAAKpB,cAAL,CAAoBnS,YAApB,CAAiC,aAAjC,CAAR,CAAL,EAA+D;AAC3D,qBAAK2S,gBAAL,CAAsB,IAAtB;AACA,qBAAKR,cAAL,CAAoBa,WAApB,GAAkC,EAAlC;AACA,qBAAKb,cAAL,CAAoB9D,mBAApB,CAAwC,OAAxC,EAAiD,KAAKiE,cAAtD;AACH;;AACD,iBAAKA,cAAL,GAAsBC,SAAtB;AACA,iBAAKC,QAAL,GAAgBD,SAAhB;AACA,iBAAKE,WAAL,GAAmBF,SAAnB;AACA,iBAAKF,MAAL,GAAc,KAAd;AACA,iBAAKgB,WAAL;AACH,SAbU,CAaTrM,IAbS,CAaJ,IAbI,CAAX,EAac,KAAKf,SAAL,CAAe2M,gBAb7B;AAcH,KAhBD,CAzqEa,CA0rEb;;;;;;;AAMAb,qBAAiBnP,SAAjB,CAA2B+P,gBAA3B,GAA8C,UAAUzB,KAAV,EAAiB;AAC3D,YAAIA,KAAJ,EAAW;AACP,iBAAKiB,cAAL,CAAoBnQ,YAApB,CAAiC,aAAjC,EAAgD,MAAhD;AACH,SAFD,MAEO;AACH,iBAAKmQ,cAAL,CAAoBqB,eAApB,CAAoC,aAApC;AACH;AACJ,KAND,CAhsEa,CAusEb;AACA;;;AACAnV,qBAAiBY,QAAjB,CAA0B;AACtBmE,qBAAa2O,gBADS;AAEtB1O,uBAAe,kBAFO;AAGtBrC,kBAAU,iBAHY;AAItBuB,gBAAQ;AAJc,KAA1B,EAzsEa,CA+sEb;;;;;;;;;;;;;;;WA/sEa,CA+tEb;;;;;;;;;AAQA,QAAIkR;AAAkB,iBAASA,eAAT,CAAyB/U,OAAzB,EAAkC;AACpD,iBAAKsF,QAAL,GAAgBtF,OAAhB,CADoD,CAEpD;;AACA,iBAAKsH,IAAL;AACH;;AAJG,eAA2ByN,eAA3B;AAAA,OAAJ;;AAKAhT,WAAO,iBAAP,IAA4BgT,eAA5B,CA5uEa,CA6uEb;;;;;;AAMAA,oBAAgB7Q,SAAhB,CAA0BqD,SAA1B,GAAsC;AAAEyN,iCAAyB;AAA3B,KAAtC,CAnvEa,CAovEb;;;;;;;;AAQAD,oBAAgB7Q,SAAhB,CAA0BsD,WAA1B,GAAwC;AACpCyN,2BAAmB,oBADiB;AAEpCC,oCAA4B,6BAFQ;AAGpCC,4BAAoB,qBAHgB;AAIpCC,+BAAuB,wBAJa;AAKpCC,0BAAkB,mBALkB;AAMpCC,2BAAmB;AANiB,KAAxC,CA5vEa,CAowEb;;;;;;;AAMAP,oBAAgB7Q,SAAhB,CAA0BqR,WAA1B,GAAwC,UAAUC,KAAV,EAAiB;AACrD,YAAIC,QAAQvT,SAASgE,aAAT,CAAuB,KAAvB,CAAZ;AACAuP,cAAMxS,SAAN,CAAgBmD,GAAhB,CAAoB,KAAKoB,WAAL,CAAiByN,iBAArC;AACAQ,cAAMxS,SAAN,CAAgBmD,GAAhB,CAAoB,KAAKoB,WAAL,CAAiByN,iBAAjB,GAAqC,GAArC,GAA2CO,KAA/D;AACA,YAAIE,cAAcxT,SAASgE,aAAT,CAAuB,KAAvB,CAAlB;AACAwP,oBAAYzS,SAAZ,CAAsBmD,GAAtB,CAA0B,KAAKoB,WAAL,CAAiB0N,0BAA3C;AACAQ,oBAAYzS,SAAZ,CAAsBmD,GAAtB,CAA0B,KAAKoB,WAAL,CAAiB6N,gBAA3C;AACA,YAAIM,WAAWzT,SAASgE,aAAT,CAAuB,KAAvB,CAAf;AACAyP,iBAAS1S,SAAT,CAAmBmD,GAAnB,CAAuB,KAAKoB,WAAL,CAAiB4N,qBAAxC;AACA,YAAIQ,eAAe1T,SAASgE,aAAT,CAAuB,KAAvB,CAAnB;AACA0P,qBAAa3S,SAAb,CAAuBmD,GAAvB,CAA2B,KAAKoB,WAAL,CAAiB0N,0BAA5C;AACAU,qBAAa3S,SAAb,CAAuBmD,GAAvB,CAA2B,KAAKoB,WAAL,CAAiB8N,iBAA5C;AACA,YAAIO,eAAe,CACfH,WADe,EAEfC,QAFe,EAGfC,YAHe,CAAnB;;AAKA,aAAK,IAAI3U,IAAI,CAAb,EAAgBA,IAAI4U,aAAa3U,MAAjC,EAAyCD,GAAzC,EAA8C;AAC1C,gBAAI6U,SAAS5T,SAASgE,aAAT,CAAuB,KAAvB,CAAb;AACA4P,mBAAO7S,SAAP,CAAiBmD,GAAjB,CAAqB,KAAKoB,WAAL,CAAiB2N,kBAAtC;AACAU,yBAAa5U,CAAb,EAAgBmH,WAAhB,CAA4B0N,MAA5B;AACH;;AACDL,cAAMrN,WAAN,CAAkBsN,WAAlB;AACAD,cAAMrN,WAAN,CAAkBuN,QAAlB;AACAF,cAAMrN,WAAN,CAAkBwN,YAAlB;AACA,aAAKtQ,QAAL,CAAc8C,WAAd,CAA0BqN,KAA1B;AACH,KA1BD;;AA2BAV,oBAAgB7Q,SAAhB,CAA0B,aAA1B,IAA2C6Q,gBAAgB7Q,SAAhB,CAA0BqR,WAArE,CAryEa,CAsyEb;;;;;;;AAMAR,oBAAgB7Q,SAAhB,CAA0B6R,IAA1B,GAAiC,YAAY;AACzC,aAAKzQ,QAAL,CAAcrC,SAAd,CAAwBuG,MAAxB,CAA+B,WAA/B;AACH,KAFD;;AAGAuL,oBAAgB7Q,SAAhB,CAA0B,MAA1B,IAAoC6Q,gBAAgB7Q,SAAhB,CAA0B6R,IAA9D,CA/yEa,CAgzEb;;;;;;;;AAOAhB,oBAAgB7Q,SAAhB,CAA0B8R,KAA1B,GAAkC,YAAY;AAC1C,aAAK1Q,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,WAA5B;AACH,KAFD;;AAGA2O,oBAAgB7Q,SAAhB,CAA0B,OAA1B,IAAqC6Q,gBAAgB7Q,SAAhB,CAA0B8R,KAA/D,CA1zEa,CA2zEb;;;;AAGAjB,oBAAgB7Q,SAAhB,CAA0BoD,IAA1B,GAAiC,YAAY;AACzC,YAAI,KAAKhC,QAAT,EAAmB;AACf,iBAAK,IAAIrE,IAAI,CAAb,EAAgBA,KAAK,KAAKsG,SAAL,CAAeyN,uBAApC,EAA6D/T,GAA7D,EAAkE;AAC9D,qBAAKsU,WAAL,CAAiBtU,CAAjB;AACH;;AACD,iBAAKqE,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,aAA5B;AACH;AACJ,KAPD,CA9zEa,CAs0Eb;AACA;;;AACAzG,qBAAiBY,QAAjB,CAA0B;AACtBmE,qBAAaqQ,eADS;AAEtBpQ,uBAAe,iBAFO;AAGtBrC,kBAAU,gBAHY;AAItBuB,gBAAQ;AAJc,KAA1B,EAx0Ea,CA80Eb;;;;;;;;;;;;;;;WA90Ea,CA81Eb;;;;;;;;;AAQA,QAAIoS;AAAiB,iBAASA,cAAT,CAAwBjW,OAAxB,EAAiC;AAClD,iBAAKsF,QAAL,GAAgBtF,OAAhB,CADkD,CAElD;;AACA,iBAAKsH,IAAL;AACH;;AAJG,eAA0B2O,cAA1B;AAAA,OAAJ;;AAKAlU,WAAO,gBAAP,IAA2BkU,cAA3B,CA32Ea,CA42Eb;;;;;;AAMAA,mBAAe/R,SAAf,CAAyBqD,SAAzB,GAAqC;AAAEkB,sBAAc;AAAhB,KAArC,CAl3Ea,CAm3Eb;;;;;;;;AAQAwN,mBAAe/R,SAAf,CAAyBsD,WAAzB,GAAuC;AACnCkB,eAAO,mBAD4B;AAEnCwN,eAAO,mBAF4B;AAGnCC,eAAO,mBAH4B;AAInCvN,sBAAc,0BAJqB;AAKnCnB,uBAAe,sBALoB;AAMnCqB,8BAAsB,qCANa;AAOnCpB,0BAAkB,8BAPiB;AAQnCqB,uBAAe,oBARoB;AASnCpB,gBAAQ,YAT2B;AAUnCqB,oBAAY,YAVuB;AAWnCC,qBAAa,aAXsB;AAYnCC,oBAAY;AAZuB,KAAvC,CA33Ea,CAy4Eb;;;;;;;AAMA+M,mBAAe/R,SAAf,CAAyBkF,SAAzB,GAAqC,UAAUvB,KAAV,EAAiB;AAClD,aAAKwB,cAAL;AACH,KAFD,CA/4Ea,CAk5Eb;;;;;;;AAMA4M,mBAAe/R,SAAf,CAAyBoF,QAAzB,GAAoC,UAAUzB,KAAV,EAAiB;AACjD,aAAKvC,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiBwB,UAA7C;AACH,KAFD,CAx5Ea,CA25Eb;;;;;;;AAMAiN,mBAAe/R,SAAf,CAAyBqF,OAAzB,GAAmC,UAAU1B,KAAV,EAAiB;AAChD,aAAKvC,QAAL,CAAcrC,SAAd,CAAwBuG,MAAxB,CAA+B,KAAKhC,WAAL,CAAiBwB,UAAhD;AACH,KAFD,CAj6Ea,CAo6Eb;;;;;;;AAMAiN,mBAAe/R,SAAf,CAAyBuF,UAAzB,GAAsC,UAAU5B,KAAV,EAAiB;AACnD,aAAK6B,KAAL;AACH,KAFD,CA16Ea,CA66Eb;;;;;;AAKAuM,mBAAe/R,SAAf,CAAyBmF,cAAzB,GAA0C,YAAY;AAClD,aAAKM,aAAL;AACA,aAAKC,gBAAL;AACH,KAHD,CAl7Ea,CAs7Eb;;;;;;AAKAqM,mBAAe/R,SAAf,CAAyBwF,KAAzB,GAAiC,YAAY;AACzC;AACA;AACA3H,eAAOoF,UAAP,CAAkB,YAAY;AAC1B,iBAAK0C,aAAL,CAAmB/B,IAAnB;AACH,SAFiB,CAEhBQ,IAFgB,CAEX,IAFW,CAAlB,EAEc,KAAKf,SAAL,CAAekB,YAF7B;AAGH,KAND,CA37Ea,CAk8Eb;AACA;;;;;;AAKAwN,mBAAe/R,SAAf,CAAyByF,aAAzB,GAAyC,YAAY;AACjD,YAAI,KAAKE,aAAL,CAAmB7B,QAAvB,EAAiC;AAC7B,iBAAK1C,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiByB,WAA7C;AACH,SAFD,MAEO;AACH,iBAAK3D,QAAL,CAAcrC,SAAd,CAAwBuG,MAAxB,CAA+B,KAAKhC,WAAL,CAAiByB,WAAhD;AACH;AACJ,KAND;;AAOAgN,mBAAe/R,SAAf,CAAyB,eAAzB,IAA4C+R,eAAe/R,SAAf,CAAyByF,aAArE,CA/8Ea,CAg9Eb;;;;;;AAKAsM,mBAAe/R,SAAf,CAAyB0F,gBAAzB,GAA4C,YAAY;AACpD,YAAI,KAAKC,aAAL,CAAmBC,OAAvB,EAAgC;AAC5B,iBAAKxE,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiB0B,UAA7C;AACH,SAFD,MAEO;AACH,iBAAK5D,QAAL,CAAcrC,SAAd,CAAwBuG,MAAxB,CAA+B,KAAKhC,WAAL,CAAiB0B,UAAhD;AACH;AACJ,KAND;;AAOA+M,mBAAe/R,SAAf,CAAyB,kBAAzB,IAA+C+R,eAAe/R,SAAf,CAAyB0F,gBAAxE,CA59Ea,CA69Eb;;;;;;AAKAqM,mBAAe/R,SAAf,CAAyB6D,OAAzB,GAAmC,YAAY;AAC3C,aAAK8B,aAAL,CAAmB7B,QAAnB,GAA8B,IAA9B;AACA,aAAKqB,cAAL;AACH,KAHD;;AAIA4M,mBAAe/R,SAAf,CAAyB,SAAzB,IAAsC+R,eAAe/R,SAAf,CAAyB6D,OAA/D,CAt+Ea,CAu+Eb;;;;;;AAKAkO,mBAAe/R,SAAf,CAAyB+D,MAAzB,GAAkC,YAAY;AAC1C,aAAK4B,aAAL,CAAmB7B,QAAnB,GAA8B,KAA9B;AACA,aAAKqB,cAAL;AACH,KAHD;;AAIA4M,mBAAe/R,SAAf,CAAyB,QAAzB,IAAqC+R,eAAe/R,SAAf,CAAyB+D,MAA9D,CAh/Ea,CAi/Eb;;;;;;AAKAgO,mBAAe/R,SAAf,CAAyBkS,EAAzB,GAA8B,YAAY;AACtC,aAAKvM,aAAL,CAAmBC,OAAnB,GAA6B,IAA7B;AACA,aAAKT,cAAL;AACH,KAHD;;AAIA4M,mBAAe/R,SAAf,CAAyB,IAAzB,IAAiC+R,eAAe/R,SAAf,CAAyBkS,EAA1D,CA1/Ea,CA2/Eb;;;;;;AAKAH,mBAAe/R,SAAf,CAAyBmS,GAAzB,GAA+B,YAAY;AACvC,aAAKxM,aAAL,CAAmBC,OAAnB,GAA6B,KAA7B;AACA,aAAKT,cAAL;AACH,KAHD;;AAIA4M,mBAAe/R,SAAf,CAAyB,KAAzB,IAAkC+R,eAAe/R,SAAf,CAAyBmS,GAA3D,CApgFa,CAqgFb;;;;AAGAJ,mBAAe/R,SAAf,CAAyBoD,IAAzB,GAAgC,YAAY;AACxC,YAAI,KAAKhC,QAAT,EAAmB;AACf,iBAAKuE,aAAL,GAAqB,KAAKvE,QAAL,CAAc2E,aAAd,CAA4B,MAAM,KAAKzC,WAAL,CAAiBkB,KAAnD,CAArB;AACA,gBAAI4N,QAAQpU,SAASgE,aAAT,CAAuB,KAAvB,CAAZ;AACAoQ,kBAAMrT,SAAN,CAAgBmD,GAAhB,CAAoB,KAAKoB,WAAL,CAAiB0O,KAArC;AACA,gBAAIK,QAAQrU,SAASgE,aAAT,CAAuB,KAAvB,CAAZ;AACAqQ,kBAAMtT,SAAN,CAAgBmD,GAAhB,CAAoB,KAAKoB,WAAL,CAAiB2O,KAArC;AACA,gBAAIK,cAActU,SAASgE,aAAT,CAAuB,MAAvB,CAAlB;AACAsQ,wBAAYvT,SAAZ,CAAsBmD,GAAtB,CAA0B,KAAKoB,WAAL,CAAiBoB,YAA3C;AACA2N,kBAAMnO,WAAN,CAAkBoO,WAAlB;AACA,iBAAKlR,QAAL,CAAc8C,WAAd,CAA0BkO,KAA1B;AACA,iBAAKhR,QAAL,CAAc8C,WAAd,CAA0BmO,KAA1B;AACA,iBAAKpD,mBAAL,GAA2B,KAAK1J,UAAL,CAAgBnB,IAAhB,CAAqB,IAArB,CAA3B;;AACA,gBAAI,KAAKhD,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiBC,aAAlD,CAAJ,EAAsE;AAClE,qBAAKnC,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiBsB,oBAA7C;AACA,qBAAKuB,uBAAL,GAA+BnI,SAASgE,aAAT,CAAuB,MAAvB,CAA/B;AACA,qBAAKmE,uBAAL,CAA6BpH,SAA7B,CAAuCmD,GAAvC,CAA2C,KAAKoB,WAAL,CAAiBE,gBAA5D;AACA,qBAAK2C,uBAAL,CAA6BpH,SAA7B,CAAuCmD,GAAvC,CAA2C,KAAKoB,WAAL,CAAiBC,aAA5D;AACA,qBAAK4C,uBAAL,CAA6BpH,SAA7B,CAAuCmD,GAAvC,CAA2C,KAAKoB,WAAL,CAAiBuB,aAA5D;AACA,qBAAKsB,uBAAL,CAA6BpE,gBAA7B,CAA8C,SAA9C,EAAyD,KAAKkN,mBAA9D;AACA,oBAAI5I,SAASrI,SAASgE,aAAT,CAAuB,MAAvB,CAAb;AACAqE,uBAAOtH,SAAP,CAAiBmD,GAAjB,CAAqB,KAAKoB,WAAL,CAAiBG,MAAtC;AACA,qBAAK0C,uBAAL,CAA6BjC,WAA7B,CAAyCmC,MAAzC;AACA,qBAAKjF,QAAL,CAAc8C,WAAd,CAA0B,KAAKiC,uBAA/B;AACH;;AACD,iBAAK6I,kBAAL,GAA0B,KAAK9J,SAAL,CAAed,IAAf,CAAoB,IAApB,CAA1B;AACA,iBAAKmO,iBAAL,GAAyB,KAAKnN,QAAL,CAAchB,IAAd,CAAmB,IAAnB,CAAzB;AACA,iBAAKoO,gBAAL,GAAwB,KAAKnN,OAAL,CAAajB,IAAb,CAAkB,IAAlB,CAAxB;AACA,iBAAKuB,aAAL,CAAmB5D,gBAAnB,CAAoC,QAApC,EAA8C,KAAKiN,kBAAnD;AACA,iBAAKrJ,aAAL,CAAmB5D,gBAAnB,CAAoC,OAApC,EAA6C,KAAKwQ,iBAAlD;AACA,iBAAK5M,aAAL,CAAmB5D,gBAAnB,CAAoC,MAApC,EAA4C,KAAKyQ,gBAAjD;AACA,iBAAKpR,QAAL,CAAcW,gBAAd,CAA+B,SAA/B,EAA0C,KAAKkN,mBAA/C;AACA,iBAAK9J,cAAL;AACA,iBAAK/D,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,aAA5B;AACH;AACJ,KAnCD,CAxgFa,CA4iFb;AACA;;;AACAzG,qBAAiBY,QAAjB,CAA0B;AACtBmE,qBAAauR,cADS;AAEtBtR,uBAAe,gBAFO;AAGtBrC,kBAAU,eAHY;AAItBuB,gBAAQ;AAJc,KAA1B,EA9iFa,CAojFb;;;;;;;;;;;;;;;WApjFa,CAokFb;;;;;;;;;AAQA,QAAI8S;AAAe,iBAASA,YAAT,CAAsB3W,OAAtB,EAA+B;AAC9C;AACA,iBAAKsF,QAAL,GAAgBtF,OAAhB,CAF8C,CAG9C;;AACA,iBAAKsH,IAAL;AACH;;AALG,eAAwBqP,YAAxB;AAAA,OAAJ;;AAMA5U,WAAO,cAAP,IAAyB4U,YAAzB,CAllFa,CAmlFb;;;;;;AAMAA,iBAAazS,SAAb,CAAuBqD,SAAvB,GAAmC,EAAnC,CAzlFa,CA0lFb;;;;;;;;AAQAoP,iBAAazS,SAAb,CAAuBsD,WAAvB,GAAqC;AACjCoP,mBAAW,eADsB;AAEjCC,qBAAa,iBAFoB;AAGjCC,sBAAc,WAHmB;AAIjCC,wBAAgB,aAJiB;AAKjCC,8BAAsB,sBALW;AAMjCC,8BAAsB,4BANW;AAOjCC,oBAAY,YAPqB;AAQjCC,4CAAoC;AARH,KAArC,CAlmFa,CA4mFb;;;;;;AAKAR,iBAAazS,SAAb,CAAuBkT,SAAvB,GAAmC,YAAY;AAC3C,YAAI,KAAK9R,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiBwP,oBAAlD,CAAJ,EAA6E;AACzE,iBAAK1R,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiB2P,kCAA7C;AACH,SAH0C,CAI3C;;;AACA,aAAKE,KAAL,GAAa,KAAK/R,QAAL,CAAc9C,gBAAd,CAA+B,MAAM,KAAKgF,WAAL,CAAiBoP,SAAtD,CAAb;AACA,aAAKU,OAAL,GAAe,KAAKhS,QAAL,CAAc9C,gBAAd,CAA+B,MAAM,KAAKgF,WAAL,CAAiBqP,WAAtD,CAAf,CAN2C,CAO3C;;AACA,aAAK,IAAI5V,IAAI,CAAb,EAAgBA,IAAI,KAAKoW,KAAL,CAAWnW,MAA/B,EAAuCD,GAAvC,EAA4C;AACxC,gBAAIsW,WAAJ,CAAgB,KAAKF,KAAL,CAAWpW,CAAX,CAAhB,EAA+B,IAA/B;AACH;;AACD,aAAKqE,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiBuP,cAA7C;AACH,KAZD,CAjnFa,CA8nFb;;;;;;AAKAJ,iBAAazS,SAAb,CAAuBsT,cAAvB,GAAwC,YAAY;AAChD,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAKJ,KAAL,CAAWnW,MAA/B,EAAuCuW,GAAvC,EAA4C;AACxC,iBAAKJ,KAAL,CAAWI,CAAX,EAAcxU,SAAd,CAAwBuG,MAAxB,CAA+B,KAAKhC,WAAL,CAAiBsP,YAAhD;AACH;AACJ,KAJD,CAnoFa,CAwoFb;;;;;;AAKAH,iBAAazS,SAAb,CAAuBwT,gBAAvB,GAA0C,YAAY;AAClD,aAAK,IAAIhU,IAAI,CAAb,EAAgBA,IAAI,KAAK4T,OAAL,CAAapW,MAAjC,EAAyCwC,GAAzC,EAA8C;AAC1C,iBAAK4T,OAAL,CAAa5T,CAAb,EAAgBT,SAAhB,CAA0BuG,MAA1B,CAAiC,KAAKhC,WAAL,CAAiBsP,YAAlD;AACH;AACJ,KAJD,CA7oFa,CAkpFb;;;;AAGAH,iBAAazS,SAAb,CAAuBoD,IAAvB,GAA8B,YAAY;AACtC,YAAI,KAAKhC,QAAT,EAAmB;AACf,iBAAK8R,SAAL;AACH;AACJ,KAJD,CArpFa,CA0pFb;;;;;;;;AAOA,aAASG,WAAT,CAAqBI,GAArB,EAA0BC,GAA1B,EAA+B;AAC3B,YAAID,GAAJ,EAAS;AACL,gBAAIC,IAAItS,QAAJ,CAAarC,SAAb,CAAuBG,QAAvB,CAAgCwU,IAAIpQ,WAAJ,CAAgBwP,oBAAhD,CAAJ,EAA2E;AACvE,oBAAI9O,kBAAkBhG,SAASgE,aAAT,CAAuB,MAAvB,CAAtB;AACAgC,gCAAgBjF,SAAhB,CAA0BmD,GAA1B,CAA8BwR,IAAIpQ,WAAJ,CAAgByP,oBAA9C;AACA/O,gCAAgBjF,SAAhB,CAA0BmD,GAA1B,CAA8BwR,IAAIpQ,WAAJ,CAAgBwP,oBAA9C;AACA,oBAAIzM,SAASrI,SAASgE,aAAT,CAAuB,MAAvB,CAAb;AACAqE,uBAAOtH,SAAP,CAAiBmD,GAAjB,CAAqBwR,IAAIpQ,WAAJ,CAAgB0P,UAArC;AACAhP,gCAAgBE,WAAhB,CAA4BmC,MAA5B;AACAoN,oBAAIvP,WAAJ,CAAgBF,eAAhB;AACH;;AACDyP,gBAAI1R,gBAAJ,CAAqB,OAArB,EAA8B,UAAUwI,CAAV,EAAa;AACvC,oBAAIkJ,IAAIrW,YAAJ,CAAiB,MAAjB,EAAyBuW,MAAzB,CAAgC,CAAhC,MAAuC,GAA3C,EAAgD;AAC5CpJ,sBAAEJ,cAAF;AACA,wBAAIyJ,OAAOH,IAAIG,IAAJ,CAASvW,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAX;AACA,wBAAIwW,QAAQH,IAAItS,QAAJ,CAAa2E,aAAb,CAA2B,MAAM6N,IAAjC,CAAZ;AACAF,wBAAIJ,cAAJ;AACAI,wBAAIF,gBAAJ;AACAC,wBAAI1U,SAAJ,CAAcmD,GAAd,CAAkBwR,IAAIpQ,WAAJ,CAAgBsP,YAAlC;AACAiB,0BAAM9U,SAAN,CAAgBmD,GAAhB,CAAoBwR,IAAIpQ,WAAJ,CAAgBsP,YAApC;AACH;AACJ,aAVD;AAWH;AACJ,KAxrFY,CAyrFb;AACA;;;AACAnX,qBAAiBY,QAAjB,CAA0B;AACtBmE,qBAAaiS,YADS;AAEtBhS,uBAAe,cAFO;AAGtBrC,kBAAU;AAHY,KAA1B,EA3rFa,CAgsFb;;;;;;;;;;;;;;;WAhsFa,CAgtFb;;;;;;;;;AAQA,QAAI0V;AAAoB,iBAASA,iBAAT,CAA2BhY,OAA3B,EAAoC;AACxD,iBAAKsF,QAAL,GAAgBtF,OAAhB;AACA,iBAAKiY,OAAL,GAAe,KAAK1Q,SAAL,CAAe2Q,WAA9B,CAFwD,CAGxD;;AACA,iBAAK5Q,IAAL;AACH;;AALG,eAA6B0Q,iBAA7B;AAAA,OAAJ;;AAMAjW,WAAO,mBAAP,IAA8BiW,iBAA9B,CA9tFa,CA+tFb;;;;;;AAMAA,sBAAkB9T,SAAlB,CAA4BqD,SAA5B,GAAwC;AACpC2Q,qBAAa,CAAC,CADsB;AAEpCC,4BAAoB;AAFgB,KAAxC,CAruFa,CAyuFb;;;;;;;;AAQAH,sBAAkB9T,SAAlB,CAA4BsD,WAA5B,GAA0C;AACtC4Q,eAAO,sBAD+B;AAEtC1P,eAAO,sBAF+B;AAGtC2P,kBAAU,UAH4B;AAItCrP,oBAAY,YAJ0B;AAKtCC,qBAAa,aALyB;AAMtCqP,oBAAY,YAN0B;AAOtCnP,qBAAa,aAPyB;AAQtCoP,yBAAiB;AARqB,KAA1C,CAjvFa,CA2vFb;;;;;;;AAMAP,sBAAkB9T,SAAlB,CAA4BsU,UAA5B,GAAyC,UAAU3Q,KAAV,EAAiB;AACtD,YAAI4Q,kBAAkB5Q,MAAM2G,MAAN,CAAagE,KAAb,CAAmBjR,KAAnB,CAAyB,IAAzB,EAA+BL,MAArD;;AACA,YAAI2G,MAAMuG,OAAN,KAAkB,EAAtB,EAA0B;AACtB,gBAAIqK,mBAAmB,KAAKR,OAA5B,EAAqC;AACjCpQ,sBAAMwG,cAAN;AACH;AACJ;AACJ,KAPD,CAjwFa,CAywFb;;;;;;;AAMA2J,sBAAkB9T,SAAlB,CAA4BoF,QAA5B,GAAuC,UAAUzB,KAAV,EAAiB;AACpD,aAAKvC,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiBwB,UAA7C;AACH,KAFD,CA/wFa,CAkxFb;;;;;;;AAMAgP,sBAAkB9T,SAAlB,CAA4BqF,OAA5B,GAAsC,UAAU1B,KAAV,EAAiB;AACnD,aAAKvC,QAAL,CAAcrC,SAAd,CAAwBuG,MAAxB,CAA+B,KAAKhC,WAAL,CAAiBwB,UAAhD;AACH,KAFD,CAxxFa,CA2xFb;;;;;;;AAMAgP,sBAAkB9T,SAAlB,CAA4BwU,QAA5B,GAAuC,UAAU7Q,KAAV,EAAiB;AACpD,aAAKwB,cAAL;AACH,KAFD,CAjyFa,CAoyFb;;;;;;AAKA2O,sBAAkB9T,SAAlB,CAA4BmF,cAA5B,GAA6C,YAAY;AACrD,aAAKM,aAAL;AACA,aAAKgP,aAAL;AACA,aAAKC,UAAL;AACA,aAAKC,UAAL;AACH,KALD,CAzyFa,CA+yFb;AACA;;;;;;AAKAb,sBAAkB9T,SAAlB,CAA4ByF,aAA5B,GAA4C,YAAY;AACpD,YAAI,KAAKmP,MAAL,CAAY9Q,QAAhB,EAA0B;AACtB,iBAAK1C,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiByB,WAA7C;AACH,SAFD,MAEO;AACH,iBAAK3D,QAAL,CAAcrC,SAAd,CAAwBuG,MAAxB,CAA+B,KAAKhC,WAAL,CAAiByB,WAAhD;AACH;AACJ,KAND;;AAOA+O,sBAAkB9T,SAAlB,CAA4B,eAA5B,IAA+C8T,kBAAkB9T,SAAlB,CAA4ByF,aAA3E,CA5zFa,CA6zFb;;;;;;AAKAqO,sBAAkB9T,SAAlB,CAA4B2U,UAA5B,GAAyC,YAAY;AACjD,YAAIhE,QAAQ,KAAKvP,QAAL,CAAc2E,aAAd,CAA4B,QAA5B,CAAR,CAAJ,EAAoD;AAChD,iBAAK3E,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiBwB,UAA7C;AACH,SAFD,MAEO;AACH,iBAAK1D,QAAL,CAAcrC,SAAd,CAAwBuG,MAAxB,CAA+B,KAAKhC,WAAL,CAAiBwB,UAAhD;AACH;AACJ,KAND;;AAOAgP,sBAAkB9T,SAAlB,CAA4B,YAA5B,IAA4C8T,kBAAkB9T,SAAlB,CAA4B2U,UAAxE,CAz0Fa,CA00Fb;;;;;;AAKAb,sBAAkB9T,SAAlB,CAA4ByU,aAA5B,GAA4C,YAAY;AACpD,YAAI,KAAKG,MAAL,CAAYC,QAAhB,EAA0B;AACtB,gBAAI,KAAKD,MAAL,CAAYC,QAAZ,CAAqBC,KAAzB,EAAgC;AAC5B,qBAAK1T,QAAL,CAAcrC,SAAd,CAAwBuG,MAAxB,CAA+B,KAAKhC,WAAL,CAAiB8Q,UAAhD;AACH,aAFD,MAEO;AACH,qBAAKhT,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiB8Q,UAA7C;AACH;AACJ;AACJ,KARD;;AASAN,sBAAkB9T,SAAlB,CAA4B,eAA5B,IAA+C8T,kBAAkB9T,SAAlB,CAA4ByU,aAA3E,CAx1Fa,CAy1Fb;;;;;;AAKAX,sBAAkB9T,SAAlB,CAA4B0U,UAA5B,GAAyC,YAAY;AACjD,YAAI,KAAKE,MAAL,CAAYtG,KAAZ,IAAqB,KAAKsG,MAAL,CAAYtG,KAAZ,CAAkBtR,MAAlB,GAA2B,CAApD,EAAuD;AACnD,iBAAKoE,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiB6Q,QAA7C;AACH,SAFD,MAEO;AACH,iBAAK/S,QAAL,CAAcrC,SAAd,CAAwBuG,MAAxB,CAA+B,KAAKhC,WAAL,CAAiB6Q,QAAhD;AACH;AACJ,KAND;;AAOAL,sBAAkB9T,SAAlB,CAA4B,YAA5B,IAA4C8T,kBAAkB9T,SAAlB,CAA4B0U,UAAxE,CAr2Fa,CAs2Fb;;;;;;AAKAZ,sBAAkB9T,SAAlB,CAA4B6D,OAA5B,GAAsC,YAAY;AAC9C,aAAK+Q,MAAL,CAAY9Q,QAAZ,GAAuB,IAAvB;AACA,aAAKqB,cAAL;AACH,KAHD;;AAIA2O,sBAAkB9T,SAAlB,CAA4B,SAA5B,IAAyC8T,kBAAkB9T,SAAlB,CAA4B6D,OAArE,CA/2Fa,CAg3Fb;;;;;;AAKAiQ,sBAAkB9T,SAAlB,CAA4B+D,MAA5B,GAAqC,YAAY;AAC7C,aAAK6Q,MAAL,CAAY9Q,QAAZ,GAAuB,KAAvB;AACA,aAAKqB,cAAL;AACH,KAHD;;AAIA2O,sBAAkB9T,SAAlB,CAA4B,QAA5B,IAAwC8T,kBAAkB9T,SAAlB,CAA4B+D,MAApE,CAz3Fa,CA03Fb;;;;;;;AAMA+P,sBAAkB9T,SAAlB,CAA4B4O,MAA5B,GAAqC,UAAUN,KAAV,EAAiB;AAClD,aAAKsG,MAAL,CAAYtG,KAAZ,GAAoBA,SAAS,EAA7B;AACA,aAAKnJ,cAAL;AACH,KAHD;;AAIA2O,sBAAkB9T,SAAlB,CAA4B,QAA5B,IAAwC8T,kBAAkB9T,SAAlB,CAA4B4O,MAApE,CAp4Fa,CAq4Fb;;;;AAGAkF,sBAAkB9T,SAAlB,CAA4BoD,IAA5B,GAAmC,YAAY;AAC3C,YAAI,KAAKhC,QAAT,EAAmB;AACf,iBAAK2T,MAAL,GAAc,KAAK3T,QAAL,CAAc2E,aAAd,CAA4B,MAAM,KAAKzC,WAAL,CAAiB4Q,KAAnD,CAAd;AACA,iBAAKU,MAAL,GAAc,KAAKxT,QAAL,CAAc2E,aAAd,CAA4B,MAAM,KAAKzC,WAAL,CAAiBkB,KAAnD,CAAd;;AACA,gBAAI,KAAKoQ,MAAT,EAAiB;AACb,oBAAI,KAAKA,MAAL,CAAYjK,YAAZ,CAAyB,KAAKtH,SAAL,CAAe4Q,kBAAxC,CAAJ,EAAiE;AAC7D,yBAAKF,OAAL,GAAeiB,SAAS,KAAKJ,MAAL,CAAYxX,YAAZ,CAAyB,KAAKiG,SAAL,CAAe4Q,kBAAxC,CAAT,EAAsE,EAAtE,CAAf;;AACA,wBAAIgB,MAAM,KAAKlB,OAAX,CAAJ,EAAyB;AACrB,6BAAKA,OAAL,GAAe,KAAK1Q,SAAL,CAAe2Q,WAA9B;AACH;AACJ;;AACD,oBAAI,KAAKY,MAAL,CAAYjK,YAAZ,CAAyB,aAAzB,CAAJ,EAA6C;AACzC,yBAAKvJ,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiB+Q,eAA7C;AACH;;AACD,qBAAKa,yBAAL,GAAiC,KAAK/P,cAAL,CAAoBf,IAApB,CAAyB,IAAzB,CAAjC;AACA,qBAAKmO,iBAAL,GAAyB,KAAKnN,QAAL,CAAchB,IAAd,CAAmB,IAAnB,CAAzB;AACA,qBAAKoO,gBAAL,GAAwB,KAAKnN,OAAL,CAAajB,IAAb,CAAkB,IAAlB,CAAxB;AACA,qBAAK+Q,iBAAL,GAAyB,KAAKX,QAAL,CAAcpQ,IAAd,CAAmB,IAAnB,CAAzB;AACA,qBAAKwQ,MAAL,CAAY7S,gBAAZ,CAA6B,OAA7B,EAAsC,KAAKmT,yBAA3C;AACA,qBAAKN,MAAL,CAAY7S,gBAAZ,CAA6B,OAA7B,EAAsC,KAAKwQ,iBAA3C;AACA,qBAAKqC,MAAL,CAAY7S,gBAAZ,CAA6B,MAA7B,EAAqC,KAAKyQ,gBAA1C;AACA,qBAAKoC,MAAL,CAAY7S,gBAAZ,CAA6B,OAA7B,EAAsC,KAAKoT,iBAA3C;;AACA,oBAAI,KAAKpB,OAAL,KAAiB,KAAK1Q,SAAL,CAAe2Q,WAApC,EAAiD;AAC7C;AACA;AACA,yBAAKoB,mBAAL,GAA2B,KAAKd,UAAL,CAAgBlQ,IAAhB,CAAqB,IAArB,CAA3B;AACA,yBAAKwQ,MAAL,CAAY7S,gBAAZ,CAA6B,SAA7B,EAAwC,KAAKqT,mBAA7C;AACH;;AACD,oBAAIC,UAAU,KAAKjU,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiB8Q,UAAlD,CAAd;AACA,qBAAKjP,cAAL;AACA,qBAAK/D,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiB2B,WAA7C;;AACA,oBAAIoQ,OAAJ,EAAa;AACT,yBAAKjU,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiB8Q,UAA7C;AACH;;AACD,oBAAI,KAAKQ,MAAL,CAAYjK,YAAZ,CAAyB,WAAzB,CAAJ,EAA2C;AACvC,yBAAKvJ,QAAL,CAAcgJ,KAAd;AACA,yBAAKuK,UAAL;AACH;AACJ;AACJ;AACJ,KAxCD,CAx4Fa,CAi7Fb;AACA;;;AACAlZ,qBAAiBY,QAAjB,CAA0B;AACtBmE,qBAAasT,iBADS;AAEtBrT,uBAAe,mBAFO;AAGtBrC,kBAAU,kBAHY;AAItBuB,gBAAQ;AAJc,KAA1B,EAn7Fa,CAy7Fb;;;;;;;;;;;;;;;WAz7Fa,CAy8Fb;;;;;;;;;AAQA,QAAI2V;AAAkB,iBAASA,eAAT,CAAyBxZ,OAAzB,EAAkC;AACpD,iBAAKsF,QAAL,GAAgBtF,OAAhB,CADoD,CAEpD;;AACA,iBAAKsH,IAAL;AACH;;AAJG,eAA2BkS,eAA3B;AAAA,OAAJ;;AAKAzX,WAAO,iBAAP,IAA4ByX,eAA5B,CAt9Fa,CAu9Fb;;;;;;AAMAA,oBAAgBtV,SAAhB,CAA0BqD,SAA1B,GAAsC,EAAtC,CA79Fa,CA89Fb;;;;;;;;AAQAiS,oBAAgBtV,SAAhB,CAA0BsD,WAA1B,GAAwC;AACpCiS,mBAAW,WADyB;AAEpCC,gBAAQ,qBAF4B;AAGpCC,cAAM,mBAH8B;AAIpCC,eAAO,oBAJ6B;AAKpCC,aAAK;AAL+B,KAAxC,CAt+Fa,CA6+Fb;;;;;;;AAMAL,oBAAgBtV,SAAhB,CAA0B4V,iBAA1B,GAA8C,UAAUjS,KAAV,EAAiB;AAC3D,YAAIkS,QAAQlS,MAAM2G,MAAN,CAAaf,qBAAb,EAAZ;AACA,YAAIO,OAAO+L,MAAM/L,IAAN,GAAa+L,MAAM7K,KAAN,GAAc,CAAtC;AACA,YAAIrB,MAAMkM,MAAMlM,GAAN,GAAYkM,MAAM9K,MAAN,GAAe,CAArC;AACA,YAAI+K,aAAa,CAAC,CAAD,IAAM,KAAK1U,QAAL,CAAc2U,WAAd,GAA4B,CAAlC,CAAjB;AACA,YAAIC,YAAY,CAAC,CAAD,IAAM,KAAK5U,QAAL,CAAcyI,YAAd,GAA6B,CAAnC,CAAhB;;AACA,YAAI,KAAKzI,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiBmS,IAAlD,KAA2D,KAAKrU,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiBoS,KAAlD,CAA/D,EAAyH;AACrH5L,mBAAO+L,MAAM7K,KAAN,GAAc,CAArB;;AACA,gBAAIrB,MAAMqM,SAAN,GAAkB,CAAtB,EAAyB;AACrB,qBAAK5U,QAAL,CAAcqI,KAAd,CAAoBE,GAApB,GAA0B,GAA1B;AACA,qBAAKvI,QAAL,CAAcqI,KAAd,CAAoBuM,SAApB,GAAgC,GAAhC;AACH,aAHD,MAGO;AACH,qBAAK5U,QAAL,CAAcqI,KAAd,CAAoBE,GAApB,GAA0BA,MAAM,IAAhC;AACA,qBAAKvI,QAAL,CAAcqI,KAAd,CAAoBuM,SAApB,GAAgCA,YAAY,IAA5C;AACH;AACJ,SATD,MASO;AACH,gBAAIlM,OAAOgM,UAAP,GAAoB,CAAxB,EAA2B;AACvB,qBAAK1U,QAAL,CAAcqI,KAAd,CAAoBK,IAApB,GAA2B,GAA3B;AACA,qBAAK1I,QAAL,CAAcqI,KAAd,CAAoBqM,UAApB,GAAiC,GAAjC;AACH,aAHD,MAGO;AACH,qBAAK1U,QAAL,CAAcqI,KAAd,CAAoBK,IAApB,GAA2BA,OAAO,IAAlC;AACA,qBAAK1I,QAAL,CAAcqI,KAAd,CAAoBqM,UAApB,GAAiCA,aAAa,IAA9C;AACH;AACJ;;AACD,YAAI,KAAK1U,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiBqS,GAAlD,CAAJ,EAA4D;AACxD,iBAAKvU,QAAL,CAAcqI,KAAd,CAAoBE,GAApB,GAA0BkM,MAAMlM,GAAN,GAAY,KAAKvI,QAAL,CAAcyI,YAA1B,GAAyC,EAAzC,GAA8C,IAAxE;AACH,SAFD,MAEO,IAAI,KAAKzI,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiBoS,KAAlD,CAAJ,EAA8D;AACjE,iBAAKtU,QAAL,CAAcqI,KAAd,CAAoBK,IAApB,GAA2B+L,MAAM/L,IAAN,GAAa+L,MAAM7K,KAAnB,GAA2B,EAA3B,GAAgC,IAA3D;AACH,SAFM,MAEA,IAAI,KAAK5J,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiBmS,IAAlD,CAAJ,EAA6D;AAChE,iBAAKrU,QAAL,CAAcqI,KAAd,CAAoBK,IAApB,GAA2B+L,MAAM/L,IAAN,GAAa,KAAK1I,QAAL,CAAc2U,WAA3B,GAAyC,EAAzC,GAA8C,IAAzE;AACH,SAFM,MAEA;AACH,iBAAK3U,QAAL,CAAcqI,KAAd,CAAoBE,GAApB,GAA0BkM,MAAMlM,GAAN,GAAYkM,MAAM9K,MAAlB,GAA2B,EAA3B,GAAgC,IAA1D;AACH;;AACD,aAAK3J,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiBiS,SAA7C;AACH,KAlCD,CAn/Fa,CAshGb;;;;;;AAKAD,oBAAgBtV,SAAhB,CAA0BiW,YAA1B,GAAyC,YAAY;AACjD,aAAK7U,QAAL,CAAcrC,SAAd,CAAwBuG,MAAxB,CAA+B,KAAKhC,WAAL,CAAiBiS,SAAhD;AACH,KAFD,CA3hGa,CA8hGb;;;;AAGAD,oBAAgBtV,SAAhB,CAA0BoD,IAA1B,GAAiC,YAAY;AACzC,YAAI,KAAKhC,QAAT,EAAmB;AACf,gBAAIqH,UAAU,KAAKrH,QAAL,CAAchE,YAAd,CAA2B,KAA3B,KAAqC,KAAKgE,QAAL,CAAchE,YAAd,CAA2B,cAA3B,CAAnD;;AACA,gBAAIqL,OAAJ,EAAa;AACT,qBAAKG,WAAL,GAAmB5K,SAAS2K,cAAT,CAAwBF,OAAxB,CAAnB;AACH;;AACD,gBAAI,KAAKG,WAAT,EAAsB;AAClB;AACA,oBAAI,CAAC,KAAKA,WAAL,CAAiB+B,YAAjB,CAA8B,UAA9B,CAAL,EAAgD;AAC5C,yBAAK/B,WAAL,CAAiBxJ,YAAjB,CAA8B,UAA9B,EAA0C,GAA1C;AACH;;AACD,qBAAK8W,sBAAL,GAA8B,KAAKN,iBAAL,CAAuBxR,IAAvB,CAA4B,IAA5B,CAA9B;AACA,qBAAK+R,+BAAL,GAAuC,KAAKF,YAAL,CAAkB7R,IAAlB,CAAuB,IAAvB,CAAvC;AACA,qBAAKwE,WAAL,CAAiB7G,gBAAjB,CAAkC,YAAlC,EAAgD,KAAKmU,sBAArD,EAA6E,KAA7E;AACA,qBAAKtN,WAAL,CAAiB7G,gBAAjB,CAAkC,UAAlC,EAA8C,KAAKmU,sBAAnD,EAA2E,KAA3E;AACA,qBAAKtN,WAAL,CAAiB7G,gBAAjB,CAAkC,YAAlC,EAAgD,KAAKoU,+BAArD,EAAsF,KAAtF;AACAtY,uBAAOkE,gBAAP,CAAwB,QAAxB,EAAkC,KAAKoU,+BAAvC,EAAwE,IAAxE;AACAtY,uBAAOkE,gBAAP,CAAwB,YAAxB,EAAsC,KAAKoU,+BAA3C;AACH;AACJ;AACJ,KApBD,CAjiGa,CAsjGb;AACA;;;AACA1a,qBAAiBY,QAAjB,CAA0B;AACtBmE,qBAAa8U,eADS;AAEtB7U,uBAAe,iBAFO;AAGtBrC,kBAAU;AAHY,KAA1B,EAxjGa,CA6jGb;;;;;;;;;;;;;;;WA7jGa,CA6kGb;;;;;;;;;AAQA,QAAIgY;AAAiB,iBAASA,cAAT,CAAwBta,OAAxB,EAAiC;AAClD,iBAAKsF,QAAL,GAAgBtF,OAAhB,CADkD,CAElD;;AACA,iBAAKsH,IAAL;AACH;;AAJG,eAA0BgT,cAA1B;AAAA,OAAJ;;AAKAvY,WAAO,gBAAP,IAA2BuY,cAA3B,CA1lGa,CA2lGb;;;;;;AAMAA,mBAAepW,SAAf,CAAyBqD,SAAzB,GAAqC;AACjCgT,mBAAW,qBADsB;AAEjCC,2BAAmB,GAFc;AAGjCC,wBAAgB,GAHiB;AAIjCC,mBAAW,UAJsB;AAKjCC,sBAAc,cALmB;AAMjCC,uBAAe;AANkB,KAArC,CAjmGa,CAymGb;;;;;;AAMAN,mBAAepW,SAAf,CAAyBiH,SAAzB,GAAqC;AACjCC,eAAO,EAD0B;AAEjCC,gBAAQ,EAFyB;AAGjCC,eAAO;AAH0B,KAArC,CA/mGa,CAonGb;;;;;;AAMAgP,mBAAepW,SAAf,CAAyB2W,KAAzB,GAAiC;AAC7BC,kBAAU,CADmB;AAE7BC,gBAAQ,CAFqB;AAG7BC,mBAAW,CAHkB;AAI7BC,gBAAQ;AAJqB,KAAjC,CA1nGa,CAgoGb;;;;;;;;AAQAX,mBAAepW,SAAf,CAAyBsD,WAAzB,GAAuC;AACnCiE,mBAAW,uBADwB;AAEnCyP,gBAAQ,oBAF2B;AAGnCC,gBAAQ,oBAH2B;AAInCC,iBAAS,qBAJ0B;AAKnCC,oBAAY,2BALuB;AAMnCC,cAAM,gBAN6B;AAOnCzQ,0BAAkB,sBAPiB;AAQnCnD,0BAAkB,kCARiB;AASnCC,gBAAQ,YAT2B;AAUnCmB,8BAAsB,qCAVa;AAWnCyS,uBAAe,4BAXoB;AAYnCC,0BAAkB,+BAZiB;AAanCC,uBAAe,4BAboB;AAcnCC,sBAAc,0BAdqB;AAenCC,oBAAY,wBAfuB;AAgBnCC,iBAAS,qBAhB0B;AAiBnCC,uBAAe,+BAjBoB;AAkBnCC,aAAK,iBAlB8B;AAmBnCC,wBAAgB,4BAnBmB;AAoBnCC,6BAAqB,iCApBc;AAqBnCC,8BAAsB,kCArBa;AAsBnCC,2BAAmB,+BAtBgB;AAuBnCC,eAAO,uBAvB4B;AAwBnCC,oBAAY,YAxBuB;AAyBnCC,kBAAU,UAzByB;AA0BnCC,8BAAsB,sBA1Ba;AA2BnCC,wBAAgB,mBA3BmB;AA4BnCC,oBAAY,YA5BuB;AA6BnCC,yBAAiB,iBA7BkB;AA8BnCC,wBAAgB,YA9BmB;AA+BnCjD,mBAAW,WA/BwB;AAgCnCtQ,qBAAa,aAhCsB;AAiCnC2C,sBAAc,cAjCqB;AAkCnC6Q,yBAAiB,+BAlCkB;AAmCnCC,yBAAiB;AAnCkB,KAAvC,CAxoGa,CA6qGb;;;;;;AAKAtC,mBAAepW,SAAf,CAAyB2Y,qBAAzB,GAAiD,YAAY;AACzD,YAAI,KAAKC,OAAL,CAAa7Z,SAAb,CAAuBG,QAAvB,CAAgC,KAAKoE,WAAL,CAAiBsE,YAAjD,CAAJ,EAAoE;AAChE;AACH;;AACD,YAAIiR,gBAAgB,CAAC,KAAKzX,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiBiV,eAAlD,CAAD,IAAuE,KAAKnX,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiBkU,YAAlD,CAA3F;;AACA,YAAI,KAAKsB,QAAL,CAAcC,SAAd,GAA0B,CAA1B,IAA+B,CAAC,KAAKH,OAAL,CAAa7Z,SAAb,CAAuBG,QAAvB,CAAgC,KAAKoE,WAAL,CAAiBgV,UAAjD,CAApC,EAAkG;AAC9F,iBAAKM,OAAL,CAAa7Z,SAAb,CAAuBmD,GAAvB,CAA2B,KAAKoB,WAAL,CAAiB+U,cAA5C;AACA,iBAAKO,OAAL,CAAa7Z,SAAb,CAAuBmD,GAAvB,CAA2B,KAAKoB,WAAL,CAAiBgV,UAA5C;;AACA,gBAAIO,aAAJ,EAAmB;AACf,qBAAKD,OAAL,CAAa7Z,SAAb,CAAuBmD,GAAvB,CAA2B,KAAKoB,WAAL,CAAiBsE,YAA5C;AACH;AACJ,SAND,MAMO,IAAI,KAAKkR,QAAL,CAAcC,SAAd,IAA2B,CAA3B,IAAgC,KAAKH,OAAL,CAAa7Z,SAAb,CAAuBG,QAAvB,CAAgC,KAAKoE,WAAL,CAAiBgV,UAAjD,CAApC,EAAkG;AACrG,iBAAKM,OAAL,CAAa7Z,SAAb,CAAuBuG,MAAvB,CAA8B,KAAKhC,WAAL,CAAiB+U,cAA/C;AACA,iBAAKO,OAAL,CAAa7Z,SAAb,CAAuBuG,MAAvB,CAA8B,KAAKhC,WAAL,CAAiBgV,UAA/C;;AACA,gBAAIO,aAAJ,EAAmB;AACf,qBAAKD,OAAL,CAAa7Z,SAAb,CAAuBmD,GAAvB,CAA2B,KAAKoB,WAAL,CAAiBsE,YAA5C;AACH;AACJ;AACJ,KAlBD,CAlrGa,CAqsGb;;;;;;;AAMAwO,mBAAepW,SAAf,CAAyBgZ,qBAAzB,GAAiD,UAAU3P,GAAV,EAAe;AAC5D;AACA,YAAIA,IAAIa,OAAJ,KAAgB,KAAKjD,SAAL,CAAeE,MAA/B,IAAyC,KAAK8R,OAAL,CAAala,SAAb,CAAuBG,QAAvB,CAAgC,KAAKoE,WAAL,CAAiBkV,cAAjD,CAA7C,EAA+G;AAC3G,iBAAKU,YAAL;AACH;AACJ,KALD,CA3sGa,CAitGb;;;;;;AAKA9C,mBAAepW,SAAf,CAAyBmZ,kBAAzB,GAA8C,YAAY;AACtD,YAAI,KAAKC,qBAAL,CAA2BC,OAA/B,EAAwC;AACpC,iBAAKjY,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiBiV,eAA7C;AACH,SAFD,MAEO;AACH,iBAAKnX,QAAL,CAAcrC,SAAd,CAAwBuG,MAAxB,CAA+B,KAAKhC,WAAL,CAAiBiV,eAAhD,EADG,CAEH;;AACA,gBAAI,KAAKU,OAAT,EAAkB;AACd,qBAAKA,OAAL,CAAala,SAAb,CAAuBuG,MAAvB,CAA8B,KAAKhC,WAAL,CAAiBkV,cAA/C;AACA,qBAAKc,WAAL,CAAiBva,SAAjB,CAA2BuG,MAA3B,CAAkC,KAAKhC,WAAL,CAAiBkV,cAAnD;AACH;AACJ;AACJ,KAXD,CAttGa,CAkuGb;;;;;;;AAMApC,mBAAepW,SAAf,CAAyBuZ,oBAAzB,GAAgD,UAAUlQ,GAAV,EAAe;AAC3D,YAAIA,OAAOA,IAAImQ,IAAJ,KAAa,SAAxB,EAAmC;AAC/B,gBAAInQ,IAAIa,OAAJ,KAAgB,KAAKjD,SAAL,CAAeG,KAA/B,IAAwCiC,IAAIa,OAAJ,KAAgB,KAAKjD,SAAL,CAAeC,KAA3E,EAAkF;AAC9E;AACAmC,oBAAIc,cAAJ;AACH,aAHD,MAGO;AACH;AACA;AACH;AACJ;;AACD,aAAK+O,YAAL;AACH,KAXD,CAxuGa,CAovGb;;;;;;AAKA9C,mBAAepW,SAAf,CAAyByZ,2BAAzB,GAAuD,YAAY;AAC/D,aAAKb,OAAL,CAAa7Z,SAAb,CAAuBuG,MAAvB,CAA8B,KAAKhC,WAAL,CAAiBsE,YAA/C;AACH,KAFD,CAzvGa,CA4vGb;;;;;;AAKAwO,mBAAepW,SAAf,CAAyB0Z,mBAAzB,GAA+C,YAAY;AACvD,YAAI,KAAKd,OAAL,CAAa7Z,SAAb,CAAuBG,QAAvB,CAAgC,KAAKoE,WAAL,CAAiBgV,UAAjD,CAAJ,EAAkE;AAC9D,iBAAKM,OAAL,CAAa7Z,SAAb,CAAuBuG,MAAvB,CAA8B,KAAKhC,WAAL,CAAiBgV,UAA/C;AACA,iBAAKM,OAAL,CAAa7Z,SAAb,CAAuBmD,GAAvB,CAA2B,KAAKoB,WAAL,CAAiBsE,YAA5C;AACH;AACJ,KALD,CAjwGa,CAuwGb;;;;;;AAKAwO,mBAAepW,SAAf,CAAyBsT,cAAzB,GAA0C,UAAUqG,MAAV,EAAkB;AACxD,aAAK,IAAIpG,IAAI,CAAb,EAAgBA,IAAIoG,OAAO3c,MAA3B,EAAmCuW,GAAnC,EAAwC;AACpCoG,mBAAOpG,CAAP,EAAUxU,SAAV,CAAoBuG,MAApB,CAA2B,KAAKhC,WAAL,CAAiBiS,SAA5C;AACH;AACJ,KAJD,CA5wGa,CAixGb;;;;;;AAKAa,mBAAepW,SAAf,CAAyBwT,gBAAzB,GAA4C,UAAUoG,MAAV,EAAkB;AAC1D,aAAK,IAAIpa,IAAI,CAAb,EAAgBA,IAAIoa,OAAO5c,MAA3B,EAAmCwC,GAAnC,EAAwC;AACpCoa,mBAAOpa,CAAP,EAAUT,SAAV,CAAoBuG,MAApB,CAA2B,KAAKhC,WAAL,CAAiBiS,SAA5C;AACH;AACJ,KAJD,CAtxGa,CA2xGb;;;;;;AAKAa,mBAAepW,SAAf,CAAyBkZ,YAAzB,GAAwC,YAAY;AAChD,YAAIW,eAAe,KAAKzY,QAAL,CAAc2E,aAAd,CAA4B,MAAM,KAAKzC,WAAL,CAAiB6T,UAAnD,CAAnB;AACA,aAAK8B,OAAL,CAAala,SAAb,CAAuBkL,MAAvB,CAA8B,KAAK3G,WAAL,CAAiBkV,cAA/C;AACA,aAAKc,WAAL,CAAiBva,SAAjB,CAA2BkL,MAA3B,CAAkC,KAAK3G,WAAL,CAAiBkV,cAAnD,EAHgD,CAIhD;;AACA,YAAI,KAAKS,OAAL,CAAala,SAAb,CAAuBG,QAAvB,CAAgC,KAAKoE,WAAL,CAAiBkV,cAAjD,CAAJ,EAAsE;AAClE,iBAAKS,OAAL,CAAa7Z,YAAb,CAA0B,aAA1B,EAAyC,OAAzC;AACAya,yBAAaza,YAAb,CAA0B,eAA1B,EAA2C,MAA3C;AACH,SAHD,MAGO;AACH,iBAAK6Z,OAAL,CAAa7Z,YAAb,CAA0B,aAA1B,EAAyC,MAAzC;AACAya,yBAAaza,YAAb,CAA0B,eAA1B,EAA2C,OAA3C;AACH;AACJ,KAZD;;AAaAgX,mBAAepW,SAAf,CAAyB,cAAzB,IAA2CoW,eAAepW,SAAf,CAAyBkZ,YAApE,CA7yGa,CA8yGb;;;;AAGA9C,mBAAepW,SAAf,CAAyBoD,IAAzB,GAAgC,YAAY;AACxC,YAAI,KAAKhC,QAAT,EAAmB;AACf,gBAAI8G,YAAYlK,SAASgE,aAAT,CAAuB,KAAvB,CAAhB;AACAkG,sBAAUnJ,SAAV,CAAoBmD,GAApB,CAAwB,KAAKoB,WAAL,CAAiBiE,SAAzC;AACA,gBAAIuS,iBAAiB,KAAK1Y,QAAL,CAAc2E,aAAd,CAA4B,QAA5B,CAArB;AACA,iBAAK3E,QAAL,CAAc+G,aAAd,CAA4BC,YAA5B,CAAyCF,SAAzC,EAAoD,KAAK9G,QAAzD;AACA,iBAAKA,QAAL,CAAc+G,aAAd,CAA4BE,WAA5B,CAAwC,KAAKjH,QAA7C;AACA8G,sBAAUhE,WAAV,CAAsB,KAAK9C,QAA3B;;AACA,gBAAI0Y,cAAJ,EAAoB;AAChBA,+BAAe1P,KAAf;AACH;;AACD,gBAAI2P,iBAAiB,KAAK3Y,QAAL,CAAc4Y,UAAnC;AACA,gBAAIC,cAAcF,eAAe/c,MAAjC;;AACA,iBAAK,IAAIkd,IAAI,CAAb,EAAgBA,IAAID,WAApB,EAAiCC,GAAjC,EAAsC;AAClC,oBAAIC,QAAQJ,eAAeG,CAAf,CAAZ;;AACA,oBAAIC,MAAMpb,SAAN,IAAmBob,MAAMpb,SAAN,CAAgBG,QAAhB,CAAyB,KAAKoE,WAAL,CAAiB0T,MAA1C,CAAvB,EAA0E;AACtE,yBAAK4B,OAAL,GAAeuB,KAAf;AACH;;AACD,oBAAIA,MAAMpb,SAAN,IAAmBob,MAAMpb,SAAN,CAAgBG,QAAhB,CAAyB,KAAKoE,WAAL,CAAiB2T,MAA1C,CAAvB,EAA0E;AACtE,yBAAKgC,OAAL,GAAekB,KAAf;AACH;;AACD,oBAAIA,MAAMpb,SAAN,IAAmBob,MAAMpb,SAAN,CAAgBG,QAAhB,CAAyB,KAAKoE,WAAL,CAAiB4T,OAA1C,CAAvB,EAA2E;AACvE,yBAAK4B,QAAL,GAAgBqB,KAAhB;AACH;AACJ;;AACDtc,mBAAOkE,gBAAP,CAAwB,UAAxB,EAAoC,UAAUwI,CAAV,EAAa;AAC7C,oBAAIA,EAAE6P,SAAN,EAAiB;AACb;AACA;AACA,yBAAKhZ,QAAL,CAAcqI,KAAd,CAAoB4Q,SAApB,GAAgC,QAAhC;AACA9X,0CAAsB,YAAY;AAC9B,6BAAKnB,QAAL,CAAcqI,KAAd,CAAoB4Q,SAApB,GAAgC,EAAhC;AACH,qBAFqB,CAEpBjW,IAFoB,CAEf,IAFe,CAAtB;AAGH;AACJ,aATmC,CASlCA,IATkC,CAS7B,IAT6B,CAApC,EASc,KATd;;AAUA,gBAAI,KAAKwU,OAAT,EAAkB;AACd,qBAAK0B,OAAL,GAAe,KAAK1B,OAAL,CAAa7S,aAAb,CAA2B,MAAM,KAAKzC,WAAL,CAAiBoU,OAAlD,CAAf;AACH;;AACD,gBAAI6C,OAAO,KAAK5D,KAAL,CAAWC,QAAtB;;AACA,gBAAI,KAAKgC,OAAT,EAAkB;AACd,oBAAI,KAAKA,OAAL,CAAa7Z,SAAb,CAAuBG,QAAvB,CAAgC,KAAKoE,WAAL,CAAiB+T,aAAjD,CAAJ,EAAqE;AACjEkD,2BAAO,KAAK5D,KAAL,CAAWE,MAAlB;AACH,iBAFD,MAEO,IAAI,KAAK+B,OAAL,CAAa7Z,SAAb,CAAuBG,QAAvB,CAAgC,KAAKoE,WAAL,CAAiBgU,gBAAjD,CAAJ,EAAwE;AAC3EiD,2BAAO,KAAK5D,KAAL,CAAWG,SAAlB;AACA,yBAAK8B,OAAL,CAAa7W,gBAAb,CAA8B,eAA9B,EAA+C,KAAK0X,2BAAL,CAAiCrV,IAAjC,CAAsC,IAAtC,CAA/C;AACA,yBAAKwU,OAAL,CAAa7W,gBAAb,CAA8B,OAA9B,EAAuC,KAAK2X,mBAAL,CAAyBtV,IAAzB,CAA8B,IAA9B,CAAvC;AACH,iBAJM,MAIA,IAAI,KAAKwU,OAAL,CAAa7Z,SAAb,CAAuBG,QAAvB,CAAgC,KAAKoE,WAAL,CAAiBiU,aAAjD,CAAJ,EAAqE;AACxEgD,2BAAO,KAAK5D,KAAL,CAAWI,MAAlB;AACA7O,8BAAUnJ,SAAV,CAAoBmD,GAApB,CAAwB,KAAKoB,WAAL,CAAiB8U,oBAAzC;AACH;;AACD,oBAAImC,SAAS,KAAK5D,KAAL,CAAWC,QAAxB,EAAkC;AAC9B,yBAAKgC,OAAL,CAAa7Z,SAAb,CAAuBmD,GAAvB,CAA2B,KAAKoB,WAAL,CAAiB+U,cAA5C;;AACA,wBAAI,KAAKiC,OAAT,EAAkB;AACd,6BAAKA,OAAL,CAAavb,SAAb,CAAuBmD,GAAvB,CAA2B,KAAKoB,WAAL,CAAiB+U,cAA5C;AACH;AACJ,iBALD,MAKO,IAAIkC,SAAS,KAAK5D,KAAL,CAAWE,MAApB,IAA8B0D,SAAS,KAAK5D,KAAL,CAAWI,MAAtD,EAA8D;AACjE,yBAAK6B,OAAL,CAAa7Z,SAAb,CAAuBuG,MAAvB,CAA8B,KAAKhC,WAAL,CAAiB+U,cAA/C;;AACA,wBAAI,KAAKiC,OAAT,EAAkB;AACd,6BAAKA,OAAL,CAAavb,SAAb,CAAuBuG,MAAvB,CAA8B,KAAKhC,WAAL,CAAiB+U,cAA/C;AACH;AACJ,iBALM,MAKA,IAAIkC,SAAS,KAAK5D,KAAL,CAAWG,SAAxB,EAAmC;AACtC;AACA;AACA;AACA,yBAAKgC,QAAL,CAAc/W,gBAAd,CAA+B,QAA/B,EAAyC,KAAK4W,qBAAL,CAA2BvU,IAA3B,CAAgC,IAAhC,CAAzC;AACA,yBAAKuU,qBAAL;AACH;AACJ,aAlEc,CAmEf;;;AACA,gBAAI,KAAKM,OAAT,EAAkB;AACd,oBAAIY,eAAe,KAAKzY,QAAL,CAAc2E,aAAd,CAA4B,MAAM,KAAKzC,WAAL,CAAiB6T,UAAnD,CAAnB;;AACA,oBAAI,CAAC0C,YAAL,EAAmB;AACfA,mCAAe7b,SAASgE,aAAT,CAAuB,KAAvB,CAAf;AACA6X,iCAAaza,YAAb,CAA0B,eAA1B,EAA2C,OAA3C;AACAya,iCAAaza,YAAb,CAA0B,MAA1B,EAAkC,QAAlC;AACAya,iCAAaza,YAAb,CAA0B,UAA1B,EAAsC,GAAtC;AACAya,iCAAa9a,SAAb,CAAuBmD,GAAvB,CAA2B,KAAKoB,WAAL,CAAiB6T,UAA5C;AACA,wBAAIqD,mBAAmBxc,SAASgE,aAAT,CAAuB,GAAvB,CAAvB;AACAwY,qCAAiBzb,SAAjB,CAA2BmD,GAA3B,CAA+B,KAAKoB,WAAL,CAAiB8T,IAAhD;AACAoD,qCAAiBC,SAAjB,GAA6B,KAAKpX,SAAL,CAAemT,SAA5C;AACAqD,iCAAa3V,WAAb,CAAyBsW,gBAAzB;AACH;;AACD,oBAAI,KAAKvB,OAAL,CAAala,SAAb,CAAuBG,QAAvB,CAAgC,KAAKoE,WAAL,CAAiBmV,eAAjD,CAAJ,EAAuE;AACnE;AACAoB,iCAAa9a,SAAb,CAAuBmD,GAAvB,CAA2B,KAAKoB,WAAL,CAAiBmV,eAA5C;AACH,iBAHD,MAGO,IAAI,KAAKQ,OAAL,CAAala,SAAb,CAAuBG,QAAvB,CAAgC,KAAKoE,WAAL,CAAiBoV,eAAjD,CAAJ,EAAuE;AAC1E;AACAmB,iCAAa9a,SAAb,CAAuBmD,GAAvB,CAA2B,KAAKoB,WAAL,CAAiBoV,eAA5C;AACH;;AACDmB,6BAAa9X,gBAAb,CAA8B,OAA9B,EAAuC,KAAKwX,oBAAL,CAA0BnV,IAA1B,CAA+B,IAA/B,CAAvC;AACAyV,6BAAa9X,gBAAb,CAA8B,SAA9B,EAAyC,KAAKwX,oBAAL,CAA0BnV,IAA1B,CAA+B,IAA/B,CAAzC,EArBc,CAsBd;AACA;AACA;;AACA,qBAAKhD,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiB4U,UAA7C,EAzBc,CA0Bd;AACA;;AACA,oBAAI,KAAK9W,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiBkU,YAAlD,CAAJ,EAAqE;AACjE,yBAAKoB,OAAL,CAAaxQ,YAAb,CAA0ByR,YAA1B,EAAwC,KAAKjB,OAAL,CAAa8B,UAArD;AACH,iBAFD,MAEO;AACH,yBAAKtZ,QAAL,CAAcgH,YAAd,CAA2ByR,YAA3B,EAAyC,KAAKf,QAA9C;AACH;;AACD,oBAAI6B,aAAa3c,SAASgE,aAAT,CAAuB,KAAvB,CAAjB;AACA2Y,2BAAW5b,SAAX,CAAqBmD,GAArB,CAAyB,KAAKoB,WAAL,CAAiBmU,UAA1C;AACA,qBAAKrW,QAAL,CAAc8C,WAAd,CAA0ByW,UAA1B;AACAA,2BAAW5Y,gBAAX,CAA4B,OAA5B,EAAqC,KAAKwX,oBAAL,CAA0BnV,IAA1B,CAA+B,IAA/B,CAArC;AACA,qBAAKkV,WAAL,GAAmBqB,UAAnB;AACA,qBAAK1B,OAAL,CAAalX,gBAAb,CAA8B,SAA9B,EAAyC,KAAKiX,qBAAL,CAA2B5U,IAA3B,CAAgC,IAAhC,CAAzC;AACA,qBAAK6U,OAAL,CAAa7Z,YAAb,CAA0B,aAA1B,EAAyC,MAAzC;AACH,aA5Gc,CA6Gf;AACA;;;AACA,iBAAKga,qBAAL,GAA6Bvb,OAAO+c,UAAP,CAAkB,KAAKvX,SAAL,CAAegT,SAAjC,CAA7B;AACA,iBAAK+C,qBAAL,CAA2ByB,WAA3B,CAAuC,KAAK1B,kBAAL,CAAwB/U,IAAxB,CAA6B,IAA7B,CAAvC;AACA,iBAAK+U,kBAAL,GAjHe,CAkHf;;AACA,gBAAI,KAAKP,OAAL,IAAgB,KAAK0B,OAAzB,EAAkC;AAC9B,qBAAKlZ,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiB6U,QAA7C;AACA,oBAAI2C,eAAe9c,SAASgE,aAAT,CAAuB,KAAvB,CAAnB;AACA8Y,6BAAa/b,SAAb,CAAuBmD,GAAvB,CAA2B,KAAKoB,WAAL,CAAiBqU,aAA5C;AACA,qBAAKiB,OAAL,CAAaxQ,YAAb,CAA0B0S,YAA1B,EAAwC,KAAKR,OAA7C;AACA,qBAAK1B,OAAL,CAAavQ,WAAb,CAAyB,KAAKiS,OAA9B;AACA,oBAAIS,aAAa/c,SAASgE,aAAT,CAAuB,KAAvB,CAAjB;AACA+Y,2BAAWhc,SAAX,CAAqBmD,GAArB,CAAyB,KAAKoB,WAAL,CAAiBuU,cAA1C;AACAkD,2BAAWhc,SAAX,CAAqBmD,GAArB,CAAyB,KAAKoB,WAAL,CAAiBwU,mBAA1C;AACA,oBAAIkD,iBAAiBhd,SAASgE,aAAT,CAAuB,GAAvB,CAArB;AACAgZ,+BAAejc,SAAf,CAAyBmD,GAAzB,CAA6B,KAAKoB,WAAL,CAAiB8T,IAA9C;AACA4D,+BAAe5K,WAAf,GAA6B,KAAK/M,SAAL,CAAeoT,YAA5C;AACAsE,2BAAW7W,WAAX,CAAuB8W,cAAvB;AACAD,2BAAWhZ,gBAAX,CAA4B,OAA5B,EAAqC,YAAY;AAC7C,yBAAKuY,OAAL,CAAaW,UAAb,IAA2B,KAAK5X,SAAL,CAAeiT,iBAA1C;AACH,iBAFoC,CAEnClS,IAFmC,CAE9B,IAF8B,CAArC;AAGA,oBAAI8W,cAAcld,SAASgE,aAAT,CAAuB,KAAvB,CAAlB;AACAkZ,4BAAYnc,SAAZ,CAAsBmD,GAAtB,CAA0B,KAAKoB,WAAL,CAAiBuU,cAA3C;AACAqD,4BAAYnc,SAAZ,CAAsBmD,GAAtB,CAA0B,KAAKoB,WAAL,CAAiByU,oBAA3C;AACA,oBAAIoD,kBAAkBnd,SAASgE,aAAT,CAAuB,GAAvB,CAAtB;AACAmZ,gCAAgBpc,SAAhB,CAA0BmD,GAA1B,CAA8B,KAAKoB,WAAL,CAAiB8T,IAA/C;AACA+D,gCAAgB/K,WAAhB,GAA8B,KAAK/M,SAAL,CAAeqT,aAA7C;AACAwE,4BAAYhX,WAAZ,CAAwBiX,eAAxB;AACAD,4BAAYnZ,gBAAZ,CAA6B,OAA7B,EAAsC,YAAY;AAC9C,yBAAKuY,OAAL,CAAaW,UAAb,IAA2B,KAAK5X,SAAL,CAAeiT,iBAA1C;AACH,iBAFqC,CAEpClS,IAFoC,CAE/B,IAF+B,CAAtC;AAGA0W,6BAAa5W,WAAb,CAAyB6W,UAAzB;AACAD,6BAAa5W,WAAb,CAAyB,KAAKoW,OAA9B;AACAQ,6BAAa5W,WAAb,CAAyBgX,WAAzB,EA5B8B,CA6B9B;AACA;;AACA,oBAAIE,mBAAmB,YAAY;AAC/B,wBAAI,KAAKd,OAAL,CAAaW,UAAb,GAA0B,CAA9B,EAAiC;AAC7BF,mCAAWhc,SAAX,CAAqBmD,GAArB,CAAyB,KAAKoB,WAAL,CAAiBiS,SAA1C;AACH,qBAFD,MAEO;AACHwF,mCAAWhc,SAAX,CAAqBuG,MAArB,CAA4B,KAAKhC,WAAL,CAAiBiS,SAA7C;AACH;;AACD,wBAAI,KAAK+E,OAAL,CAAaW,UAAb,GAA0B,KAAKX,OAAL,CAAae,WAAb,GAA2B,KAAKf,OAAL,CAAavE,WAAtE,EAAmF;AAC/EmF,oCAAYnc,SAAZ,CAAsBmD,GAAtB,CAA0B,KAAKoB,WAAL,CAAiBiS,SAA3C;AACH,qBAFD,MAEO;AACH2F,oCAAYnc,SAAZ,CAAsBuG,MAAtB,CAA6B,KAAKhC,WAAL,CAAiBiS,SAA9C;AACH;AACJ,iBAXsB,CAWrBnR,IAXqB,CAWhB,IAXgB,CAAvB;;AAYA,qBAAKkW,OAAL,CAAavY,gBAAb,CAA8B,QAA9B,EAAwCqZ,gBAAxC;AACAA,mCA5C8B,CA6C9B;;AACA,oBAAIE,sBAAsB,YAAY;AAClC;AACA,wBAAI,KAAKC,gBAAT,EAA2B;AACvBrY,qCAAa,KAAKqY,gBAAlB;AACH;;AACD,yBAAKA,gBAAL,GAAwBtY,WAAW,YAAY;AAC3CmY;AACA,6BAAKG,gBAAL,GAAwB,IAAxB;AACH,qBAHkC,CAGjCnX,IAHiC,CAG5B,IAH4B,CAAX,EAGV,KAAKf,SAAL,CAAekT,cAHL,CAAxB;AAIH,iBATyB,CASxBnS,IATwB,CASnB,IATmB,CAA1B;;AAUAvG,uBAAOkE,gBAAP,CAAwB,QAAxB,EAAkCuZ,mBAAlC;;AACA,oBAAI,KAAKhB,OAAL,CAAavb,SAAb,CAAuBG,QAAvB,CAAgC,KAAKoE,WAAL,CAAiBqD,gBAAjD,CAAJ,EAAwE;AACpE,yBAAK2T,OAAL,CAAavb,SAAb,CAAuBmD,GAAvB,CAA2B,KAAKoB,WAAL,CAAiBsB,oBAA5C;AACH,iBA3D6B,CA4D9B;;;AACA,oBAAI4W,OAAO,KAAKlB,OAAL,CAAahc,gBAAb,CAA8B,MAAM,KAAKgF,WAAL,CAAiBsU,GAArD,CAAX;AACA,oBAAIgC,SAAS,KAAKd,QAAL,CAAcxa,gBAAd,CAA+B,MAAM,KAAKgF,WAAL,CAAiB2U,KAAtD,CAAb,CA9D8B,CA+D9B;;AACA,qBAAK,IAAIlb,IAAI,CAAb,EAAgBA,IAAIye,KAAKxe,MAAzB,EAAiCD,GAAjC,EAAsC;AAClC,wBAAI0e,iBAAJ,CAAsBD,KAAKze,CAAL,CAAtB,EAA+Bye,IAA/B,EAAqC5B,MAArC,EAA6C,IAA7C;AACH;AACJ;;AACD,iBAAKxY,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiB2B,WAA7C;AACH;AACJ,KA1LD,CAjzGa,CA4+Gb;;;;;;;;;;AASA,aAASwW,iBAAT,CAA2BhI,GAA3B,EAAgC+H,IAAhC,EAAsC5B,MAAtC,EAA8C8B,MAA9C,EAAsD;AAClD;;WAGA,SAASC,SAAT,GAAqB;AACjB,gBAAI/H,OAAOH,IAAIG,IAAJ,CAASvW,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAX;AACA,gBAAIwW,QAAQ6H,OAAO5C,QAAP,CAAgB/S,aAAhB,CAA8B,MAAM6N,IAApC,CAAZ;AACA8H,mBAAOpI,cAAP,CAAsBkI,IAAtB;AACAE,mBAAOlI,gBAAP,CAAwBoG,MAAxB;AACAnG,gBAAI1U,SAAJ,CAAcmD,GAAd,CAAkBwZ,OAAOpY,WAAP,CAAmBiS,SAArC;AACA1B,kBAAM9U,SAAN,CAAgBmD,GAAhB,CAAoBwZ,OAAOpY,WAAP,CAAmBiS,SAAvC;AACH;;AACD,YAAImG,OAAOpB,OAAP,CAAevb,SAAf,CAAyBG,QAAzB,CAAkCwc,OAAOpY,WAAP,CAAmBqD,gBAArD,CAAJ,EAA4E;AACxE,gBAAI3C,kBAAkBhG,SAASgE,aAAT,CAAuB,MAAvB,CAAtB;AACAgC,4BAAgBjF,SAAhB,CAA0BmD,GAA1B,CAA8BwZ,OAAOpY,WAAP,CAAmBE,gBAAjD;AACAQ,4BAAgBjF,SAAhB,CAA0BmD,GAA1B,CAA8BwZ,OAAOpY,WAAP,CAAmBqD,gBAAjD;AACA,gBAAIN,SAASrI,SAASgE,aAAT,CAAuB,MAAvB,CAAb;AACAqE,mBAAOtH,SAAP,CAAiBmD,GAAjB,CAAqBwZ,OAAOpY,WAAP,CAAmBG,MAAxC;AACAO,4BAAgBE,WAAhB,CAA4BmC,MAA5B;AACAoN,gBAAIvP,WAAJ,CAAgBF,eAAhB;AACH;;AACD,YAAI,CAAC0X,OAAOpB,OAAP,CAAevb,SAAf,CAAyBG,QAAzB,CAAkCwc,OAAOpY,WAAP,CAAmB0U,iBAArD,CAAL,EAA8E;AAC1EvE,gBAAI1R,gBAAJ,CAAqB,OAArB,EAA8B,UAAUwI,CAAV,EAAa;AACvC,oBAAIkJ,IAAIrW,YAAJ,CAAiB,MAAjB,EAAyBuW,MAAzB,CAAgC,CAAhC,MAAuC,GAA3C,EAAgD;AAC5CpJ,sBAAEJ,cAAF;AACAwR;AACH;AACJ,aALD;AAMH;;AACDlI,YAAIrI,IAAJ,GAAWuQ,SAAX;AACH;;AACD9d,WAAO,mBAAP,IAA8B4d,iBAA9B,CAphHa,CAqhHb;AACA;;AACAhgB,qBAAiBY,QAAjB,CAA0B;AACtBmE,qBAAa4V,cADS;AAEtB3V,uBAAe,gBAFO;AAGtBrC,kBAAU;AAHY,KAA1B,EAvhHa,CA4hHb;;;;;;;;;;;;;;;WA5hHa,CA4iHb;;;;;;;;;AAQA,QAAIwd;AAAoB,iBAASA,iBAAT,CAA2B9f,OAA3B,EAAoC;AACxD,iBAAKsF,QAAL,GAAgBtF,OAAhB,CADwD,CAExD;;AACA,iBAAKsH,IAAL;AACH;;AAJG,eAA6BwY,iBAA7B;AAAA,OAAJ;;AAKA/d,WAAO,mBAAP,IAA8B+d,iBAA9B,CAzjHa,CA0jHb;;;;;;AAMAA,sBAAkB5b,SAAlB,CAA4BqD,SAA5B,GAAwC,EAAxC,CAhkHa,CAikHb;;;;;;;;AAQAuY,sBAAkB5b,SAAlB,CAA4BsD,WAA5B,GAA0C;AACtCuY,oBAAY,gBAD0B;AAEtCC,oBAAY,4BAF0B;AAGtCC,wBAAgB,wBAHsB;AAItCC,qBAAa,aAJyB;AAKtC/W,qBAAa;AALyB,KAA1C,CAzkHa,CAglHb;;;;;;;;;;AASA2W,sBAAkB5b,SAAlB,CAA4Bic,UAA5B,GAAyC,UAAUC,QAAV,EAAoBC,GAApB,EAAyBC,QAAzB,EAAmC;AACxE,YAAID,GAAJ,EAAS;AACL,mBAAO,YAAY;AACf,oBAAID,SAAStW,OAAb,EAAsB;AAClBuW,wBAAIpd,SAAJ,CAAcmD,GAAd,CAAkB,KAAKoB,WAAL,CAAiB0Y,WAAnC;AACH,iBAFD,MAEO;AACHG,wBAAIpd,SAAJ,CAAcuG,MAAd,CAAqB,KAAKhC,WAAL,CAAiB0Y,WAAtC;AACH;AACJ,aANM,CAML5X,IANK,CAMA,IANA,CAAP;AAOH;;AACD,YAAIgY,QAAJ,EAAc;AACV,mBAAO,YAAY;AACf,oBAAIrf,CAAJ;AACA,oBAAIoP,EAAJ;;AACA,oBAAI+P,SAAStW,OAAb,EAAsB;AAClB,yBAAK7I,IAAI,CAAT,EAAYA,IAAIqf,SAASpf,MAAzB,EAAiCD,GAAjC,EAAsC;AAClCoP,6BAAKiQ,SAASrf,CAAT,EAAYgJ,aAAZ,CAA0B,IAA1B,EAAgCA,aAAhC,CAA8C,eAA9C,CAAL;AACAoG,2BAAG,kBAAH,EAAuBtG,KAAvB;AACAuW,iCAASrf,CAAT,EAAYgC,SAAZ,CAAsBmD,GAAtB,CAA0B,KAAKoB,WAAL,CAAiB0Y,WAA3C;AACH;AACJ,iBAND,MAMO;AACH,yBAAKjf,IAAI,CAAT,EAAYA,IAAIqf,SAASpf,MAAzB,EAAiCD,GAAjC,EAAsC;AAClCoP,6BAAKiQ,SAASrf,CAAT,EAAYgJ,aAAZ,CAA0B,IAA1B,EAAgCA,aAAhC,CAA8C,eAA9C,CAAL;AACAoG,2BAAG,kBAAH,EAAuBrG,OAAvB;AACAsW,iCAASrf,CAAT,EAAYgC,SAAZ,CAAsBuG,MAAtB,CAA6B,KAAKhC,WAAL,CAAiB0Y,WAA9C;AACH;AACJ;AACJ,aAhBM,CAgBL5X,IAhBK,CAgBA,IAhBA,CAAP;AAiBH;AACJ,KA7BD,CAzlHa,CAunHb;;;;;;;;;AAQAwX,sBAAkB5b,SAAlB,CAA4Bqc,eAA5B,GAA8C,UAAUF,GAAV,EAAeC,QAAf,EAAyB;AACnE,YAAIE,QAAQte,SAASgE,aAAT,CAAuB,OAAvB,CAAZ;AACA,YAAIua,eAAe,CACf,cADe,EAEf,iBAFe,EAGf,sBAHe,EAIf,KAAKjZ,WAAL,CAAiByY,cAJF,CAAnB;AAMAO,cAAMrf,SAAN,GAAkBsf,aAAald,IAAb,CAAkB,GAAlB,CAAlB;AACA,YAAI6c,WAAWle,SAASgE,aAAT,CAAuB,OAAvB,CAAf;AACAka,iBAAS1C,IAAT,GAAgB,UAAhB;AACA0C,iBAASnd,SAAT,CAAmBmD,GAAnB,CAAuB,qBAAvB;;AACA,YAAIia,GAAJ,EAAS;AACLD,qBAAStW,OAAT,GAAmBuW,IAAIpd,SAAJ,CAAcG,QAAd,CAAuB,KAAKoE,WAAL,CAAiB0Y,WAAxC,CAAnB;AACAE,qBAASna,gBAAT,CAA0B,QAA1B,EAAoC,KAAKka,UAAL,CAAgBC,QAAhB,EAA0BC,GAA1B,CAApC;AACH,SAHD,MAGO,IAAIC,QAAJ,EAAc;AACjBF,qBAASna,gBAAT,CAA0B,QAA1B,EAAoC,KAAKka,UAAL,CAAgBC,QAAhB,EAA0B,IAA1B,EAAgCE,QAAhC,CAApC;AACH;;AACDE,cAAMpY,WAAN,CAAkBgY,QAAlB;AACAzgB,yBAAiBI,cAAjB,CAAgCygB,KAAhC,EAAuC,kBAAvC;AACA,eAAOA,KAAP;AACH,KArBD,CA/nHa,CAqpHb;;;;AAGAV,sBAAkB5b,SAAlB,CAA4BoD,IAA5B,GAAmC,YAAY;AAC3C,YAAI,KAAKhC,QAAT,EAAmB;AACf,gBAAIob,cAAc,KAAKpb,QAAL,CAAc2E,aAAd,CAA4B,IAA5B,CAAlB;AACA,gBAAI0W,WAAW3c,MAAME,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2B,KAAKkB,QAAL,CAAc9C,gBAAd,CAA+B,UAA/B,CAA3B,CAAf;AACA,gBAAIoe,WAAW5c,MAAME,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2B,KAAKkB,QAAL,CAAc9C,gBAAd,CAA+B,UAA/B,CAA3B,CAAf;AACA,gBAAIqe,OAAOF,SAASG,MAAT,CAAgBF,QAAhB,CAAX;;AACA,gBAAI,KAAKtb,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiBwY,UAAlD,CAAJ,EAAmE;AAC/D,oBAAIe,KAAK7e,SAASgE,aAAT,CAAuB,IAAvB,CAAT;AACA,oBAAI8a,iBAAiB,KAAKT,eAAL,CAAqB,IAArB,EAA2BM,IAA3B,CAArB;AACAE,mBAAG3Y,WAAH,CAAe4Y,cAAf;AACAN,4BAAYrU,aAAZ,CAA0BC,YAA1B,CAAuCyU,EAAvC,EAA2CL,WAA3C;;AACA,qBAAK,IAAIzf,IAAI,CAAb,EAAgBA,IAAI4f,KAAK3f,MAAzB,EAAiCD,GAAjC,EAAsC;AAClC,wBAAIggB,YAAYJ,KAAK5f,CAAL,EAAQgJ,aAAR,CAAsB,IAAtB,CAAhB;;AACA,wBAAIgX,SAAJ,EAAe;AACX,4BAAIC,KAAKhf,SAASgE,aAAT,CAAuB,IAAvB,CAAT;;AACA,4BAAI2a,KAAK5f,CAAL,EAAQyO,UAAR,CAAmByR,QAAnB,CAA4BC,WAA5B,OAA8C,OAAlD,EAA2D;AACvD,gCAAIC,cAAc,KAAKd,eAAL,CAAqBM,KAAK5f,CAAL,CAArB,CAAlB;AACAigB,+BAAG9Y,WAAH,CAAeiZ,WAAf;AACH;;AACDR,6BAAK5f,CAAL,EAAQqL,YAAR,CAAqB4U,EAArB,EAAyBD,SAAzB;AACH;AACJ;;AACD,qBAAK3b,QAAL,CAAcrC,SAAd,CAAwBmD,GAAxB,CAA4B,KAAKoB,WAAL,CAAiB2B,WAA7C;AACH;AACJ;AACJ,KAzBD,CAxpHa,CAkrHb;AACA;;;AACAxJ,qBAAiBY,QAAjB,CAA0B;AACtBmE,qBAAaob,iBADS;AAEtBnb,uBAAe,mBAFO;AAGtBrC,kBAAU;AAHY,KAA1B,EAprHa,CAyrHb;;;;;;;;;;;;;;;WAzrHa,CAysHb;;;;;;;;;AAQA,QAAIgf;AAAiB,iBAASA,cAAT,CAAwBthB,OAAxB,EAAiC;AAClD,iBAAKsF,QAAL,GAAgBtF,OAAhB,CADkD,CAElD;;AACA,iBAAKsH,IAAL;AACH;;AAJG,eAA0Bga,cAA1B;AAAA,OAAJ;;AAKAvf,WAAO,gBAAP,IAA2Buf,cAA3B,CAttHa,CAutHb;;;;;;AAMAA,mBAAepd,SAAf,CAAyBqD,SAAzB,GAAqC;AACjCga,uBAAe,uBADkB;AAEjCC,sBAAc,KAFmB;AAGjCC,yBAAiB,KAHgB;AAIjCC,uBAAe,GAJkB;AAKjCC,qBAAa;AALoB,KAArC,CA7tHa,CAouHb;;;;;;;;AAQAL,mBAAepd,SAAf,CAAyBsD,WAAzB,GAAuC;AACnCuB,uBAAe,oBADoB;AAEnC6Y,qCAA6B,qCAFM;AAGnCja,gBAAQ,YAH2B;AAInCmE,sBAAc,cAJqB;AAKnCD,oBAAY;AALuB,KAAvC,CA5uHa,CAmvHb;;;;;;;AAMAyV,mBAAepd,SAAf,CAAyB2d,YAAzB,GAAwC,UAAUha,KAAV,EAAiB;AACrD,YAAI,CAAC,KAAKM,cAAL,CAAoBwF,KAApB,CAA0BuB,KAA3B,IAAoC,CAAC,KAAK/G,cAAL,CAAoBwF,KAApB,CAA0BsB,MAAnE,EAA2E;AACvE,gBAAIzB,OAAO,KAAKlI,QAAL,CAAcmI,qBAAd,EAAX;AACA,iBAAKqU,WAAL,GAAmBtU,KAAKyB,MAAxB;AACA,iBAAK8S,UAAL,GAAkBvU,KAAK0B,KAAvB;AACA,iBAAK8S,WAAL,GAAmB/a,KAAKgb,IAAL,CAAUzU,KAAK0B,KAAL,GAAa1B,KAAK0B,KAAlB,GAA0B1B,KAAKyB,MAAL,GAAczB,KAAKyB,MAAvD,IAAiE,CAAjE,GAAqE,CAAxF;AACA,iBAAK9G,cAAL,CAAoBwF,KAApB,CAA0BuB,KAA1B,GAAkC,KAAK8S,WAAL,GAAmB,IAArD;AACA,iBAAK7Z,cAAL,CAAoBwF,KAApB,CAA0BsB,MAA1B,GAAmC,KAAK+S,WAAL,GAAmB,IAAtD;AACH;;AACD,aAAK7Z,cAAL,CAAoBlF,SAApB,CAA8BmD,GAA9B,CAAkC,KAAKoB,WAAL,CAAiBqE,UAAnD;;AACA,YAAIhE,MAAM6V,IAAN,KAAe,WAAf,IAA8B,KAAKwE,kBAAvC,EAA2D;AACvD,iBAAKA,kBAAL,GAA0B,KAA1B;AACH,SAFD,MAEO;AACH,gBAAIra,MAAM6V,IAAN,KAAe,YAAnB,EAAiC;AAC7B,qBAAKwE,kBAAL,GAA0B,IAA1B;AACH;;AACD,gBAAIC,aAAa,KAAKC,aAAL,EAAjB;;AACA,gBAAID,aAAa,CAAjB,EAAoB;AAChB;AACH;;AACD,iBAAKE,aAAL,CAAmB,CAAnB;AACA,gBAAIC,QAAQza,MAAM0a,aAAN,CAAoB9U,qBAApB,EAAZ;AACA,gBAAI+U,CAAJ;AACA,gBAAIlQ,CAAJ,CAXG,CAYH;;AACA,gBAAIzK,MAAMuK,OAAN,KAAkB,CAAlB,IAAuBvK,MAAMwK,OAAN,KAAkB,CAA7C,EAAgD;AAC5CmQ,oBAAIvb,KAAKwb,KAAL,CAAWH,MAAMpT,KAAN,GAAc,CAAzB,CAAJ;AACAoD,oBAAIrL,KAAKwb,KAAL,CAAWH,MAAMrT,MAAN,GAAe,CAA1B,CAAJ;AACH,aAHD,MAGO;AACH,oBAAImD,UAAUvK,MAAMuK,OAAN,KAAkByB,SAAlB,GAA8BhM,MAAMuK,OAApC,GAA8CvK,MAAM6a,OAAN,CAAc,CAAd,EAAiBtQ,OAA7E;AACA,oBAAIC,UAAUxK,MAAMwK,OAAN,KAAkBwB,SAAlB,GAA8BhM,MAAMwK,OAApC,GAA8CxK,MAAM6a,OAAN,CAAc,CAAd,EAAiBrQ,OAA7E;AACAmQ,oBAAIvb,KAAKwb,KAAL,CAAWrQ,UAAUkQ,MAAMtU,IAA3B,CAAJ;AACAsE,oBAAIrL,KAAKwb,KAAL,CAAWpQ,UAAUiQ,MAAMzU,GAA3B,CAAJ;AACH;;AACD,iBAAK8U,WAAL,CAAiBH,CAAjB,EAAoBlQ,CAApB;AACA,iBAAKsQ,eAAL,CAAqB,IAArB;AACA7gB,mBAAO0E,qBAAP,CAA6B,KAAKoc,gBAAL,CAAsBva,IAAtB,CAA2B,IAA3B,CAA7B;AACH;AACJ,KAtCD,CAzvHa,CAgyHb;;;;;;;AAMAgZ,mBAAepd,SAAf,CAAyB4e,UAAzB,GAAsC,UAAUjb,KAAV,EAAiB;AACnD;AACA,YAAIA,SAASA,MAAMkb,MAAN,KAAiB,CAA9B,EAAiC;AAC7B;AACA;AACA;AACAhhB,mBAAOoF,UAAP,CAAkB,YAAY;AAC1B,qBAAKgB,cAAL,CAAoBlF,SAApB,CAA8BuG,MAA9B,CAAqC,KAAKhC,WAAL,CAAiBqE,UAAtD;AACH,aAFiB,CAEhBvD,IAFgB,CAEX,IAFW,CAAlB,EAEc,CAFd;AAGH;AACJ,KAVD,CAtyHa,CAizHb;;;;AAGAgZ,mBAAepd,SAAf,CAAyBoD,IAAzB,GAAgC,YAAY;AACxC,YAAI,KAAKhC,QAAT,EAAmB;AACf,gBAAI0d,cAAc,KAAK1d,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiBuB,aAAlD,CAAlB;;AACA,gBAAI,CAAC,KAAKzD,QAAL,CAAcrC,SAAd,CAAwBG,QAAxB,CAAiC,KAAKoE,WAAL,CAAiBoa,2BAAlD,CAAL,EAAqF;AACjF,qBAAKzZ,cAAL,GAAsB,KAAK7C,QAAL,CAAc2E,aAAd,CAA4B,MAAM,KAAKzC,WAAL,CAAiBG,MAAnD,CAAtB;AACA,qBAAKsb,WAAL,GAAmB,CAAnB;AACA,qBAAKjB,WAAL,GAAmB,CAAnB;AACA,qBAAKkB,EAAL,GAAU,CAAV;AACA,qBAAKC,EAAL,GAAU,CAAV,CALiF,CAMjF;AACA;AACA;;AACA,qBAAKjB,kBAAL,GAA0B,KAA1B;AACA,qBAAKkB,gBAAL,GAAwB,KAAKvB,YAAL,CAAkBvZ,IAAlB,CAAuB,IAAvB,CAAxB;AACA,qBAAKhD,QAAL,CAAcW,gBAAd,CAA+B,WAA/B,EAA4C,KAAKmd,gBAAjD;AACA,qBAAK9d,QAAL,CAAcW,gBAAd,CAA+B,YAA/B,EAA6C,KAAKmd,gBAAlD;AACA,qBAAKC,cAAL,GAAsB,KAAKP,UAAL,CAAgBxa,IAAhB,CAAqB,IAArB,CAAtB;AACA,qBAAKhD,QAAL,CAAcW,gBAAd,CAA+B,SAA/B,EAA0C,KAAKod,cAA/C;AACA,qBAAK/d,QAAL,CAAcW,gBAAd,CAA+B,YAA/B,EAA6C,KAAKod,cAAlD;AACA,qBAAK/d,QAAL,CAAcW,gBAAd,CAA+B,UAA/B,EAA2C,KAAKod,cAAhD;AACA,qBAAK/d,QAAL,CAAcW,gBAAd,CAA+B,MAA/B,EAAuC,KAAKod,cAA5C,EAjBiF,CAkBjF;;;;;AAIA,qBAAKjB,aAAL,GAAqB,YAAY;AAC7B,2BAAO,KAAKa,WAAZ;AACH,iBAFD,CAtBiF,CAyBjF;;;;;AAIA,qBAAKZ,aAAL,GAAqB,UAAUiB,EAAV,EAAc;AAC/B,yBAAKL,WAAL,GAAmBK,EAAnB;AACH,iBAFD,CA7BiF,CAgCjF;;;;;AAIA,qBAAKC,gBAAL,GAAwB,YAAY;AAChC,2BAAO,KAAKpb,cAAZ;AACH,iBAFD,CApCiF,CAuCjF;;;;;;AAKA,qBAAKwa,WAAL,GAAmB,UAAUa,IAAV,EAAgBC,IAAhB,EAAsB;AACrC,yBAAKP,EAAL,GAAUM,IAAV;AACA,yBAAKL,EAAL,GAAUM,IAAV;AACH,iBAHD,CA5CiF,CAgDjF;;;;;AAIA,qBAAKb,eAAL,GAAuB,UAAU5M,KAAV,EAAiB;AACpC,wBAAI,KAAK7N,cAAL,KAAwB,IAA5B,EAAkC;AAC9B,4BAAIub,eAAJ;AACA,4BAAIC,KAAJ;AACA,4BAAIC,IAAJ;AACA,4BAAIC,SAAS,eAAe,KAAKX,EAApB,GAAyB,MAAzB,GAAkC,KAAKC,EAAvC,GAA4C,KAAzD;;AACA,4BAAInN,KAAJ,EAAW;AACP2N,oCAAQ,KAAKpc,SAAL,CAAega,aAAvB;AACAqC,mCAAO,KAAKrc,SAAL,CAAeia,YAAtB;AACH,yBAHD,MAGO;AACHmC,oCAAQ,KAAKpc,SAAL,CAAeoa,WAAvB;AACAiC,mCAAO,KAAK5B,WAAL,GAAmB,IAA1B;;AACA,gCAAIgB,WAAJ,EAAiB;AACba,yCAAS,eAAe,KAAK9B,UAAL,GAAkB,CAAjC,GAAqC,MAArC,GAA8C,KAAKD,WAAL,GAAmB,CAAjE,GAAqE,KAA9E;AACH;AACJ;;AACD4B,0CAAkB,2BAA2BG,MAA3B,GAAoCF,KAAtD;AACA,6BAAKxb,cAAL,CAAoBwF,KAApB,CAA0BmW,eAA1B,GAA4CJ,eAA5C;AACA,6BAAKvb,cAAL,CAAoBwF,KAApB,CAA0BoW,WAA1B,GAAwCL,eAAxC;AACA,6BAAKvb,cAAL,CAAoBwF,KAApB,CAA0BqW,SAA1B,GAAsCN,eAAtC;;AACA,4BAAI1N,KAAJ,EAAW;AACP,iCAAK7N,cAAL,CAAoBlF,SAApB,CAA8BuG,MAA9B,CAAqC,KAAKhC,WAAL,CAAiBsE,YAAtD;AACH,yBAFD,MAEO;AACH,iCAAK3D,cAAL,CAAoBlF,SAApB,CAA8BmD,GAA9B,CAAkC,KAAKoB,WAAL,CAAiBsE,YAAnD;AACH;AACJ;AACJ,iBA1BD,CApDiF,CA+EjF;;;;AAGA,qBAAK+W,gBAAL,GAAwB,YAAY;AAChC,wBAAI,KAAKI,WAAL,KAAqB,CAAzB,EAA4B;AACxBlhB,+BAAO0E,qBAAP,CAA6B,KAAKoc,gBAAL,CAAsBva,IAAtB,CAA2B,IAA3B,CAA7B;AACH,qBAFD,MAEO;AACH,6BAAKsa,eAAL,CAAqB,KAArB;AACH;AACJ,iBAND;AAOH;AACJ;AACJ,KA9FD,CApzHa,CAm5Hb;AACA;;;AACAjjB,qBAAiBY,QAAjB,CAA0B;AACtBmE,qBAAa4c,cADS;AAEtB3c,uBAAe,gBAFO;AAGtBrC,kBAAU,sBAHY;AAItBuB,gBAAQ;AAJc,KAA1B;AAMC,CA35HC,GAAD","file":"packages/zodiase:mdl-assets/dist/material.js.map","sourcesContent":[";(function() {\n\"use strict\";\n\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A component handler interface using the revealing module design pattern.\n * More details on this design pattern here:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n *\n * @author Jason Mayes.\n */\n/* exported componentHandler */\n\n// Pre-defining the componentHandler interface, for closure documentation and\n// static verification.\nvar componentHandler = {\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   *\n   * @param {string=} optJsClass the programatic name of the element class we\n   * need to create a new instance of.\n   * @param {string=} optCssClass the name of the CSS class elements of this\n   * type will have.\n   */\n  upgradeDom: function(optJsClass, optCssClass) {},\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   *\n   * @param {!Element} element The element we wish to upgrade.\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\n   * the element to.\n   */\n  upgradeElement: function(element, optJsClass) {},\n  /**\n   * Upgrades a specific list of elements rather than all in the DOM.\n   *\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n   * The elements we wish to upgrade.\n   */\n  upgradeElements: function(elements) {},\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  upgradeAllRegistered: function() {},\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   *\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function(!HTMLElement)} callback The function to call upon an\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\n   * got upgraded.\n   */\n  registerUpgradedCallback: function(jsClass, callback) {},\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   *\n   * @param {componentHandler.ComponentConfigPublic} config the registration configuration\n   */\n  register: function(config) {},\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {!Node|!Array<!Node>|!NodeList} nodes\n   */\n  downgradeElements: function(nodes) {}\n};\n\ncomponentHandler = (function() {\n  'use strict';\n\n  /** @type {!Array<componentHandler.ComponentConfig>} */\n  var registeredComponents_ = [];\n\n  /** @type {!Array<componentHandler.Component>} */\n  var createdComponents_ = [];\n\n  var componentConfigProperty_ = 'mdlComponentConfigInternal_';\n\n  /**\n   * Searches registered components for a class we are interested in using.\n   * Optionally replaces a match with passed object if specified.\n   *\n   * @param {string} name The name of a class we want to use.\n   * @param {componentHandler.ComponentConfig=} optReplace Optional object to replace match with.\n   * @return {!Object|boolean}\n   * @private\n   */\n  function findRegisteredClass_(name, optReplace) {\n    for (var i = 0; i < registeredComponents_.length; i++) {\n      if (registeredComponents_[i].className === name) {\n        if (typeof optReplace !== 'undefined') {\n          registeredComponents_[i] = optReplace;\n        }\n        return registeredComponents_[i];\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns an array of the classNames of the upgraded classes on the element.\n   *\n   * @param {!Element} element The element to fetch data from.\n   * @return {!Array<string>}\n   * @private\n   */\n  function getUpgradedListOfElement_(element) {\n    var dataUpgraded = element.getAttribute('data-upgraded');\n    // Use `['']` as default value to conform the `,name,name...` style.\n    return dataUpgraded === null ? [''] : dataUpgraded.split(',');\n  }\n\n  /**\n   * Returns true if the given element has already been upgraded for the given\n   * class.\n   *\n   * @param {!Element} element The element we want to check.\n   * @param {string} jsClass The class to check for.\n   * @returns {boolean}\n   * @private\n   */\n  function isElementUpgraded_(element, jsClass) {\n    var upgradedList = getUpgradedListOfElement_(element);\n    return upgradedList.indexOf(jsClass) !== -1;\n  }\n\n  /**\n   * Create an event object.\n   *\n   * @param {string} eventType The type name of the event.\n   * @param {boolean} bubbles Whether the event should bubble up the DOM.\n   * @param {boolean} cancelable Whether the event can be canceled.\n   * @returns {!Event}\n   */\n  function createEvent_(eventType, bubbles, cancelable) {\n    if ('CustomEvent' in window && typeof window.CustomEvent === 'function') {\n      return new CustomEvent(eventType, {\n        bubbles: bubbles,\n        cancelable: cancelable\n      });\n    } else {\n      var ev = document.createEvent('Events');\n      ev.initEvent(eventType, bubbles, cancelable);\n      return ev;\n    }\n  }\n\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   *\n   * @param {string=} optJsClass the programatic name of the element class we\n   * need to create a new instance of.\n   * @param {string=} optCssClass the name of the CSS class elements of this\n   * type will have.\n   */\n  function upgradeDomInternal(optJsClass, optCssClass) {\n    if (typeof optJsClass === 'undefined' &&\n        typeof optCssClass === 'undefined') {\n      for (var i = 0; i < registeredComponents_.length; i++) {\n        upgradeDomInternal(registeredComponents_[i].className,\n            registeredComponents_[i].cssClass);\n      }\n    } else {\n      var jsClass = /** @type {string} */ (optJsClass);\n      if (typeof optCssClass === 'undefined') {\n        var registeredClass = findRegisteredClass_(jsClass);\n        if (registeredClass) {\n          optCssClass = registeredClass.cssClass;\n        }\n      }\n\n      var elements = document.querySelectorAll('.' + optCssClass);\n      for (var n = 0; n < elements.length; n++) {\n        upgradeElementInternal(elements[n], jsClass);\n      }\n    }\n  }\n\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   *\n   * @param {!Element} element The element we wish to upgrade.\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\n   * the element to.\n   */\n  function upgradeElementInternal(element, optJsClass) {\n    // Verify argument type.\n    if (!(typeof element === 'object' && element instanceof Element)) {\n      throw new Error('Invalid argument provided to upgrade MDL element.');\n    }\n    // Allow upgrade to be canceled by canceling emitted event.\n    var upgradingEv = createEvent_('mdl-componentupgrading', true, true);\n    element.dispatchEvent(upgradingEv);\n    if (upgradingEv.defaultPrevented) {\n      return;\n    }\n\n    var upgradedList = getUpgradedListOfElement_(element);\n    var classesToUpgrade = [];\n    // If jsClass is not provided scan the registered components to find the\n    // ones matching the element's CSS classList.\n    if (!optJsClass) {\n      var classList = element.classList;\n      registeredComponents_.forEach(function(component) {\n        // Match CSS & Not to be upgraded & Not upgraded.\n        if (classList.contains(component.cssClass) &&\n            classesToUpgrade.indexOf(component) === -1 &&\n            !isElementUpgraded_(element, component.className)) {\n          classesToUpgrade.push(component);\n        }\n      });\n    } else if (!isElementUpgraded_(element, optJsClass)) {\n      classesToUpgrade.push(findRegisteredClass_(optJsClass));\n    }\n\n    // Upgrade the element for each classes.\n    for (var i = 0, n = classesToUpgrade.length, registeredClass; i < n; i++) {\n      registeredClass = classesToUpgrade[i];\n      if (registeredClass) {\n        // Mark element as upgraded.\n        upgradedList.push(registeredClass.className);\n        element.setAttribute('data-upgraded', upgradedList.join(','));\n        var instance = new registeredClass.classConstructor(element);\n        instance[componentConfigProperty_] = registeredClass;\n        createdComponents_.push(instance);\n        // Call any callbacks the user has registered with this component type.\n        for (var j = 0, m = registeredClass.callbacks.length; j < m; j++) {\n          registeredClass.callbacks[j](element);\n        }\n\n        if (registeredClass.widget) {\n          // Assign per element instance for control over API\n          element[registeredClass.className] = instance;\n        }\n      } else {\n        throw new Error(\n          'Unable to find a registered component for the given class.');\n      }\n\n      var upgradedEv = createEvent_('mdl-componentupgraded', true, false);\n      element.dispatchEvent(upgradedEv);\n    }\n  }\n\n  /**\n   * Upgrades a specific list of elements rather than all in the DOM.\n   *\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n   * The elements we wish to upgrade.\n   */\n  function upgradeElementsInternal(elements) {\n    if (!Array.isArray(elements)) {\n      if (elements instanceof Element) {\n        elements = [elements];\n      } else {\n        elements = Array.prototype.slice.call(elements);\n      }\n    }\n    for (var i = 0, n = elements.length, element; i < n; i++) {\n      element = elements[i];\n      if (element instanceof HTMLElement) {\n        upgradeElementInternal(element);\n        if (element.children.length > 0) {\n          upgradeElementsInternal(element.children);\n        }\n      }\n    }\n  }\n\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   *\n   * @param {componentHandler.ComponentConfigPublic} config\n   */\n  function registerInternal(config) {\n    // In order to support both Closure-compiled and uncompiled code accessing\n    // this method, we need to allow for both the dot and array syntax for\n    // property access. You'll therefore see the `foo.bar || foo['bar']`\n    // pattern repeated across this method.\n    var widgetMissing = (typeof config.widget === 'undefined' &&\n        typeof config['widget'] === 'undefined');\n    var widget = true;\n\n    if (!widgetMissing) {\n      widget = config.widget || config['widget'];\n    }\n\n    var newConfig = /** @type {componentHandler.ComponentConfig} */ ({\n      classConstructor: config.constructor || config['constructor'],\n      className: config.classAsString || config['classAsString'],\n      cssClass: config.cssClass || config['cssClass'],\n      widget: widget,\n      callbacks: []\n    });\n\n    registeredComponents_.forEach(function(item) {\n      if (item.cssClass === newConfig.cssClass) {\n        throw new Error('The provided cssClass has already been registered: ' + item.cssClass);\n      }\n      if (item.className === newConfig.className) {\n        throw new Error('The provided className has already been registered');\n      }\n    });\n\n    if (config.constructor.prototype\n        .hasOwnProperty(componentConfigProperty_)) {\n      throw new Error(\n          'MDL component classes must not have ' + componentConfigProperty_ +\n          ' defined as a property.');\n    }\n\n    var found = findRegisteredClass_(config.classAsString, newConfig);\n\n    if (!found) {\n      registeredComponents_.push(newConfig);\n    }\n  }\n\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   *\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function(!HTMLElement)} callback The function to call upon an\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\n   * got upgraded.\n   */\n  function registerUpgradedCallbackInternal(jsClass, callback) {\n    var regClass = findRegisteredClass_(jsClass);\n    if (regClass) {\n      regClass.callbacks.push(callback);\n    }\n  }\n\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  function upgradeAllRegisteredInternal() {\n    for (var n = 0; n < registeredComponents_.length; n++) {\n      upgradeDomInternal(registeredComponents_[n].className);\n    }\n  }\n\n  /**\n   * Check the component for the downgrade method.\n   * Execute if found.\n   * Remove component from createdComponents list.\n   *\n   * @param {?componentHandler.Component} component\n   */\n  function deconstructComponentInternal(component) {\n    if (component) {\n      var componentIndex = createdComponents_.indexOf(component);\n      createdComponents_.splice(componentIndex, 1);\n\n      var upgrades = component.element_.getAttribute('data-upgraded').split(',');\n      var componentPlace = upgrades.indexOf(component[componentConfigProperty_].classAsString);\n      upgrades.splice(componentPlace, 1);\n      component.element_.setAttribute('data-upgraded', upgrades.join(','));\n\n      var ev = createEvent_('mdl-componentdowngraded', true, false);\n      component.element_.dispatchEvent(ev);\n    }\n  }\n\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {!Node|!Array<!Node>|!NodeList} nodes\n   */\n  function downgradeNodesInternal(nodes) {\n    /**\n     * Auxiliary function to downgrade a single node.\n     * @param  {!Node} node the node to be downgraded\n     */\n    var downgradeNode = function(node) {\n      createdComponents_.filter(function(item) {\n        return item.element_ === node;\n      }).forEach(deconstructComponentInternal);\n    };\n    if (nodes instanceof Array || nodes instanceof NodeList) {\n      for (var n = 0; n < nodes.length; n++) {\n        downgradeNode(nodes[n]);\n      }\n    } else if (nodes instanceof Node) {\n      downgradeNode(nodes);\n    } else {\n      throw new Error('Invalid argument provided to downgrade MDL nodes.');\n    }\n  }\n\n  // Now return the functions that should be made public with their publicly\n  // facing names...\n  return {\n    upgradeDom: upgradeDomInternal,\n    upgradeElement: upgradeElementInternal,\n    upgradeElements: upgradeElementsInternal,\n    upgradeAllRegistered: upgradeAllRegisteredInternal,\n    registerUpgradedCallback: registerUpgradedCallbackInternal,\n    register: registerInternal,\n    downgradeElements: downgradeNodesInternal\n  };\n})();\n\n/**\n * Describes the type of a registered component type managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   constructor: Function,\n *   classAsString: string,\n *   cssClass: string,\n *   widget: (string|boolean|undefined)\n * }}\n */\ncomponentHandler.ComponentConfigPublic;  // jshint ignore:line\n\n/**\n * Describes the type of a registered component type managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   constructor: !Function,\n *   className: string,\n *   cssClass: string,\n *   widget: (string|boolean),\n *   callbacks: !Array<function(!HTMLElement)>\n * }}\n */\ncomponentHandler.ComponentConfig;  // jshint ignore:line\n\n/**\n * Created component (i.e., upgraded element) type as managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   element_: !HTMLElement,\n *   className: string,\n *   classAsString: string,\n *   cssClass: string,\n *   widget: string\n * }}\n */\ncomponentHandler.Component;  // jshint ignore:line\n\n// Export all symbols, for the benefit of Closure compiler.\n// No effect on uncompiled code.\ncomponentHandler['upgradeDom'] = componentHandler.upgradeDom;\ncomponentHandler['upgradeElement'] = componentHandler.upgradeElement;\ncomponentHandler['upgradeElements'] = componentHandler.upgradeElements;\ncomponentHandler['upgradeAllRegistered'] =\n    componentHandler.upgradeAllRegistered;\ncomponentHandler['registerUpgradedCallback'] =\n    componentHandler.registerUpgradedCallback;\ncomponentHandler['register'] = componentHandler.register;\ncomponentHandler['downgradeElements'] = componentHandler.downgradeElements;\nwindow.componentHandler = componentHandler;\nwindow['componentHandler'] = componentHandler;\n\nwindow.addEventListener('load', function() {\n  'use strict';\n\n  /**\n   * Performs a \"Cutting the mustard\" test. If the browser supports the features\n   * tested, adds a mdl-js class to the <html> element. It then upgrades all MDL\n   * components requiring JavaScript.\n   */\n  if ('classList' in document.createElement('div') &&\n      'querySelector' in document &&\n      'addEventListener' in window && Array.prototype.forEach) {\n    document.documentElement.classList.add('mdl-js');\n    componentHandler.upgradeAllRegistered();\n  } else {\n    /**\n     * Dummy function to avoid JS errors.\n     */\n    componentHandler.upgradeElement = function() {};\n    /**\n     * Dummy function to avoid JS errors.\n     */\n    componentHandler.register = function() {};\n  }\n});\n\n// Source: https://github.com/darius/requestAnimationFrame/blob/master/requestAnimationFrame.js\n// Adapted from https://gist.github.com/paulirish/1579671 which derived from\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n// requestAnimationFrame polyfill by Erik Möller.\n// Fixes from Paul Irish, Tino Zijdel, Andrew Mao, Klemen Slavič, Darius Bacon\n// MIT license\nif (!Date.now) {\n    /**\n     * Date.now polyfill.\n     * @return {number} the current Date\n     */\n    Date.now = function () {\n        return new Date().getTime();\n    };\n    Date['now'] = Date.now;\n}\nvar vendors = [\n    'webkit',\n    'moz'\n];\nfor (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n    var vp = vendors[i];\n    window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];\n    window.cancelAnimationFrame = window[vp + 'CancelAnimationFrame'] || window[vp + 'CancelRequestAnimationFrame'];\n    window['requestAnimationFrame'] = window.requestAnimationFrame;\n    window['cancelAnimationFrame'] = window.cancelAnimationFrame;\n}\nif (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n    var lastTime = 0;\n    /**\n     * requestAnimationFrame polyfill.\n     * @param  {!Function} callback the callback function.\n     */\n    window.requestAnimationFrame = function (callback) {\n        var now = Date.now();\n        var nextTime = Math.max(lastTime + 16, now);\n        return setTimeout(function () {\n            callback(lastTime = nextTime);\n        }, nextTime - now);\n    };\n    window.cancelAnimationFrame = clearTimeout;\n    window['requestAnimationFrame'] = window.requestAnimationFrame;\n    window['cancelAnimationFrame'] = window.cancelAnimationFrame;\n}\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Button MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialButton = function MaterialButton(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialButton'] = MaterialButton;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialButton.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialButton.prototype.CssClasses_ = {\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-button__ripple-container',\n    RIPPLE: 'mdl-ripple'\n};\n/**\n   * Handle blur of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialButton.prototype.blurHandler_ = function (event) {\n    if (event) {\n        this.element_.blur();\n    }\n};\n// Public methods.\n/**\n   * Disable button.\n   *\n   * @public\n   */\nMaterialButton.prototype.disable = function () {\n    this.element_.disabled = true;\n};\nMaterialButton.prototype['disable'] = MaterialButton.prototype.disable;\n/**\n   * Enable button.\n   *\n   * @public\n   */\nMaterialButton.prototype.enable = function () {\n    this.element_.disabled = false;\n};\nMaterialButton.prototype['enable'] = MaterialButton.prototype.enable;\n/**\n   * Initialize element.\n   */\nMaterialButton.prototype.init = function () {\n    if (this.element_) {\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            var rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleElement_ = document.createElement('span');\n            this.rippleElement_.classList.add(this.CssClasses_.RIPPLE);\n            rippleContainer.appendChild(this.rippleElement_);\n            this.boundRippleBlurHandler = this.blurHandler_.bind(this);\n            this.rippleElement_.addEventListener('mouseup', this.boundRippleBlurHandler);\n            this.element_.appendChild(rippleContainer);\n        }\n        this.boundButtonBlurHandler = this.blurHandler_.bind(this);\n        this.element_.addEventListener('mouseup', this.boundButtonBlurHandler);\n        this.element_.addEventListener('mouseleave', this.boundButtonBlurHandler);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialButton,\n    classAsString: 'MaterialButton',\n    cssClass: 'mdl-js-button',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Checkbox MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialCheckbox = function MaterialCheckbox(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialCheckbox'] = MaterialCheckbox;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialCheckbox.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialCheckbox.prototype.CssClasses_ = {\n    INPUT: 'mdl-checkbox__input',\n    BOX_OUTLINE: 'mdl-checkbox__box-outline',\n    FOCUS_HELPER: 'mdl-checkbox__focus-helper',\n    TICK_OUTLINE: 'mdl-checkbox__tick-outline',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-checkbox__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onChange_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onMouseUp_ = function (event) {\n    this.blur_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialCheckbox.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialCheckbox.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.inputElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the inputs toggle state and update display.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialCheckbox.prototype['checkToggleState'] = MaterialCheckbox.prototype.checkToggleState;\n/**\n   * Check the inputs disabled state and update display.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialCheckbox.prototype['checkDisabled'] = MaterialCheckbox.prototype.checkDisabled;\n/**\n   * Disable checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['disable'] = MaterialCheckbox.prototype.disable;\n/**\n   * Enable checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['enable'] = MaterialCheckbox.prototype.enable;\n/**\n   * Check checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.check = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['check'] = MaterialCheckbox.prototype.check;\n/**\n   * Uncheck checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.uncheck = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['uncheck'] = MaterialCheckbox.prototype.uncheck;\n/**\n   * Initialize element.\n   */\nMaterialCheckbox.prototype.init = function () {\n    if (this.element_) {\n        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        var boxOutline = document.createElement('span');\n        boxOutline.classList.add(this.CssClasses_.BOX_OUTLINE);\n        var tickContainer = document.createElement('span');\n        tickContainer.classList.add(this.CssClasses_.FOCUS_HELPER);\n        var tickOutline = document.createElement('span');\n        tickOutline.classList.add(this.CssClasses_.TICK_OUTLINE);\n        boxOutline.appendChild(tickOutline);\n        this.element_.appendChild(tickContainer);\n        this.element_.appendChild(boxOutline);\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            this.rippleContainerElement_ = document.createElement('span');\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n            this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            this.rippleContainerElement_.appendChild(ripple);\n            this.element_.appendChild(this.rippleContainerElement_);\n        }\n        this.boundInputOnChange = this.onChange_.bind(this);\n        this.boundInputOnFocus = this.onFocus_.bind(this);\n        this.boundInputOnBlur = this.onBlur_.bind(this);\n        this.boundElementMouseUp = this.onMouseUp_.bind(this);\n        this.inputElement_.addEventListener('change', this.boundInputOnChange);\n        this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n        this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n        this.element_.addEventListener('mouseup', this.boundElementMouseUp);\n        this.updateClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialCheckbox,\n    classAsString: 'MaterialCheckbox',\n    cssClass: 'mdl-js-checkbox',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for icon toggle MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialIconToggle = function MaterialIconToggle(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialIconToggle'] = MaterialIconToggle;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialIconToggle.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialIconToggle.prototype.CssClasses_ = {\n    INPUT: 'mdl-icon-toggle__input',\n    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-icon-toggle__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onChange_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onMouseUp_ = function (event) {\n    this.blur_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialIconToggle.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialIconToggle.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.inputElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the inputs toggle state and update display.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialIconToggle.prototype['checkToggleState'] = MaterialIconToggle.prototype.checkToggleState;\n/**\n   * Check the inputs disabled state and update display.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialIconToggle.prototype['checkDisabled'] = MaterialIconToggle.prototype.checkDisabled;\n/**\n   * Disable icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['disable'] = MaterialIconToggle.prototype.disable;\n/**\n   * Enable icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['enable'] = MaterialIconToggle.prototype.enable;\n/**\n   * Check icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.check = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['check'] = MaterialIconToggle.prototype.check;\n/**\n   * Uncheck icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.uncheck = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['uncheck'] = MaterialIconToggle.prototype.uncheck;\n/**\n   * Initialize element.\n   */\nMaterialIconToggle.prototype.init = function () {\n    if (this.element_) {\n        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        if (this.element_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            this.rippleContainerElement_ = document.createElement('span');\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.JS_RIPPLE_EFFECT);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n            this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            this.rippleContainerElement_.appendChild(ripple);\n            this.element_.appendChild(this.rippleContainerElement_);\n        }\n        this.boundInputOnChange = this.onChange_.bind(this);\n        this.boundInputOnFocus = this.onFocus_.bind(this);\n        this.boundInputOnBlur = this.onBlur_.bind(this);\n        this.boundElementOnMouseUp = this.onMouseUp_.bind(this);\n        this.inputElement_.addEventListener('change', this.boundInputOnChange);\n        this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n        this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n        this.element_.addEventListener('mouseup', this.boundElementOnMouseUp);\n        this.updateClasses_();\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialIconToggle,\n    classAsString: 'MaterialIconToggle',\n    cssClass: 'mdl-js-icon-toggle',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for dropdown MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialMenu = function MaterialMenu(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialMenu'] = MaterialMenu;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialMenu.prototype.Constant_ = {\n    // Total duration of the menu animation.\n    TRANSITION_DURATION_SECONDS: 0.3,\n    // The fraction of the total duration we want to use for menu item animations.\n    TRANSITION_DURATION_FRACTION: 0.8,\n    // How long the menu stays open after choosing an option (so the user can see\n    // the ripple).\n    CLOSE_TIMEOUT: 150\n};\n/**\n   * Keycodes, for code readability.\n   *\n   * @enum {number}\n   * @private\n   */\nMaterialMenu.prototype.Keycodes_ = {\n    ENTER: 13,\n    ESCAPE: 27,\n    SPACE: 32,\n    UP_ARROW: 38,\n    DOWN_ARROW: 40\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialMenu.prototype.CssClasses_ = {\n    CONTAINER: 'mdl-menu__container',\n    OUTLINE: 'mdl-menu__outline',\n    ITEM: 'mdl-menu__item',\n    ITEM_RIPPLE_CONTAINER: 'mdl-menu__item-ripple-container',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    // Statuses\n    IS_UPGRADED: 'is-upgraded',\n    IS_VISIBLE: 'is-visible',\n    IS_ANIMATING: 'is-animating',\n    // Alignment options\n    BOTTOM_LEFT: 'mdl-menu--bottom-left',\n    // This is the default.\n    BOTTOM_RIGHT: 'mdl-menu--bottom-right',\n    TOP_LEFT: 'mdl-menu--top-left',\n    TOP_RIGHT: 'mdl-menu--top-right',\n    UNALIGNED: 'mdl-menu--unaligned'\n};\n/**\n   * Initialize element.\n   */\nMaterialMenu.prototype.init = function () {\n    if (this.element_) {\n        // Create container for the menu.\n        var container = document.createElement('div');\n        container.classList.add(this.CssClasses_.CONTAINER);\n        this.element_.parentElement.insertBefore(container, this.element_);\n        this.element_.parentElement.removeChild(this.element_);\n        container.appendChild(this.element_);\n        this.container_ = container;\n        // Create outline for the menu (shadow and background).\n        var outline = document.createElement('div');\n        outline.classList.add(this.CssClasses_.OUTLINE);\n        this.outline_ = outline;\n        container.insertBefore(outline, this.element_);\n        // Find the \"for\" element and bind events to it.\n        var forElId = this.element_.getAttribute('for') || this.element_.getAttribute('data-mdl-for');\n        var forEl = null;\n        if (forElId) {\n            forEl = document.getElementById(forElId);\n            if (forEl) {\n                this.forElement_ = forEl;\n                forEl.addEventListener('click', this.handleForClick_.bind(this));\n                forEl.addEventListener('keydown', this.handleForKeyboardEvent_.bind(this));\n            }\n        }\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        this.boundItemKeydown_ = this.handleItemKeyboardEvent_.bind(this);\n        this.boundItemClick_ = this.handleItemClick_.bind(this);\n        for (var i = 0; i < items.length; i++) {\n            // Add a listener to each menu item.\n            items[i].addEventListener('click', this.boundItemClick_);\n            // Add a tab index to each menu item.\n            items[i].tabIndex = '-1';\n            // Add a keyboard listener to each menu item.\n            items[i].addEventListener('keydown', this.boundItemKeydown_);\n        }\n        // Add ripple classes to each item, if the user has enabled ripples.\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            for (i = 0; i < items.length; i++) {\n                var item = items[i];\n                var rippleContainer = document.createElement('span');\n                rippleContainer.classList.add(this.CssClasses_.ITEM_RIPPLE_CONTAINER);\n                var ripple = document.createElement('span');\n                ripple.classList.add(this.CssClasses_.RIPPLE);\n                rippleContainer.appendChild(ripple);\n                item.appendChild(rippleContainer);\n                item.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            }\n        }\n        // Copy alignment classes to the container, so the outline can use them.\n        if (this.element_.classList.contains(this.CssClasses_.BOTTOM_LEFT)) {\n            this.outline_.classList.add(this.CssClasses_.BOTTOM_LEFT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n            this.outline_.classList.add(this.CssClasses_.BOTTOM_RIGHT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n            this.outline_.classList.add(this.CssClasses_.TOP_LEFT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n            this.outline_.classList.add(this.CssClasses_.TOP_RIGHT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n            this.outline_.classList.add(this.CssClasses_.UNALIGNED);\n        }\n        container.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n/**\n   * Handles a click on the \"for\" element, by positioning the menu and then\n   * toggling it.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleForClick_ = function (evt) {\n    if (this.element_ && this.forElement_) {\n        var rect = this.forElement_.getBoundingClientRect();\n        var forRect = this.forElement_.parentElement.getBoundingClientRect();\n        if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n        } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n            // Position below the \"for\" element, aligned to its right.\n            this.container_.style.right = forRect.right - rect.right + 'px';\n            this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n        } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n            // Position above the \"for\" element, aligned to its left.\n            this.container_.style.left = this.forElement_.offsetLeft + 'px';\n            this.container_.style.bottom = forRect.bottom - rect.top + 'px';\n        } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n            // Position above the \"for\" element, aligned to its right.\n            this.container_.style.right = forRect.right - rect.right + 'px';\n            this.container_.style.bottom = forRect.bottom - rect.top + 'px';\n        } else {\n            // Default: position below the \"for\" element, aligned to its left.\n            this.container_.style.left = this.forElement_.offsetLeft + 'px';\n            this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n        }\n    }\n    this.toggle(evt);\n};\n/**\n   * Handles a keyboard event on the \"for\" element.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleForKeyboardEvent_ = function (evt) {\n    if (this.element_ && this.container_ && this.forElement_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM + ':not([disabled])');\n        if (items && items.length > 0 && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n            if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n                evt.preventDefault();\n                items[items.length - 1].focus();\n            } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n                evt.preventDefault();\n                items[0].focus();\n            }\n        }\n    }\n};\n/**\n   * Handles a keyboard event on an item.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleItemKeyboardEvent_ = function (evt) {\n    if (this.element_ && this.container_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM + ':not([disabled])');\n        if (items && items.length > 0 && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n            var currentIndex = Array.prototype.slice.call(items).indexOf(evt.target);\n            if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n                evt.preventDefault();\n                if (currentIndex > 0) {\n                    items[currentIndex - 1].focus();\n                } else {\n                    items[items.length - 1].focus();\n                }\n            } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n                evt.preventDefault();\n                if (items.length > currentIndex + 1) {\n                    items[currentIndex + 1].focus();\n                } else {\n                    items[0].focus();\n                }\n            } else if (evt.keyCode === this.Keycodes_.SPACE || evt.keyCode === this.Keycodes_.ENTER) {\n                evt.preventDefault();\n                // Send mousedown and mouseup to trigger ripple.\n                var e = new MouseEvent('mousedown');\n                evt.target.dispatchEvent(e);\n                e = new MouseEvent('mouseup');\n                evt.target.dispatchEvent(e);\n                // Send click.\n                evt.target.click();\n            } else if (evt.keyCode === this.Keycodes_.ESCAPE) {\n                evt.preventDefault();\n                this.hide();\n            }\n        }\n    }\n};\n/**\n   * Handles a click event on an item.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleItemClick_ = function (evt) {\n    if (evt.target.hasAttribute('disabled')) {\n        evt.stopPropagation();\n    } else {\n        // Wait some time before closing menu, so the user can see the ripple.\n        this.closing_ = true;\n        window.setTimeout(function (evt) {\n            this.hide();\n            this.closing_ = false;\n        }.bind(this), this.Constant_.CLOSE_TIMEOUT);\n    }\n};\n/**\n   * Calculates the initial clip (for opening the menu) or final clip (for closing\n   * it), and applies it. This allows us to animate from or to the correct point,\n   * that is, the point it's aligned to in the \"for\" element.\n   *\n   * @param {number} height Height of the clip rectangle\n   * @param {number} width Width of the clip rectangle\n   * @private\n   */\nMaterialMenu.prototype.applyClip_ = function (height, width) {\n    if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n        // Do not clip.\n        this.element_.style.clip = '';\n    } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n        // Clip to the top right corner of the menu.\n        this.element_.style.clip = 'rect(0 ' + width + 'px ' + '0 ' + width + 'px)';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n        // Clip to the bottom left corner of the menu.\n        this.element_.style.clip = 'rect(' + height + 'px 0 ' + height + 'px 0)';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n        // Clip to the bottom right corner of the menu.\n        this.element_.style.clip = 'rect(' + height + 'px ' + width + 'px ' + height + 'px ' + width + 'px)';\n    } else {\n        // Default: do not clip (same as clipping to the top left corner).\n        this.element_.style.clip = '';\n    }\n};\n/**\n   * Cleanup function to remove animation listeners.\n   *\n   * @param {Event} evt\n   * @private\n   */\nMaterialMenu.prototype.removeAnimationEndListener_ = function (evt) {\n    evt.target.classList.remove(MaterialMenu.prototype.CssClasses_.IS_ANIMATING);\n};\n/**\n   * Adds an event listener to clean up after the animation ends.\n   *\n   * @private\n   */\nMaterialMenu.prototype.addAnimationEndListener_ = function () {\n    this.element_.addEventListener('transitionend', this.removeAnimationEndListener_);\n    this.element_.addEventListener('webkitTransitionEnd', this.removeAnimationEndListener_);\n};\n/**\n   * Displays the menu.\n   *\n   * @public\n   */\nMaterialMenu.prototype.show = function (evt) {\n    if (this.element_ && this.container_ && this.outline_) {\n        // Measure the inner element.\n        var height = this.element_.getBoundingClientRect().height;\n        var width = this.element_.getBoundingClientRect().width;\n        // Apply the inner element's size to the container and outline.\n        this.container_.style.width = width + 'px';\n        this.container_.style.height = height + 'px';\n        this.outline_.style.width = width + 'px';\n        this.outline_.style.height = height + 'px';\n        var transitionDuration = this.Constant_.TRANSITION_DURATION_SECONDS * this.Constant_.TRANSITION_DURATION_FRACTION;\n        // Calculate transition delays for individual menu items, so that they fade\n        // in one at a time.\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        for (var i = 0; i < items.length; i++) {\n            var itemDelay = null;\n            if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT) || this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n                itemDelay = (height - items[i].offsetTop - items[i].offsetHeight) / height * transitionDuration + 's';\n            } else {\n                itemDelay = items[i].offsetTop / height * transitionDuration + 's';\n            }\n            items[i].style.transitionDelay = itemDelay;\n        }\n        // Apply the initial clip to the text before we start animating.\n        this.applyClip_(height, width);\n        // Wait for the next frame, turn on animation, and apply the final clip.\n        // Also make it visible. This triggers the transitions.\n        window.requestAnimationFrame(function () {\n            this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n            this.element_.style.clip = 'rect(0 ' + width + 'px ' + height + 'px 0)';\n            this.container_.classList.add(this.CssClasses_.IS_VISIBLE);\n        }.bind(this));\n        // Clean up after the animation is complete.\n        this.addAnimationEndListener_();\n        // Add a click listener to the document, to close the menu.\n        var callback = function (e) {\n            // Check to see if the document is processing the same event that\n            // displayed the menu in the first place. If so, do nothing.\n            // Also check to see if the menu is in the process of closing itself, and\n            // do nothing in that case.\n            // Also check if the clicked element is a menu item\n            // if so, do nothing.\n            if (e !== evt && !this.closing_ && e.target.parentNode !== this.element_) {\n                document.removeEventListener('click', callback);\n                this.hide();\n            }\n        }.bind(this);\n        document.addEventListener('click', callback);\n    }\n};\nMaterialMenu.prototype['show'] = MaterialMenu.prototype.show;\n/**\n   * Hides the menu.\n   *\n   * @public\n   */\nMaterialMenu.prototype.hide = function () {\n    if (this.element_ && this.container_ && this.outline_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        // Remove all transition delays; menu items fade out concurrently.\n        for (var i = 0; i < items.length; i++) {\n            items[i].style.removeProperty('transition-delay');\n        }\n        // Measure the inner element.\n        var rect = this.element_.getBoundingClientRect();\n        var height = rect.height;\n        var width = rect.width;\n        // Turn on animation, and apply the final clip. Also make invisible.\n        // This triggers the transitions.\n        this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n        this.applyClip_(height, width);\n        this.container_.classList.remove(this.CssClasses_.IS_VISIBLE);\n        // Clean up after the animation is complete.\n        this.addAnimationEndListener_();\n    }\n};\nMaterialMenu.prototype['hide'] = MaterialMenu.prototype.hide;\n/**\n   * Displays or hides the menu, depending on current state.\n   *\n   * @public\n   */\nMaterialMenu.prototype.toggle = function (evt) {\n    if (this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n        this.hide();\n    } else {\n        this.show(evt);\n    }\n};\nMaterialMenu.prototype['toggle'] = MaterialMenu.prototype.toggle;\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialMenu,\n    classAsString: 'MaterialMenu',\n    cssClass: 'mdl-js-menu',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Progress MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialProgress = function MaterialProgress(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialProgress'] = MaterialProgress;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialProgress.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialProgress.prototype.CssClasses_ = { INDETERMINATE_CLASS: 'mdl-progress__indeterminate' };\n/**\n   * Set the current progress of the progressbar.\n   *\n   * @param {number} p Percentage of the progress (0-100)\n   * @public\n   */\nMaterialProgress.prototype.setProgress = function (p) {\n    if (this.element_.classList.contains(this.CssClasses_.INDETERMINATE_CLASS)) {\n        return;\n    }\n    this.progressbar_.style.width = p + '%';\n};\nMaterialProgress.prototype['setProgress'] = MaterialProgress.prototype.setProgress;\n/**\n   * Set the current progress of the buffer.\n   *\n   * @param {number} p Percentage of the buffer (0-100)\n   * @public\n   */\nMaterialProgress.prototype.setBuffer = function (p) {\n    this.bufferbar_.style.width = p + '%';\n    this.auxbar_.style.width = 100 - p + '%';\n};\nMaterialProgress.prototype['setBuffer'] = MaterialProgress.prototype.setBuffer;\n/**\n   * Initialize element.\n   */\nMaterialProgress.prototype.init = function () {\n    if (this.element_) {\n        var el = document.createElement('div');\n        el.className = 'progressbar bar bar1';\n        this.element_.appendChild(el);\n        this.progressbar_ = el;\n        el = document.createElement('div');\n        el.className = 'bufferbar bar bar2';\n        this.element_.appendChild(el);\n        this.bufferbar_ = el;\n        el = document.createElement('div');\n        el.className = 'auxbar bar bar3';\n        this.element_.appendChild(el);\n        this.auxbar_ = el;\n        this.progressbar_.style.width = '0%';\n        this.bufferbar_.style.width = '100%';\n        this.auxbar_.style.width = '0%';\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialProgress,\n    classAsString: 'MaterialProgress',\n    cssClass: 'mdl-js-progress',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Radio MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialRadio = function MaterialRadio(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialRadio'] = MaterialRadio;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialRadio.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialRadio.prototype.CssClasses_ = {\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked',\n    IS_UPGRADED: 'is-upgraded',\n    JS_RADIO: 'mdl-js-radio',\n    RADIO_BTN: 'mdl-radio__button',\n    RADIO_OUTER_CIRCLE: 'mdl-radio__outer-circle',\n    RADIO_INNER_CIRCLE: 'mdl-radio__inner-circle',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-radio__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onChange_ = function (event) {\n    // Since other radio buttons don't get change events, we need to look for\n    // them to update their classes.\n    var radios = document.getElementsByClassName(this.CssClasses_.JS_RADIO);\n    for (var i = 0; i < radios.length; i++) {\n        var button = radios[i].querySelector('.' + this.CssClasses_.RADIO_BTN);\n        // Different name == different group, so no point updating those.\n        if (button.getAttribute('name') === this.btnElement_.getAttribute('name')) {\n            if (typeof radios[i]['MaterialRadio'] !== 'undefined') {\n                radios[i]['MaterialRadio'].updateClasses_();\n            }\n        }\n    }\n};\n/**\n   * Handle focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onMouseup_ = function (event) {\n    this.blur_();\n};\n/**\n   * Update classes.\n   *\n   * @private\n   */\nMaterialRadio.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialRadio.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.btnElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the components disabled state.\n   *\n   * @public\n   */\nMaterialRadio.prototype.checkDisabled = function () {\n    if (this.btnElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialRadio.prototype['checkDisabled'] = MaterialRadio.prototype.checkDisabled;\n/**\n   * Check the components toggled state.\n   *\n   * @public\n   */\nMaterialRadio.prototype.checkToggleState = function () {\n    if (this.btnElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialRadio.prototype['checkToggleState'] = MaterialRadio.prototype.checkToggleState;\n/**\n   * Disable radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.disable = function () {\n    this.btnElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialRadio.prototype['disable'] = MaterialRadio.prototype.disable;\n/**\n   * Enable radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.enable = function () {\n    this.btnElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialRadio.prototype['enable'] = MaterialRadio.prototype.enable;\n/**\n   * Check radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.check = function () {\n    this.btnElement_.checked = true;\n    this.onChange_(null);\n};\nMaterialRadio.prototype['check'] = MaterialRadio.prototype.check;\n/**\n   * Uncheck radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.uncheck = function () {\n    this.btnElement_.checked = false;\n    this.onChange_(null);\n};\nMaterialRadio.prototype['uncheck'] = MaterialRadio.prototype.uncheck;\n/**\n   * Initialize element.\n   */\nMaterialRadio.prototype.init = function () {\n    if (this.element_) {\n        this.btnElement_ = this.element_.querySelector('.' + this.CssClasses_.RADIO_BTN);\n        this.boundChangeHandler_ = this.onChange_.bind(this);\n        this.boundFocusHandler_ = this.onChange_.bind(this);\n        this.boundBlurHandler_ = this.onBlur_.bind(this);\n        this.boundMouseUpHandler_ = this.onMouseup_.bind(this);\n        var outerCircle = document.createElement('span');\n        outerCircle.classList.add(this.CssClasses_.RADIO_OUTER_CIRCLE);\n        var innerCircle = document.createElement('span');\n        innerCircle.classList.add(this.CssClasses_.RADIO_INNER_CIRCLE);\n        this.element_.appendChild(outerCircle);\n        this.element_.appendChild(innerCircle);\n        var rippleContainer;\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            rippleContainer.addEventListener('mouseup', this.boundMouseUpHandler_);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            rippleContainer.appendChild(ripple);\n            this.element_.appendChild(rippleContainer);\n        }\n        this.btnElement_.addEventListener('change', this.boundChangeHandler_);\n        this.btnElement_.addEventListener('focus', this.boundFocusHandler_);\n        this.btnElement_.addEventListener('blur', this.boundBlurHandler_);\n        this.element_.addEventListener('mouseup', this.boundMouseUpHandler_);\n        this.updateClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialRadio,\n    classAsString: 'MaterialRadio',\n    cssClass: 'mdl-js-radio',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Slider MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialSlider = function MaterialSlider(element) {\n    this.element_ = element;\n    // Browser feature detection.\n    this.isIE_ = window.navigator.msPointerEnabled;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialSlider'] = MaterialSlider;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialSlider.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSlider.prototype.CssClasses_ = {\n    IE_CONTAINER: 'mdl-slider__ie-container',\n    SLIDER_CONTAINER: 'mdl-slider__container',\n    BACKGROUND_FLEX: 'mdl-slider__background-flex',\n    BACKGROUND_LOWER: 'mdl-slider__background-lower',\n    BACKGROUND_UPPER: 'mdl-slider__background-upper',\n    IS_LOWEST_VALUE: 'is-lowest-value',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Handle input on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSlider.prototype.onInput_ = function (event) {\n    this.updateValueStyles_();\n};\n/**\n   * Handle change on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSlider.prototype.onChange_ = function (event) {\n    this.updateValueStyles_();\n};\n/**\n   * Handle mouseup on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSlider.prototype.onMouseUp_ = function (event) {\n    event.target.blur();\n};\n/**\n   * Handle mousedown on container element.\n   * This handler is purpose is to not require the use to click\n   * exactly on the 2px slider element, as FireFox seems to be very\n   * strict about this.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   * @suppress {missingProperties}\n   */\nMaterialSlider.prototype.onContainerMouseDown_ = function (event) {\n    // If this click is not on the parent element (but rather some child)\n    // ignore. It may still bubble up.\n    if (event.target !== this.element_.parentElement) {\n        return;\n    }\n    // Discard the original event and create a new event that\n    // is on the slider element.\n    event.preventDefault();\n    var newEvent = new MouseEvent('mousedown', {\n        target: event.target,\n        buttons: event.buttons,\n        clientX: event.clientX,\n        clientY: this.element_.getBoundingClientRect().y\n    });\n    this.element_.dispatchEvent(newEvent);\n};\n/**\n   * Handle updating of values.\n   *\n   * @private\n   */\nMaterialSlider.prototype.updateValueStyles_ = function () {\n    // Calculate and apply percentages to div structure behind slider.\n    var fraction = (this.element_.value - this.element_.min) / (this.element_.max - this.element_.min);\n    if (fraction === 0) {\n        this.element_.classList.add(this.CssClasses_.IS_LOWEST_VALUE);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_LOWEST_VALUE);\n    }\n    if (!this.isIE_) {\n        this.backgroundLower_.style.flex = fraction;\n        this.backgroundLower_.style.webkitFlex = fraction;\n        this.backgroundUpper_.style.flex = 1 - fraction;\n        this.backgroundUpper_.style.webkitFlex = 1 - fraction;\n    }\n};\n// Public methods.\n/**\n   * Disable slider.\n   *\n   * @public\n   */\nMaterialSlider.prototype.disable = function () {\n    this.element_.disabled = true;\n};\nMaterialSlider.prototype['disable'] = MaterialSlider.prototype.disable;\n/**\n   * Enable slider.\n   *\n   * @public\n   */\nMaterialSlider.prototype.enable = function () {\n    this.element_.disabled = false;\n};\nMaterialSlider.prototype['enable'] = MaterialSlider.prototype.enable;\n/**\n   * Update slider value.\n   *\n   * @param {number} value The value to which to set the control (optional).\n   * @public\n   */\nMaterialSlider.prototype.change = function (value) {\n    if (typeof value !== 'undefined') {\n        this.element_.value = value;\n    }\n    this.updateValueStyles_();\n};\nMaterialSlider.prototype['change'] = MaterialSlider.prototype.change;\n/**\n   * Initialize element.\n   */\nMaterialSlider.prototype.init = function () {\n    if (this.element_) {\n        if (this.isIE_) {\n            // Since we need to specify a very large height in IE due to\n            // implementation limitations, we add a parent here that trims it down to\n            // a reasonable size.\n            var containerIE = document.createElement('div');\n            containerIE.classList.add(this.CssClasses_.IE_CONTAINER);\n            this.element_.parentElement.insertBefore(containerIE, this.element_);\n            this.element_.parentElement.removeChild(this.element_);\n            containerIE.appendChild(this.element_);\n        } else {\n            // For non-IE browsers, we need a div structure that sits behind the\n            // slider and allows us to style the left and right sides of it with\n            // different colors.\n            var container = document.createElement('div');\n            container.classList.add(this.CssClasses_.SLIDER_CONTAINER);\n            this.element_.parentElement.insertBefore(container, this.element_);\n            this.element_.parentElement.removeChild(this.element_);\n            container.appendChild(this.element_);\n            var backgroundFlex = document.createElement('div');\n            backgroundFlex.classList.add(this.CssClasses_.BACKGROUND_FLEX);\n            container.appendChild(backgroundFlex);\n            this.backgroundLower_ = document.createElement('div');\n            this.backgroundLower_.classList.add(this.CssClasses_.BACKGROUND_LOWER);\n            backgroundFlex.appendChild(this.backgroundLower_);\n            this.backgroundUpper_ = document.createElement('div');\n            this.backgroundUpper_.classList.add(this.CssClasses_.BACKGROUND_UPPER);\n            backgroundFlex.appendChild(this.backgroundUpper_);\n        }\n        this.boundInputHandler = this.onInput_.bind(this);\n        this.boundChangeHandler = this.onChange_.bind(this);\n        this.boundMouseUpHandler = this.onMouseUp_.bind(this);\n        this.boundContainerMouseDownHandler = this.onContainerMouseDown_.bind(this);\n        this.element_.addEventListener('input', this.boundInputHandler);\n        this.element_.addEventListener('change', this.boundChangeHandler);\n        this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\n        this.element_.parentElement.addEventListener('mousedown', this.boundContainerMouseDownHandler);\n        this.updateValueStyles_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSlider,\n    classAsString: 'MaterialSlider',\n    cssClass: 'mdl-js-slider',\n    widget: true\n});\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Snackbar MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialSnackbar = function MaterialSnackbar(element) {\n    this.element_ = element;\n    this.textElement_ = this.element_.querySelector('.' + this.cssClasses_.MESSAGE);\n    this.actionElement_ = this.element_.querySelector('.' + this.cssClasses_.ACTION);\n    if (!this.textElement_) {\n        throw new Error('There must be a message element for a snackbar.');\n    }\n    if (!this.actionElement_) {\n        throw new Error('There must be an action element for a snackbar.');\n    }\n    this.active = false;\n    this.actionHandler_ = undefined;\n    this.message_ = undefined;\n    this.actionText_ = undefined;\n    this.queuedNotifications_ = [];\n    this.setActionHidden_(true);\n};\nwindow['MaterialSnackbar'] = MaterialSnackbar;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialSnackbar.prototype.Constant_ = {\n    // The duration of the snackbar show/hide animation, in ms.\n    ANIMATION_LENGTH: 250\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSnackbar.prototype.cssClasses_ = {\n    SNACKBAR: 'mdl-snackbar',\n    MESSAGE: 'mdl-snackbar__text',\n    ACTION: 'mdl-snackbar__action',\n    ACTIVE: 'mdl-snackbar--active'\n};\n/**\n   * Display the snackbar.\n   *\n   * @private\n   */\nMaterialSnackbar.prototype.displaySnackbar_ = function () {\n    this.element_.setAttribute('aria-hidden', 'true');\n    if (this.actionHandler_) {\n        this.actionElement_.textContent = this.actionText_;\n        this.actionElement_.addEventListener('click', this.actionHandler_);\n        this.setActionHidden_(false);\n    }\n    this.textElement_.textContent = this.message_;\n    this.element_.classList.add(this.cssClasses_.ACTIVE);\n    this.element_.setAttribute('aria-hidden', 'false');\n    setTimeout(this.cleanup_.bind(this), this.timeout_);\n};\n/**\n   * Show the snackbar.\n   *\n   * @param {Object} data The data for the notification.\n   * @public\n   */\nMaterialSnackbar.prototype.showSnackbar = function (data) {\n    if (data === undefined) {\n        throw new Error('Please provide a data object with at least a message to display.');\n    }\n    if (data['message'] === undefined) {\n        throw new Error('Please provide a message to be displayed.');\n    }\n    if (data['actionHandler'] && !data['actionText']) {\n        throw new Error('Please provide action text with the handler.');\n    }\n    if (this.active) {\n        this.queuedNotifications_.push(data);\n    } else {\n        this.active = true;\n        this.message_ = data['message'];\n        if (data['timeout']) {\n            this.timeout_ = data['timeout'];\n        } else {\n            this.timeout_ = 2750;\n        }\n        if (data['actionHandler']) {\n            this.actionHandler_ = data['actionHandler'];\n        }\n        if (data['actionText']) {\n            this.actionText_ = data['actionText'];\n        }\n        this.displaySnackbar_();\n    }\n};\nMaterialSnackbar.prototype['showSnackbar'] = MaterialSnackbar.prototype.showSnackbar;\n/**\n   * Check if the queue has items within it.\n   * If it does, display the next entry.\n   *\n   * @private\n   */\nMaterialSnackbar.prototype.checkQueue_ = function () {\n    if (this.queuedNotifications_.length > 0) {\n        this.showSnackbar(this.queuedNotifications_.shift());\n    }\n};\n/**\n   * Cleanup the snackbar event listeners and accessiblity attributes.\n   *\n   * @private\n   */\nMaterialSnackbar.prototype.cleanup_ = function () {\n    this.element_.classList.remove(this.cssClasses_.ACTIVE);\n    setTimeout(function () {\n        this.element_.setAttribute('aria-hidden', 'true');\n        this.textElement_.textContent = '';\n        if (!Boolean(this.actionElement_.getAttribute('aria-hidden'))) {\n            this.setActionHidden_(true);\n            this.actionElement_.textContent = '';\n            this.actionElement_.removeEventListener('click', this.actionHandler_);\n        }\n        this.actionHandler_ = undefined;\n        this.message_ = undefined;\n        this.actionText_ = undefined;\n        this.active = false;\n        this.checkQueue_();\n    }.bind(this), this.Constant_.ANIMATION_LENGTH);\n};\n/**\n   * Set the action handler hidden state.\n   *\n   * @param {boolean} value\n   * @private\n   */\nMaterialSnackbar.prototype.setActionHidden_ = function (value) {\n    if (value) {\n        this.actionElement_.setAttribute('aria-hidden', 'true');\n    } else {\n        this.actionElement_.removeAttribute('aria-hidden');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSnackbar,\n    classAsString: 'MaterialSnackbar',\n    cssClass: 'mdl-js-snackbar',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Spinner MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   * @constructor\n   */\nvar MaterialSpinner = function MaterialSpinner(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialSpinner'] = MaterialSpinner;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialSpinner.prototype.Constant_ = { MDL_SPINNER_LAYER_COUNT: 4 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSpinner.prototype.CssClasses_ = {\n    MDL_SPINNER_LAYER: 'mdl-spinner__layer',\n    MDL_SPINNER_CIRCLE_CLIPPER: 'mdl-spinner__circle-clipper',\n    MDL_SPINNER_CIRCLE: 'mdl-spinner__circle',\n    MDL_SPINNER_GAP_PATCH: 'mdl-spinner__gap-patch',\n    MDL_SPINNER_LEFT: 'mdl-spinner__left',\n    MDL_SPINNER_RIGHT: 'mdl-spinner__right'\n};\n/**\n   * Auxiliary method to create a spinner layer.\n   *\n   * @param {number} index Index of the layer to be created.\n   * @public\n   */\nMaterialSpinner.prototype.createLayer = function (index) {\n    var layer = document.createElement('div');\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER);\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER + '-' + index);\n    var leftClipper = document.createElement('div');\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_LEFT);\n    var gapPatch = document.createElement('div');\n    gapPatch.classList.add(this.CssClasses_.MDL_SPINNER_GAP_PATCH);\n    var rightClipper = document.createElement('div');\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_RIGHT);\n    var circleOwners = [\n        leftClipper,\n        gapPatch,\n        rightClipper\n    ];\n    for (var i = 0; i < circleOwners.length; i++) {\n        var circle = document.createElement('div');\n        circle.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE);\n        circleOwners[i].appendChild(circle);\n    }\n    layer.appendChild(leftClipper);\n    layer.appendChild(gapPatch);\n    layer.appendChild(rightClipper);\n    this.element_.appendChild(layer);\n};\nMaterialSpinner.prototype['createLayer'] = MaterialSpinner.prototype.createLayer;\n/**\n   * Stops the spinner animation.\n   * Public method for users who need to stop the spinner for any reason.\n   *\n   * @public\n   */\nMaterialSpinner.prototype.stop = function () {\n    this.element_.classList.remove('is-active');\n};\nMaterialSpinner.prototype['stop'] = MaterialSpinner.prototype.stop;\n/**\n   * Starts the spinner animation.\n   * Public method for users who need to manually start the spinner for any reason\n   * (instead of just adding the 'is-active' class to their markup).\n   *\n   * @public\n   */\nMaterialSpinner.prototype.start = function () {\n    this.element_.classList.add('is-active');\n};\nMaterialSpinner.prototype['start'] = MaterialSpinner.prototype.start;\n/**\n   * Initialize element.\n   */\nMaterialSpinner.prototype.init = function () {\n    if (this.element_) {\n        for (var i = 1; i <= this.Constant_.MDL_SPINNER_LAYER_COUNT; i++) {\n            this.createLayer(i);\n        }\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSpinner,\n    classAsString: 'MaterialSpinner',\n    cssClass: 'mdl-js-spinner',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Checkbox MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialSwitch = function MaterialSwitch(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialSwitch'] = MaterialSwitch;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialSwitch.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSwitch.prototype.CssClasses_ = {\n    INPUT: 'mdl-switch__input',\n    TRACK: 'mdl-switch__track',\n    THUMB: 'mdl-switch__thumb',\n    FOCUS_HELPER: 'mdl-switch__focus-helper',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-switch__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSwitch.prototype.onChange_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSwitch.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSwitch.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSwitch.prototype.onMouseUp_ = function (event) {\n    this.blur_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialSwitch.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialSwitch.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.inputElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the components disabled state.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialSwitch.prototype['checkDisabled'] = MaterialSwitch.prototype.checkDisabled;\n/**\n   * Check the components toggled state.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialSwitch.prototype['checkToggleState'] = MaterialSwitch.prototype.checkToggleState;\n/**\n   * Disable switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialSwitch.prototype['disable'] = MaterialSwitch.prototype.disable;\n/**\n   * Enable switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialSwitch.prototype['enable'] = MaterialSwitch.prototype.enable;\n/**\n   * Activate switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.on = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n};\nMaterialSwitch.prototype['on'] = MaterialSwitch.prototype.on;\n/**\n   * Deactivate switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.off = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n};\nMaterialSwitch.prototype['off'] = MaterialSwitch.prototype.off;\n/**\n   * Initialize element.\n   */\nMaterialSwitch.prototype.init = function () {\n    if (this.element_) {\n        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        var track = document.createElement('div');\n        track.classList.add(this.CssClasses_.TRACK);\n        var thumb = document.createElement('div');\n        thumb.classList.add(this.CssClasses_.THUMB);\n        var focusHelper = document.createElement('span');\n        focusHelper.classList.add(this.CssClasses_.FOCUS_HELPER);\n        thumb.appendChild(focusHelper);\n        this.element_.appendChild(track);\n        this.element_.appendChild(thumb);\n        this.boundMouseUpHandler = this.onMouseUp_.bind(this);\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            this.rippleContainerElement_ = document.createElement('span');\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            this.rippleContainerElement_.addEventListener('mouseup', this.boundMouseUpHandler);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            this.rippleContainerElement_.appendChild(ripple);\n            this.element_.appendChild(this.rippleContainerElement_);\n        }\n        this.boundChangeHandler = this.onChange_.bind(this);\n        this.boundFocusHandler = this.onFocus_.bind(this);\n        this.boundBlurHandler = this.onBlur_.bind(this);\n        this.inputElement_.addEventListener('change', this.boundChangeHandler);\n        this.inputElement_.addEventListener('focus', this.boundFocusHandler);\n        this.inputElement_.addEventListener('blur', this.boundBlurHandler);\n        this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\n        this.updateClasses_();\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSwitch,\n    classAsString: 'MaterialSwitch',\n    cssClass: 'mdl-js-switch',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Tabs MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {Element} element The element that will be upgraded.\n   */\nvar MaterialTabs = function MaterialTabs(element) {\n    // Stores the HTML element.\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialTabs'] = MaterialTabs;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTabs.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTabs.prototype.CssClasses_ = {\n    TAB_CLASS: 'mdl-tabs__tab',\n    PANEL_CLASS: 'mdl-tabs__panel',\n    ACTIVE_CLASS: 'is-active',\n    UPGRADED_CLASS: 'is-upgraded',\n    MDL_JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    MDL_RIPPLE_CONTAINER: 'mdl-tabs__ripple-container',\n    MDL_RIPPLE: 'mdl-ripple',\n    MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events'\n};\n/**\n   * Handle clicks to a tabs component\n   *\n   * @private\n   */\nMaterialTabs.prototype.initTabs_ = function () {\n    if (this.element_.classList.contains(this.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n        this.element_.classList.add(this.CssClasses_.MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS);\n    }\n    // Select element tabs, document panels\n    this.tabs_ = this.element_.querySelectorAll('.' + this.CssClasses_.TAB_CLASS);\n    this.panels_ = this.element_.querySelectorAll('.' + this.CssClasses_.PANEL_CLASS);\n    // Create new tabs for each tab element\n    for (var i = 0; i < this.tabs_.length; i++) {\n        new MaterialTab(this.tabs_[i], this);\n    }\n    this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS);\n};\n/**\n   * Reset tab state, dropping active classes\n   *\n   * @private\n   */\nMaterialTabs.prototype.resetTabState_ = function () {\n    for (var k = 0; k < this.tabs_.length; k++) {\n        this.tabs_[k].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n    }\n};\n/**\n   * Reset panel state, droping active classes\n   *\n   * @private\n   */\nMaterialTabs.prototype.resetPanelState_ = function () {\n    for (var j = 0; j < this.panels_.length; j++) {\n        this.panels_[j].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n    }\n};\n/**\n   * Initialize element.\n   */\nMaterialTabs.prototype.init = function () {\n    if (this.element_) {\n        this.initTabs_();\n    }\n};\n/**\n   * Constructor for an individual tab.\n   *\n   * @constructor\n   * @param {Element} tab The HTML element for the tab.\n   * @param {MaterialTabs} ctx The MaterialTabs object that owns the tab.\n   */\nfunction MaterialTab(tab, ctx) {\n    if (tab) {\n        if (ctx.element_.classList.contains(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n            var rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(ctx.CssClasses_.MDL_RIPPLE_CONTAINER);\n            rippleContainer.classList.add(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT);\n            var ripple = document.createElement('span');\n            ripple.classList.add(ctx.CssClasses_.MDL_RIPPLE);\n            rippleContainer.appendChild(ripple);\n            tab.appendChild(rippleContainer);\n        }\n        tab.addEventListener('click', function (e) {\n            if (tab.getAttribute('href').charAt(0) === '#') {\n                e.preventDefault();\n                var href = tab.href.split('#')[1];\n                var panel = ctx.element_.querySelector('#' + href);\n                ctx.resetTabState_();\n                ctx.resetPanelState_();\n                tab.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n                panel.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n            }\n        });\n    }\n}\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialTabs,\n    classAsString: 'MaterialTabs',\n    cssClass: 'mdl-js-tabs'\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Textfield MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialTextfield = function MaterialTextfield(element) {\n    this.element_ = element;\n    this.maxRows = this.Constant_.NO_MAX_ROWS;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialTextfield'] = MaterialTextfield;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialTextfield.prototype.Constant_ = {\n    NO_MAX_ROWS: -1,\n    MAX_ROWS_ATTRIBUTE: 'maxrows'\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTextfield.prototype.CssClasses_ = {\n    LABEL: 'mdl-textfield__label',\n    INPUT: 'mdl-textfield__input',\n    IS_DIRTY: 'is-dirty',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_INVALID: 'is-invalid',\n    IS_UPGRADED: 'is-upgraded',\n    HAS_PLACEHOLDER: 'has-placeholder'\n};\n/**\n   * Handle input being entered.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onKeyDown_ = function (event) {\n    var currentRowCount = event.target.value.split('\\n').length;\n    if (event.keyCode === 13) {\n        if (currentRowCount >= this.maxRows) {\n            event.preventDefault();\n        }\n    }\n};\n/**\n   * Handle focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle reset event from out side.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onReset_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialTextfield.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkValidity();\n    this.checkDirty();\n    this.checkFocus();\n};\n// Public methods.\n/**\n   * Check the disabled state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkDisabled = function () {\n    if (this.input_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialTextfield.prototype['checkDisabled'] = MaterialTextfield.prototype.checkDisabled;\n/**\n  * Check the focus state and update field accordingly.\n  *\n  * @public\n  */\nMaterialTextfield.prototype.checkFocus = function () {\n    if (Boolean(this.element_.querySelector(':focus'))) {\n        this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n    }\n};\nMaterialTextfield.prototype['checkFocus'] = MaterialTextfield.prototype.checkFocus;\n/**\n   * Check the validity state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkValidity = function () {\n    if (this.input_.validity) {\n        if (this.input_.validity.valid) {\n            this.element_.classList.remove(this.CssClasses_.IS_INVALID);\n        } else {\n            this.element_.classList.add(this.CssClasses_.IS_INVALID);\n        }\n    }\n};\nMaterialTextfield.prototype['checkValidity'] = MaterialTextfield.prototype.checkValidity;\n/**\n   * Check the dirty state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkDirty = function () {\n    if (this.input_.value && this.input_.value.length > 0) {\n        this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DIRTY);\n    }\n};\nMaterialTextfield.prototype['checkDirty'] = MaterialTextfield.prototype.checkDirty;\n/**\n   * Disable text field.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.disable = function () {\n    this.input_.disabled = true;\n    this.updateClasses_();\n};\nMaterialTextfield.prototype['disable'] = MaterialTextfield.prototype.disable;\n/**\n   * Enable text field.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.enable = function () {\n    this.input_.disabled = false;\n    this.updateClasses_();\n};\nMaterialTextfield.prototype['enable'] = MaterialTextfield.prototype.enable;\n/**\n   * Update text field value.\n   *\n   * @param {string} value The value to which to set the control (optional).\n   * @public\n   */\nMaterialTextfield.prototype.change = function (value) {\n    this.input_.value = value || '';\n    this.updateClasses_();\n};\nMaterialTextfield.prototype['change'] = MaterialTextfield.prototype.change;\n/**\n   * Initialize element.\n   */\nMaterialTextfield.prototype.init = function () {\n    if (this.element_) {\n        this.label_ = this.element_.querySelector('.' + this.CssClasses_.LABEL);\n        this.input_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        if (this.input_) {\n            if (this.input_.hasAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE)) {\n                this.maxRows = parseInt(this.input_.getAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE), 10);\n                if (isNaN(this.maxRows)) {\n                    this.maxRows = this.Constant_.NO_MAX_ROWS;\n                }\n            }\n            if (this.input_.hasAttribute('placeholder')) {\n                this.element_.classList.add(this.CssClasses_.HAS_PLACEHOLDER);\n            }\n            this.boundUpdateClassesHandler = this.updateClasses_.bind(this);\n            this.boundFocusHandler = this.onFocus_.bind(this);\n            this.boundBlurHandler = this.onBlur_.bind(this);\n            this.boundResetHandler = this.onReset_.bind(this);\n            this.input_.addEventListener('input', this.boundUpdateClassesHandler);\n            this.input_.addEventListener('focus', this.boundFocusHandler);\n            this.input_.addEventListener('blur', this.boundBlurHandler);\n            this.input_.addEventListener('reset', this.boundResetHandler);\n            if (this.maxRows !== this.Constant_.NO_MAX_ROWS) {\n                // TODO: This should handle pasting multi line text.\n                // Currently doesn't.\n                this.boundKeyDownHandler = this.onKeyDown_.bind(this);\n                this.input_.addEventListener('keydown', this.boundKeyDownHandler);\n            }\n            var invalid = this.element_.classList.contains(this.CssClasses_.IS_INVALID);\n            this.updateClasses_();\n            this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n            if (invalid) {\n                this.element_.classList.add(this.CssClasses_.IS_INVALID);\n            }\n            if (this.input_.hasAttribute('autofocus')) {\n                this.element_.focus();\n                this.checkFocus();\n            }\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialTextfield,\n    classAsString: 'MaterialTextfield',\n    cssClass: 'mdl-js-textfield',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Tooltip MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialTooltip = function MaterialTooltip(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialTooltip'] = MaterialTooltip;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialTooltip.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTooltip.prototype.CssClasses_ = {\n    IS_ACTIVE: 'is-active',\n    BOTTOM: 'mdl-tooltip--bottom',\n    LEFT: 'mdl-tooltip--left',\n    RIGHT: 'mdl-tooltip--right',\n    TOP: 'mdl-tooltip--top'\n};\n/**\n   * Handle mouseenter for tooltip.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTooltip.prototype.handleMouseEnter_ = function (event) {\n    var props = event.target.getBoundingClientRect();\n    var left = props.left + props.width / 2;\n    var top = props.top + props.height / 2;\n    var marginLeft = -1 * (this.element_.offsetWidth / 2);\n    var marginTop = -1 * (this.element_.offsetHeight / 2);\n    if (this.element_.classList.contains(this.CssClasses_.LEFT) || this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n        left = props.width / 2;\n        if (top + marginTop < 0) {\n            this.element_.style.top = '0';\n            this.element_.style.marginTop = '0';\n        } else {\n            this.element_.style.top = top + 'px';\n            this.element_.style.marginTop = marginTop + 'px';\n        }\n    } else {\n        if (left + marginLeft < 0) {\n            this.element_.style.left = '0';\n            this.element_.style.marginLeft = '0';\n        } else {\n            this.element_.style.left = left + 'px';\n            this.element_.style.marginLeft = marginLeft + 'px';\n        }\n    }\n    if (this.element_.classList.contains(this.CssClasses_.TOP)) {\n        this.element_.style.top = props.top - this.element_.offsetHeight - 10 + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n        this.element_.style.left = props.left + props.width + 10 + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.LEFT)) {\n        this.element_.style.left = props.left - this.element_.offsetWidth - 10 + 'px';\n    } else {\n        this.element_.style.top = props.top + props.height + 10 + 'px';\n    }\n    this.element_.classList.add(this.CssClasses_.IS_ACTIVE);\n};\n/**\n   * Hide tooltip on mouseleave or scroll\n   *\n   * @private\n   */\nMaterialTooltip.prototype.hideTooltip_ = function () {\n    this.element_.classList.remove(this.CssClasses_.IS_ACTIVE);\n};\n/**\n   * Initialize element.\n   */\nMaterialTooltip.prototype.init = function () {\n    if (this.element_) {\n        var forElId = this.element_.getAttribute('for') || this.element_.getAttribute('data-mdl-for');\n        if (forElId) {\n            this.forElement_ = document.getElementById(forElId);\n        }\n        if (this.forElement_) {\n            // It's left here because it prevents accidental text selection on Android\n            if (!this.forElement_.hasAttribute('tabindex')) {\n                this.forElement_.setAttribute('tabindex', '0');\n            }\n            this.boundMouseEnterHandler = this.handleMouseEnter_.bind(this);\n            this.boundMouseLeaveAndScrollHandler = this.hideTooltip_.bind(this);\n            this.forElement_.addEventListener('mouseenter', this.boundMouseEnterHandler, false);\n            this.forElement_.addEventListener('touchend', this.boundMouseEnterHandler, false);\n            this.forElement_.addEventListener('mouseleave', this.boundMouseLeaveAndScrollHandler, false);\n            window.addEventListener('scroll', this.boundMouseLeaveAndScrollHandler, true);\n            window.addEventListener('touchstart', this.boundMouseLeaveAndScrollHandler);\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialTooltip,\n    classAsString: 'MaterialTooltip',\n    cssClass: 'mdl-tooltip'\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Layout MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialLayout = function MaterialLayout(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialLayout'] = MaterialLayout;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialLayout.prototype.Constant_ = {\n    MAX_WIDTH: '(max-width: 1024px)',\n    TAB_SCROLL_PIXELS: 100,\n    RESIZE_TIMEOUT: 100,\n    MENU_ICON: '&#xE5D2;',\n    CHEVRON_LEFT: 'chevron_left',\n    CHEVRON_RIGHT: 'chevron_right'\n};\n/**\n   * Keycodes, for code readability.\n   *\n   * @enum {number}\n   * @private\n   */\nMaterialLayout.prototype.Keycodes_ = {\n    ENTER: 13,\n    ESCAPE: 27,\n    SPACE: 32\n};\n/**\n   * Modes.\n   *\n   * @enum {number}\n   * @private\n   */\nMaterialLayout.prototype.Mode_ = {\n    STANDARD: 0,\n    SEAMED: 1,\n    WATERFALL: 2,\n    SCROLL: 3\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialLayout.prototype.CssClasses_ = {\n    CONTAINER: 'mdl-layout__container',\n    HEADER: 'mdl-layout__header',\n    DRAWER: 'mdl-layout__drawer',\n    CONTENT: 'mdl-layout__content',\n    DRAWER_BTN: 'mdl-layout__drawer-button',\n    ICON: 'material-icons',\n    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-layout__tab-ripple-container',\n    RIPPLE: 'mdl-ripple',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    HEADER_SEAMED: 'mdl-layout__header--seamed',\n    HEADER_WATERFALL: 'mdl-layout__header--waterfall',\n    HEADER_SCROLL: 'mdl-layout__header--scroll',\n    FIXED_HEADER: 'mdl-layout--fixed-header',\n    OBFUSCATOR: 'mdl-layout__obfuscator',\n    TAB_BAR: 'mdl-layout__tab-bar',\n    TAB_CONTAINER: 'mdl-layout__tab-bar-container',\n    TAB: 'mdl-layout__tab',\n    TAB_BAR_BUTTON: 'mdl-layout__tab-bar-button',\n    TAB_BAR_LEFT_BUTTON: 'mdl-layout__tab-bar-left-button',\n    TAB_BAR_RIGHT_BUTTON: 'mdl-layout__tab-bar-right-button',\n    TAB_MANUAL_SWITCH: 'mdl-layout__tab-manual-switch',\n    PANEL: 'mdl-layout__tab-panel',\n    HAS_DRAWER: 'has-drawer',\n    HAS_TABS: 'has-tabs',\n    HAS_SCROLLING_HEADER: 'has-scrolling-header',\n    CASTING_SHADOW: 'is-casting-shadow',\n    IS_COMPACT: 'is-compact',\n    IS_SMALL_SCREEN: 'is-small-screen',\n    IS_DRAWER_OPEN: 'is-visible',\n    IS_ACTIVE: 'is-active',\n    IS_UPGRADED: 'is-upgraded',\n    IS_ANIMATING: 'is-animating',\n    ON_LARGE_SCREEN: 'mdl-layout--large-screen-only',\n    ON_SMALL_SCREEN: 'mdl-layout--small-screen-only'\n};\n/**\n   * Handles scrolling on the content.\n   *\n   * @private\n   */\nMaterialLayout.prototype.contentScrollHandler_ = function () {\n    if (this.header_.classList.contains(this.CssClasses_.IS_ANIMATING)) {\n        return;\n    }\n    var headerVisible = !this.element_.classList.contains(this.CssClasses_.IS_SMALL_SCREEN) || this.element_.classList.contains(this.CssClasses_.FIXED_HEADER);\n    if (this.content_.scrollTop > 0 && !this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n        this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\n        this.header_.classList.add(this.CssClasses_.IS_COMPACT);\n        if (headerVisible) {\n            this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n        }\n    } else if (this.content_.scrollTop <= 0 && this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n        this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n        this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\n        if (headerVisible) {\n            this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n        }\n    }\n};\n/**\n   * Handles a keyboard event on the drawer.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialLayout.prototype.keyboardEventHandler_ = function (evt) {\n    // Only react when the drawer is open.\n    if (evt.keyCode === this.Keycodes_.ESCAPE && this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)) {\n        this.toggleDrawer();\n    }\n};\n/**\n   * Handles changes in screen size.\n   *\n   * @private\n   */\nMaterialLayout.prototype.screenSizeHandler_ = function () {\n    if (this.screenSizeMediaQuery_.matches) {\n        this.element_.classList.add(this.CssClasses_.IS_SMALL_SCREEN);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_SMALL_SCREEN);\n        // Collapse drawer (if any) when moving to a large screen size.\n        if (this.drawer_) {\n            this.drawer_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);\n            this.obfuscator_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);\n        }\n    }\n};\n/**\n   * Handles events of drawer button.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialLayout.prototype.drawerToggleHandler_ = function (evt) {\n    if (evt && evt.type === 'keydown') {\n        if (evt.keyCode === this.Keycodes_.SPACE || evt.keyCode === this.Keycodes_.ENTER) {\n            // prevent scrolling in drawer nav\n            evt.preventDefault();\n        } else {\n            // prevent other keys\n            return;\n        }\n    }\n    this.toggleDrawer();\n};\n/**\n   * Handles (un)setting the `is-animating` class\n   *\n   * @private\n   */\nMaterialLayout.prototype.headerTransitionEndHandler_ = function () {\n    this.header_.classList.remove(this.CssClasses_.IS_ANIMATING);\n};\n/**\n   * Handles expanding the header on click\n   *\n   * @private\n   */\nMaterialLayout.prototype.headerClickHandler_ = function () {\n    if (this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n        this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\n        this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n    }\n};\n/**\n   * Reset tab state, dropping active classes\n   *\n   * @private\n   */\nMaterialLayout.prototype.resetTabState_ = function (tabBar) {\n    for (var k = 0; k < tabBar.length; k++) {\n        tabBar[k].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n};\n/**\n   * Reset panel state, droping active classes\n   *\n   * @private\n   */\nMaterialLayout.prototype.resetPanelState_ = function (panels) {\n    for (var j = 0; j < panels.length; j++) {\n        panels[j].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n};\n/**\n  * Toggle drawer state\n  *\n  * @public\n  */\nMaterialLayout.prototype.toggleDrawer = function () {\n    var drawerButton = this.element_.querySelector('.' + this.CssClasses_.DRAWER_BTN);\n    this.drawer_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);\n    this.obfuscator_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);\n    // Set accessibility properties.\n    if (this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)) {\n        this.drawer_.setAttribute('aria-hidden', 'false');\n        drawerButton.setAttribute('aria-expanded', 'true');\n    } else {\n        this.drawer_.setAttribute('aria-hidden', 'true');\n        drawerButton.setAttribute('aria-expanded', 'false');\n    }\n};\nMaterialLayout.prototype['toggleDrawer'] = MaterialLayout.prototype.toggleDrawer;\n/**\n   * Initialize element.\n   */\nMaterialLayout.prototype.init = function () {\n    if (this.element_) {\n        var container = document.createElement('div');\n        container.classList.add(this.CssClasses_.CONTAINER);\n        var focusedElement = this.element_.querySelector(':focus');\n        this.element_.parentElement.insertBefore(container, this.element_);\n        this.element_.parentElement.removeChild(this.element_);\n        container.appendChild(this.element_);\n        if (focusedElement) {\n            focusedElement.focus();\n        }\n        var directChildren = this.element_.childNodes;\n        var numChildren = directChildren.length;\n        for (var c = 0; c < numChildren; c++) {\n            var child = directChildren[c];\n            if (child.classList && child.classList.contains(this.CssClasses_.HEADER)) {\n                this.header_ = child;\n            }\n            if (child.classList && child.classList.contains(this.CssClasses_.DRAWER)) {\n                this.drawer_ = child;\n            }\n            if (child.classList && child.classList.contains(this.CssClasses_.CONTENT)) {\n                this.content_ = child;\n            }\n        }\n        window.addEventListener('pageshow', function (e) {\n            if (e.persisted) {\n                // when page is loaded from back/forward cache\n                // trigger repaint to let layout scroll in safari\n                this.element_.style.overflowY = 'hidden';\n                requestAnimationFrame(function () {\n                    this.element_.style.overflowY = '';\n                }.bind(this));\n            }\n        }.bind(this), false);\n        if (this.header_) {\n            this.tabBar_ = this.header_.querySelector('.' + this.CssClasses_.TAB_BAR);\n        }\n        var mode = this.Mode_.STANDARD;\n        if (this.header_) {\n            if (this.header_.classList.contains(this.CssClasses_.HEADER_SEAMED)) {\n                mode = this.Mode_.SEAMED;\n            } else if (this.header_.classList.contains(this.CssClasses_.HEADER_WATERFALL)) {\n                mode = this.Mode_.WATERFALL;\n                this.header_.addEventListener('transitionend', this.headerTransitionEndHandler_.bind(this));\n                this.header_.addEventListener('click', this.headerClickHandler_.bind(this));\n            } else if (this.header_.classList.contains(this.CssClasses_.HEADER_SCROLL)) {\n                mode = this.Mode_.SCROLL;\n                container.classList.add(this.CssClasses_.HAS_SCROLLING_HEADER);\n            }\n            if (mode === this.Mode_.STANDARD) {\n                this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\n                if (this.tabBar_) {\n                    this.tabBar_.classList.add(this.CssClasses_.CASTING_SHADOW);\n                }\n            } else if (mode === this.Mode_.SEAMED || mode === this.Mode_.SCROLL) {\n                this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n                if (this.tabBar_) {\n                    this.tabBar_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n                }\n            } else if (mode === this.Mode_.WATERFALL) {\n                // Add and remove shadows depending on scroll position.\n                // Also add/remove auxiliary class for styling of the compact version of\n                // the header.\n                this.content_.addEventListener('scroll', this.contentScrollHandler_.bind(this));\n                this.contentScrollHandler_();\n            }\n        }\n        // Add drawer toggling button to our layout, if we have an openable drawer.\n        if (this.drawer_) {\n            var drawerButton = this.element_.querySelector('.' + this.CssClasses_.DRAWER_BTN);\n            if (!drawerButton) {\n                drawerButton = document.createElement('div');\n                drawerButton.setAttribute('aria-expanded', 'false');\n                drawerButton.setAttribute('role', 'button');\n                drawerButton.setAttribute('tabindex', '0');\n                drawerButton.classList.add(this.CssClasses_.DRAWER_BTN);\n                var drawerButtonIcon = document.createElement('i');\n                drawerButtonIcon.classList.add(this.CssClasses_.ICON);\n                drawerButtonIcon.innerHTML = this.Constant_.MENU_ICON;\n                drawerButton.appendChild(drawerButtonIcon);\n            }\n            if (this.drawer_.classList.contains(this.CssClasses_.ON_LARGE_SCREEN)) {\n                //If drawer has ON_LARGE_SCREEN class then add it to the drawer toggle button as well.\n                drawerButton.classList.add(this.CssClasses_.ON_LARGE_SCREEN);\n            } else if (this.drawer_.classList.contains(this.CssClasses_.ON_SMALL_SCREEN)) {\n                //If drawer has ON_SMALL_SCREEN class then add it to the drawer toggle button as well.\n                drawerButton.classList.add(this.CssClasses_.ON_SMALL_SCREEN);\n            }\n            drawerButton.addEventListener('click', this.drawerToggleHandler_.bind(this));\n            drawerButton.addEventListener('keydown', this.drawerToggleHandler_.bind(this));\n            // Add a class if the layout has a drawer, for altering the left padding.\n            // Adds the HAS_DRAWER to the elements since this.header_ may or may\n            // not be present.\n            this.element_.classList.add(this.CssClasses_.HAS_DRAWER);\n            // If we have a fixed header, add the button to the header rather than\n            // the layout.\n            if (this.element_.classList.contains(this.CssClasses_.FIXED_HEADER)) {\n                this.header_.insertBefore(drawerButton, this.header_.firstChild);\n            } else {\n                this.element_.insertBefore(drawerButton, this.content_);\n            }\n            var obfuscator = document.createElement('div');\n            obfuscator.classList.add(this.CssClasses_.OBFUSCATOR);\n            this.element_.appendChild(obfuscator);\n            obfuscator.addEventListener('click', this.drawerToggleHandler_.bind(this));\n            this.obfuscator_ = obfuscator;\n            this.drawer_.addEventListener('keydown', this.keyboardEventHandler_.bind(this));\n            this.drawer_.setAttribute('aria-hidden', 'true');\n        }\n        // Keep an eye on screen size, and add/remove auxiliary class for styling\n        // of small screens.\n        this.screenSizeMediaQuery_ = window.matchMedia(this.Constant_.MAX_WIDTH);\n        this.screenSizeMediaQuery_.addListener(this.screenSizeHandler_.bind(this));\n        this.screenSizeHandler_();\n        // Initialize tabs, if any.\n        if (this.header_ && this.tabBar_) {\n            this.element_.classList.add(this.CssClasses_.HAS_TABS);\n            var tabContainer = document.createElement('div');\n            tabContainer.classList.add(this.CssClasses_.TAB_CONTAINER);\n            this.header_.insertBefore(tabContainer, this.tabBar_);\n            this.header_.removeChild(this.tabBar_);\n            var leftButton = document.createElement('div');\n            leftButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n            leftButton.classList.add(this.CssClasses_.TAB_BAR_LEFT_BUTTON);\n            var leftButtonIcon = document.createElement('i');\n            leftButtonIcon.classList.add(this.CssClasses_.ICON);\n            leftButtonIcon.textContent = this.Constant_.CHEVRON_LEFT;\n            leftButton.appendChild(leftButtonIcon);\n            leftButton.addEventListener('click', function () {\n                this.tabBar_.scrollLeft -= this.Constant_.TAB_SCROLL_PIXELS;\n            }.bind(this));\n            var rightButton = document.createElement('div');\n            rightButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n            rightButton.classList.add(this.CssClasses_.TAB_BAR_RIGHT_BUTTON);\n            var rightButtonIcon = document.createElement('i');\n            rightButtonIcon.classList.add(this.CssClasses_.ICON);\n            rightButtonIcon.textContent = this.Constant_.CHEVRON_RIGHT;\n            rightButton.appendChild(rightButtonIcon);\n            rightButton.addEventListener('click', function () {\n                this.tabBar_.scrollLeft += this.Constant_.TAB_SCROLL_PIXELS;\n            }.bind(this));\n            tabContainer.appendChild(leftButton);\n            tabContainer.appendChild(this.tabBar_);\n            tabContainer.appendChild(rightButton);\n            // Add and remove tab buttons depending on scroll position and total\n            // window size.\n            var tabUpdateHandler = function () {\n                if (this.tabBar_.scrollLeft > 0) {\n                    leftButton.classList.add(this.CssClasses_.IS_ACTIVE);\n                } else {\n                    leftButton.classList.remove(this.CssClasses_.IS_ACTIVE);\n                }\n                if (this.tabBar_.scrollLeft < this.tabBar_.scrollWidth - this.tabBar_.offsetWidth) {\n                    rightButton.classList.add(this.CssClasses_.IS_ACTIVE);\n                } else {\n                    rightButton.classList.remove(this.CssClasses_.IS_ACTIVE);\n                }\n            }.bind(this);\n            this.tabBar_.addEventListener('scroll', tabUpdateHandler);\n            tabUpdateHandler();\n            // Update tabs when the window resizes.\n            var windowResizeHandler = function () {\n                // Use timeouts to make sure it doesn't happen too often.\n                if (this.resizeTimeoutId_) {\n                    clearTimeout(this.resizeTimeoutId_);\n                }\n                this.resizeTimeoutId_ = setTimeout(function () {\n                    tabUpdateHandler();\n                    this.resizeTimeoutId_ = null;\n                }.bind(this), this.Constant_.RESIZE_TIMEOUT);\n            }.bind(this);\n            window.addEventListener('resize', windowResizeHandler);\n            if (this.tabBar_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n                this.tabBar_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            }\n            // Select element tabs, document panels\n            var tabs = this.tabBar_.querySelectorAll('.' + this.CssClasses_.TAB);\n            var panels = this.content_.querySelectorAll('.' + this.CssClasses_.PANEL);\n            // Create new tabs for each tab element\n            for (var i = 0; i < tabs.length; i++) {\n                new MaterialLayoutTab(tabs[i], tabs, panels, this);\n            }\n        }\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n/**\n   * Constructor for an individual tab.\n   *\n   * @constructor\n   * @param {HTMLElement} tab The HTML element for the tab.\n   * @param {!Array<HTMLElement>} tabs Array with HTML elements for all tabs.\n   * @param {!Array<HTMLElement>} panels Array with HTML elements for all panels.\n   * @param {MaterialLayout} layout The MaterialLayout object that owns the tab.\n   */\nfunction MaterialLayoutTab(tab, tabs, panels, layout) {\n    /**\n     * Auxiliary method to programmatically select a tab in the UI.\n     */\n    function selectTab() {\n        var href = tab.href.split('#')[1];\n        var panel = layout.content_.querySelector('#' + href);\n        layout.resetTabState_(tabs);\n        layout.resetPanelState_(panels);\n        tab.classList.add(layout.CssClasses_.IS_ACTIVE);\n        panel.classList.add(layout.CssClasses_.IS_ACTIVE);\n    }\n    if (layout.tabBar_.classList.contains(layout.CssClasses_.JS_RIPPLE_EFFECT)) {\n        var rippleContainer = document.createElement('span');\n        rippleContainer.classList.add(layout.CssClasses_.RIPPLE_CONTAINER);\n        rippleContainer.classList.add(layout.CssClasses_.JS_RIPPLE_EFFECT);\n        var ripple = document.createElement('span');\n        ripple.classList.add(layout.CssClasses_.RIPPLE);\n        rippleContainer.appendChild(ripple);\n        tab.appendChild(rippleContainer);\n    }\n    if (!layout.tabBar_.classList.contains(layout.CssClasses_.TAB_MANUAL_SWITCH)) {\n        tab.addEventListener('click', function (e) {\n            if (tab.getAttribute('href').charAt(0) === '#') {\n                e.preventDefault();\n                selectTab();\n            }\n        });\n    }\n    tab.show = selectTab;\n}\nwindow['MaterialLayoutTab'] = MaterialLayoutTab;\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialLayout,\n    classAsString: 'MaterialLayout',\n    cssClass: 'mdl-js-layout'\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Data Table Card MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {Element} element The element that will be upgraded.\n   */\nvar MaterialDataTable = function MaterialDataTable(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialDataTable'] = MaterialDataTable;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialDataTable.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialDataTable.prototype.CssClasses_ = {\n    DATA_TABLE: 'mdl-data-table',\n    SELECTABLE: 'mdl-data-table--selectable',\n    SELECT_ELEMENT: 'mdl-data-table__select',\n    IS_SELECTED: 'is-selected',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Generates and returns a function that toggles the selection state of a\n   * single row (or multiple rows).\n   *\n   * @param {Element} checkbox Checkbox that toggles the selection state.\n   * @param {Element} row Row to toggle when checkbox changes.\n   * @param {(Array<Object>|NodeList)=} opt_rows Rows to toggle when checkbox changes.\n   * @private\n   */\nMaterialDataTable.prototype.selectRow_ = function (checkbox, row, opt_rows) {\n    if (row) {\n        return function () {\n            if (checkbox.checked) {\n                row.classList.add(this.CssClasses_.IS_SELECTED);\n            } else {\n                row.classList.remove(this.CssClasses_.IS_SELECTED);\n            }\n        }.bind(this);\n    }\n    if (opt_rows) {\n        return function () {\n            var i;\n            var el;\n            if (checkbox.checked) {\n                for (i = 0; i < opt_rows.length; i++) {\n                    el = opt_rows[i].querySelector('td').querySelector('.mdl-checkbox');\n                    el['MaterialCheckbox'].check();\n                    opt_rows[i].classList.add(this.CssClasses_.IS_SELECTED);\n                }\n            } else {\n                for (i = 0; i < opt_rows.length; i++) {\n                    el = opt_rows[i].querySelector('td').querySelector('.mdl-checkbox');\n                    el['MaterialCheckbox'].uncheck();\n                    opt_rows[i].classList.remove(this.CssClasses_.IS_SELECTED);\n                }\n            }\n        }.bind(this);\n    }\n};\n/**\n   * Creates a checkbox for a single or or multiple rows and hooks up the\n   * event handling.\n   *\n   * @param {Element} row Row to toggle when checkbox changes.\n   * @param {(Array<Object>|NodeList)=} opt_rows Rows to toggle when checkbox changes.\n   * @private\n   */\nMaterialDataTable.prototype.createCheckbox_ = function (row, opt_rows) {\n    var label = document.createElement('label');\n    var labelClasses = [\n        'mdl-checkbox',\n        'mdl-js-checkbox',\n        'mdl-js-ripple-effect',\n        this.CssClasses_.SELECT_ELEMENT\n    ];\n    label.className = labelClasses.join(' ');\n    var checkbox = document.createElement('input');\n    checkbox.type = 'checkbox';\n    checkbox.classList.add('mdl-checkbox__input');\n    if (row) {\n        checkbox.checked = row.classList.contains(this.CssClasses_.IS_SELECTED);\n        checkbox.addEventListener('change', this.selectRow_(checkbox, row));\n    } else if (opt_rows) {\n        checkbox.addEventListener('change', this.selectRow_(checkbox, null, opt_rows));\n    }\n    label.appendChild(checkbox);\n    componentHandler.upgradeElement(label, 'MaterialCheckbox');\n    return label;\n};\n/**\n   * Initialize element.\n   */\nMaterialDataTable.prototype.init = function () {\n    if (this.element_) {\n        var firstHeader = this.element_.querySelector('th');\n        var bodyRows = Array.prototype.slice.call(this.element_.querySelectorAll('tbody tr'));\n        var footRows = Array.prototype.slice.call(this.element_.querySelectorAll('tfoot tr'));\n        var rows = bodyRows.concat(footRows);\n        if (this.element_.classList.contains(this.CssClasses_.SELECTABLE)) {\n            var th = document.createElement('th');\n            var headerCheckbox = this.createCheckbox_(null, rows);\n            th.appendChild(headerCheckbox);\n            firstHeader.parentElement.insertBefore(th, firstHeader);\n            for (var i = 0; i < rows.length; i++) {\n                var firstCell = rows[i].querySelector('td');\n                if (firstCell) {\n                    var td = document.createElement('td');\n                    if (rows[i].parentNode.nodeName.toUpperCase() === 'TBODY') {\n                        var rowCheckbox = this.createCheckbox_(rows[i]);\n                        td.appendChild(rowCheckbox);\n                    }\n                    rows[i].insertBefore(td, firstCell);\n                }\n            }\n            this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialDataTable,\n    classAsString: 'MaterialDataTable',\n    cssClass: 'mdl-js-data-table'\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Ripple MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialRipple = function MaterialRipple(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialRipple'] = MaterialRipple;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialRipple.prototype.Constant_ = {\n    INITIAL_SCALE: 'scale(0.0001, 0.0001)',\n    INITIAL_SIZE: '1px',\n    INITIAL_OPACITY: '0.4',\n    FINAL_OPACITY: '0',\n    FINAL_SCALE: ''\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialRipple.prototype.CssClasses_ = {\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    IS_ANIMATING: 'is-animating',\n    IS_VISIBLE: 'is-visible'\n};\n/**\n   * Handle mouse / finger down on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRipple.prototype.downHandler_ = function (event) {\n    if (!this.rippleElement_.style.width && !this.rippleElement_.style.height) {\n        var rect = this.element_.getBoundingClientRect();\n        this.boundHeight = rect.height;\n        this.boundWidth = rect.width;\n        this.rippleSize_ = Math.sqrt(rect.width * rect.width + rect.height * rect.height) * 2 + 2;\n        this.rippleElement_.style.width = this.rippleSize_ + 'px';\n        this.rippleElement_.style.height = this.rippleSize_ + 'px';\n    }\n    this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE);\n    if (event.type === 'mousedown' && this.ignoringMouseDown_) {\n        this.ignoringMouseDown_ = false;\n    } else {\n        if (event.type === 'touchstart') {\n            this.ignoringMouseDown_ = true;\n        }\n        var frameCount = this.getFrameCount();\n        if (frameCount > 0) {\n            return;\n        }\n        this.setFrameCount(1);\n        var bound = event.currentTarget.getBoundingClientRect();\n        var x;\n        var y;\n        // Check if we are handling a keyboard click.\n        if (event.clientX === 0 && event.clientY === 0) {\n            x = Math.round(bound.width / 2);\n            y = Math.round(bound.height / 2);\n        } else {\n            var clientX = event.clientX !== undefined ? event.clientX : event.touches[0].clientX;\n            var clientY = event.clientY !== undefined ? event.clientY : event.touches[0].clientY;\n            x = Math.round(clientX - bound.left);\n            y = Math.round(clientY - bound.top);\n        }\n        this.setRippleXY(x, y);\n        this.setRippleStyles(true);\n        window.requestAnimationFrame(this.animFrameHandler.bind(this));\n    }\n};\n/**\n   * Handle mouse / finger up on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRipple.prototype.upHandler_ = function (event) {\n    // Don't fire for the artificial \"mouseup\" generated by a double-click.\n    if (event && event.detail !== 2) {\n        // Allow a repaint to occur before removing this class, so the animation\n        // shows for tap events, which seem to trigger a mouseup too soon after\n        // mousedown.\n        window.setTimeout(function () {\n            this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE);\n        }.bind(this), 0);\n    }\n};\n/**\n   * Initialize element.\n   */\nMaterialRipple.prototype.init = function () {\n    if (this.element_) {\n        var recentering = this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);\n        if (!this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)) {\n            this.rippleElement_ = this.element_.querySelector('.' + this.CssClasses_.RIPPLE);\n            this.frameCount_ = 0;\n            this.rippleSize_ = 0;\n            this.x_ = 0;\n            this.y_ = 0;\n            // Touch start produces a compat mouse down event, which would cause a\n            // second ripples. To avoid that, we use this property to ignore the first\n            // mouse down after a touch start.\n            this.ignoringMouseDown_ = false;\n            this.boundDownHandler = this.downHandler_.bind(this);\n            this.element_.addEventListener('mousedown', this.boundDownHandler);\n            this.element_.addEventListener('touchstart', this.boundDownHandler);\n            this.boundUpHandler = this.upHandler_.bind(this);\n            this.element_.addEventListener('mouseup', this.boundUpHandler);\n            this.element_.addEventListener('mouseleave', this.boundUpHandler);\n            this.element_.addEventListener('touchend', this.boundUpHandler);\n            this.element_.addEventListener('blur', this.boundUpHandler);\n            /**\n         * Getter for frameCount_.\n         * @return {number} the frame count.\n         */\n            this.getFrameCount = function () {\n                return this.frameCount_;\n            };\n            /**\n         * Setter for frameCount_.\n         * @param {number} fC the frame count.\n         */\n            this.setFrameCount = function (fC) {\n                this.frameCount_ = fC;\n            };\n            /**\n         * Getter for rippleElement_.\n         * @return {Element} the ripple element.\n         */\n            this.getRippleElement = function () {\n                return this.rippleElement_;\n            };\n            /**\n         * Sets the ripple X and Y coordinates.\n         * @param  {number} newX the new X coordinate\n         * @param  {number} newY the new Y coordinate\n         */\n            this.setRippleXY = function (newX, newY) {\n                this.x_ = newX;\n                this.y_ = newY;\n            };\n            /**\n         * Sets the ripple styles.\n         * @param  {boolean} start whether or not this is the start frame.\n         */\n            this.setRippleStyles = function (start) {\n                if (this.rippleElement_ !== null) {\n                    var transformString;\n                    var scale;\n                    var size;\n                    var offset = 'translate(' + this.x_ + 'px, ' + this.y_ + 'px)';\n                    if (start) {\n                        scale = this.Constant_.INITIAL_SCALE;\n                        size = this.Constant_.INITIAL_SIZE;\n                    } else {\n                        scale = this.Constant_.FINAL_SCALE;\n                        size = this.rippleSize_ + 'px';\n                        if (recentering) {\n                            offset = 'translate(' + this.boundWidth / 2 + 'px, ' + this.boundHeight / 2 + 'px)';\n                        }\n                    }\n                    transformString = 'translate(-50%, -50%) ' + offset + scale;\n                    this.rippleElement_.style.webkitTransform = transformString;\n                    this.rippleElement_.style.msTransform = transformString;\n                    this.rippleElement_.style.transform = transformString;\n                    if (start) {\n                        this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING);\n                    } else {\n                        this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING);\n                    }\n                }\n            };\n            /**\n         * Handles an animation frame.\n         */\n            this.animFrameHandler = function () {\n                if (this.frameCount_-- > 0) {\n                    window.requestAnimationFrame(this.animFrameHandler.bind(this));\n                } else {\n                    this.setRippleStyles(false);\n                }\n            };\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialRipple,\n    classAsString: 'MaterialRipple',\n    cssClass: 'mdl-js-ripple-effect',\n    widget: false\n});\n}());\n"]},"hash":"996eaf48fcde8ad751c3e3d72e834dd59e894af2"}
