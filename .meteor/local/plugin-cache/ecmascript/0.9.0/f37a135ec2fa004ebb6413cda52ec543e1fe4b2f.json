{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/zodiase:mdl-assets/src/snackbar/snackbar.js","filenameRelative":"packages/zodiase:mdl-assets/src/snackbar/snackbar.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zodiase:mdl-assets/src/snackbar/snackbar.js.map","sourceFileName":"packages/zodiase:mdl-assets/src/snackbar/snackbar.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"snackbar"},"ignored":false,"code":"/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */(function () {\n  'use strict'; /**\n                 * Class constructor for Snackbar MDL component.\n                 * Implements MDL component design pattern defined at:\n                 * https://github.com/jasonmayes/mdl-component-design-pattern\n                 *\n                 * @constructor\n                 * @param {HTMLElement} element The element that will be upgraded.\n                 */\n\n  var MaterialSnackbar = function () {\n    function MaterialSnackbar(element) {\n      this.element_ = element;\n      this.textElement_ = this.element_.querySelector('.' + this.cssClasses_.MESSAGE);\n      this.actionElement_ = this.element_.querySelector('.' + this.cssClasses_.ACTION);\n\n      if (!this.textElement_) {\n        throw new Error('There must be a message element for a snackbar.');\n      }\n\n      if (!this.actionElement_) {\n        throw new Error('There must be an action element for a snackbar.');\n      }\n\n      this.active = false;\n      this.actionHandler_ = undefined;\n      this.message_ = undefined;\n      this.actionText_ = undefined;\n      this.queuedNotifications_ = [];\n      this.setActionHidden_(true);\n    }\n\n    return MaterialSnackbar;\n  }();\n\n  window['MaterialSnackbar'] = MaterialSnackbar; /**\n                                                  * Store constants in one place so they can be updated easily.\n                                                  *\n                                                  * @enum {string | number}\n                                                  * @private\n                                                  */\n  MaterialSnackbar.prototype.Constant_ = {\n    // The duration of the snackbar show/hide animation, in ms.\n    ANIMATION_LENGTH: 250\n  }; /**\n      * Store strings for class names defined by this component that are used in\n      * JavaScript. This allows us to simply change it in one place should we\n      * decide to modify at a later date.\n      *\n      * @enum {string}\n      * @private\n      */\n  MaterialSnackbar.prototype.cssClasses_ = {\n    SNACKBAR: 'mdl-snackbar',\n    MESSAGE: 'mdl-snackbar__text',\n    ACTION: 'mdl-snackbar__action',\n    ACTIVE: 'mdl-snackbar--active'\n  }; /**\n      * Display the snackbar.\n      *\n      * @private\n      */\n\n  MaterialSnackbar.prototype.displaySnackbar_ = function () {\n    this.element_.setAttribute('aria-hidden', 'true');\n\n    if (this.actionHandler_) {\n      this.actionElement_.textContent = this.actionText_;\n      this.actionElement_.addEventListener('click', this.actionHandler_);\n      this.setActionHidden_(false);\n    }\n\n    this.textElement_.textContent = this.message_;\n    this.element_.classList.add(this.cssClasses_.ACTIVE);\n    this.element_.setAttribute('aria-hidden', 'false');\n    setTimeout(this.cleanup_.bind(this), this.timeout_);\n  }; /**\n      * Show the snackbar.\n      *\n      * @param {Object} data The data for the notification.\n      * @public\n      */\n\n  MaterialSnackbar.prototype.showSnackbar = function (data) {\n    if (data === undefined) {\n      throw new Error('Please provide a data object with at least a message to display.');\n    }\n\n    if (data['message'] === undefined) {\n      throw new Error('Please provide a message to be displayed.');\n    }\n\n    if (data['actionHandler'] && !data['actionText']) {\n      throw new Error('Please provide action text with the handler.');\n    }\n\n    if (this.active) {\n      this.queuedNotifications_.push(data);\n    } else {\n      this.active = true;\n      this.message_ = data['message'];\n\n      if (data['timeout']) {\n        this.timeout_ = data['timeout'];\n      } else {\n        this.timeout_ = 2750;\n      }\n\n      if (data['actionHandler']) {\n        this.actionHandler_ = data['actionHandler'];\n      }\n\n      if (data['actionText']) {\n        this.actionText_ = data['actionText'];\n      }\n\n      this.displaySnackbar_();\n    }\n  };\n\n  MaterialSnackbar.prototype['showSnackbar'] = MaterialSnackbar.prototype.showSnackbar; /**\n                                                                                         * Check if the queue has items within it.\n                                                                                         * If it does, display the next entry.\n                                                                                         *\n                                                                                         * @private\n                                                                                         */\n\n  MaterialSnackbar.prototype.checkQueue_ = function () {\n    if (this.queuedNotifications_.length > 0) {\n      this.showSnackbar(this.queuedNotifications_.shift());\n    }\n  }; /**\n      * Cleanup the snackbar event listeners and accessiblity attributes.\n      *\n      * @private\n      */\n\n  MaterialSnackbar.prototype.cleanup_ = function () {\n    this.element_.classList.remove(this.cssClasses_.ACTIVE);\n    setTimeout(function () {\n      this.element_.setAttribute('aria-hidden', 'true');\n      this.textElement_.textContent = '';\n\n      if (!Boolean(this.actionElement_.getAttribute('aria-hidden'))) {\n        this.setActionHidden_(true);\n        this.actionElement_.textContent = '';\n        this.actionElement_.removeEventListener('click', this.actionHandler_);\n      }\n\n      this.actionHandler_ = undefined;\n      this.message_ = undefined;\n      this.actionText_ = undefined;\n      this.active = false;\n      this.checkQueue_();\n    }.bind(this), /** @type {number} */this.Constant_.ANIMATION_LENGTH);\n  }; /**\n      * Set the action handler hidden state.\n      *\n      * @param {boolean} value\n      * @private\n      */\n\n  MaterialSnackbar.prototype.setActionHidden_ = function (value) {\n    if (value) {\n      this.actionElement_.setAttribute('aria-hidden', 'true');\n    } else {\n      this.actionElement_.removeAttribute('aria-hidden');\n    }\n  }; // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n\n\n  componentHandler.register({\n    constructor: MaterialSnackbar,\n    classAsString: 'MaterialSnackbar',\n    cssClass: 'mdl-js-snackbar',\n    widget: true\n  });\n})();","map":{"version":3,"sources":["packages/zodiase:mdl-assets/src/snackbar/snackbar.js"],"names":["MaterialSnackbar","element","element_","textElement_","querySelector","cssClasses_","MESSAGE","actionElement_","ACTION","Error","active","actionHandler_","undefined","message_","actionText_","queuedNotifications_","setActionHidden_","window","prototype","Constant_","ANIMATION_LENGTH","SNACKBAR","ACTIVE","displaySnackbar_","setAttribute","textContent","addEventListener","classList","add","setTimeout","cleanup_","bind","timeout_","showSnackbar","data","push","checkQueue_","length","shift","remove","Boolean","getAttribute","removeEventListener","value","removeAttribute","componentHandler","register","constructor","classAsString","cssClass","widget"],"mappings":"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","file":"packages/zodiase:mdl-assets/src/snackbar/snackbar.js.map","sourcesContent":["/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Snackbar MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialSnackbar = function MaterialSnackbar(element) {\n    this.element_ = element;\n    this.textElement_ = this.element_.querySelector('.' + this.cssClasses_.MESSAGE);\n    this.actionElement_ = this.element_.querySelector('.' + this.cssClasses_.ACTION);\n    if (!this.textElement_) {\n      throw new Error('There must be a message element for a snackbar.');\n    }\n    if (!this.actionElement_) {\n      throw new Error('There must be an action element for a snackbar.');\n    }\n    this.active = false;\n    this.actionHandler_ = undefined;\n    this.message_ = undefined;\n    this.actionText_ = undefined;\n    this.queuedNotifications_ = [];\n    this.setActionHidden_(true);\n  };\n  window['MaterialSnackbar'] = MaterialSnackbar;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialSnackbar.prototype.Constant_ = {\n    // The duration of the snackbar show/hide animation, in ms.\n    ANIMATION_LENGTH: 250\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialSnackbar.prototype.cssClasses_ = {\n    SNACKBAR: 'mdl-snackbar',\n    MESSAGE: 'mdl-snackbar__text',\n    ACTION: 'mdl-snackbar__action',\n    ACTIVE: 'mdl-snackbar--active'\n  };\n\n  /**\n   * Display the snackbar.\n   *\n   * @private\n   */\n  MaterialSnackbar.prototype.displaySnackbar_ = function() {\n    this.element_.setAttribute('aria-hidden', 'true');\n\n    if (this.actionHandler_) {\n      this.actionElement_.textContent = this.actionText_;\n      this.actionElement_.addEventListener('click', this.actionHandler_);\n      this.setActionHidden_(false);\n    }\n\n    this.textElement_.textContent = this.message_;\n    this.element_.classList.add(this.cssClasses_.ACTIVE);\n    this.element_.setAttribute('aria-hidden', 'false');\n    setTimeout(this.cleanup_.bind(this), this.timeout_);\n\n  };\n\n  /**\n   * Show the snackbar.\n   *\n   * @param {Object} data The data for the notification.\n   * @public\n   */\n  MaterialSnackbar.prototype.showSnackbar = function(data) {\n    if (data === undefined) {\n      throw new Error(\n        'Please provide a data object with at least a message to display.');\n    }\n    if (data['message'] === undefined) {\n      throw new Error('Please provide a message to be displayed.');\n    }\n    if (data['actionHandler'] && !data['actionText']) {\n      throw new Error('Please provide action text with the handler.');\n    }\n    if (this.active) {\n      this.queuedNotifications_.push(data);\n    } else {\n      this.active = true;\n      this.message_ = data['message'];\n      if (data['timeout']) {\n        this.timeout_ = data['timeout'];\n      } else {\n        this.timeout_ = 2750;\n      }\n      if (data['actionHandler']) {\n        this.actionHandler_ = data['actionHandler'];\n      }\n      if (data['actionText']) {\n        this.actionText_ = data['actionText'];\n      }\n      this.displaySnackbar_();\n    }\n  };\n  MaterialSnackbar.prototype['showSnackbar'] = MaterialSnackbar.prototype.showSnackbar;\n\n  /**\n   * Check if the queue has items within it.\n   * If it does, display the next entry.\n   *\n   * @private\n   */\n  MaterialSnackbar.prototype.checkQueue_ = function() {\n    if (this.queuedNotifications_.length > 0) {\n      this.showSnackbar(this.queuedNotifications_.shift());\n    }\n  };\n\n  /**\n   * Cleanup the snackbar event listeners and accessiblity attributes.\n   *\n   * @private\n   */\n  MaterialSnackbar.prototype.cleanup_ = function() {\n    this.element_.classList.remove(this.cssClasses_.ACTIVE);\n    setTimeout(function() {\n      this.element_.setAttribute('aria-hidden', 'true');\n      this.textElement_.textContent = '';\n      if (!Boolean(this.actionElement_.getAttribute('aria-hidden'))) {\n        this.setActionHidden_(true);\n        this.actionElement_.textContent = '';\n        this.actionElement_.removeEventListener('click', this.actionHandler_);\n      }\n      this.actionHandler_ = undefined;\n      this.message_ = undefined;\n      this.actionText_ = undefined;\n      this.active = false;\n      this.checkQueue_();\n    }.bind(this), /** @type {number} */ (this.Constant_.ANIMATION_LENGTH));\n  };\n\n  /**\n   * Set the action handler hidden state.\n   *\n   * @param {boolean} value\n   * @private\n   */\n  MaterialSnackbar.prototype.setActionHidden_ = function(value) {\n    if (value) {\n      this.actionElement_.setAttribute('aria-hidden', 'true');\n    } else {\n      this.actionElement_.removeAttribute('aria-hidden');\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialSnackbar,\n    classAsString: 'MaterialSnackbar',\n    cssClass: 'mdl-js-snackbar',\n    widget: true\n  });\n\n})();\n"]},"hash":"f37a135ec2fa004ebb6413cda52ec543e1fe4b2f"}
