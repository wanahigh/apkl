{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"packages/zodiase:mdl-assets/scripts/imports/getFiles.js","filenameRelative":"packages/zodiase:mdl-assets/scripts/imports/getFiles.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"useNativeAsyncAwait":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"packages/zodiase:mdl-assets/scripts/imports/getFiles.js.map","sourceFileName":"packages/zodiase:mdl-assets/scripts/imports/getFiles.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"getFiles"},"ignored":false,"code":"var fs = require(\"fs\");\n\nvar path = require(\"path\");\n\nfunction getFiles(destPath, extNames, recursive) {\n  var dirContents = fs.readdirSync(destPath);\n  var resultFiles = [];\n\n  var _filename, _fullpath, _filestat, _dirContents;\n\n  var __filename;\n\n  while (dirContents.length) {\n    _filename = dirContents.shift();\n    _fullpath = path.join(destPath, _filename);\n    _filestat = fs.statSync(_fullpath);\n\n    if (_filestat.isDirectory() && recursive) {\n      _dirContents = fs.readdirSync(_fullpath);\n\n      while (_dirContents.length) {\n        __filename = _dirContents.shift();\n        dirContents.push(path.join(_filename, __filename));\n      }\n    } else if (_filestat.isFile()) {\n      if (extNames.indexOf(path.extname(_filename)) > -1) {\n        resultFiles.push(_filename);\n      }\n    }\n  }\n\n  return resultFiles;\n}\n\ngetFiles.recursive = true;\ngetFiles.nonrecursive = false;\n\nif (require.main !== module) {\n  // Loaded by another script.\n  module.exports = getFiles;\n}","map":{"version":3,"sources":["packages/zodiase:mdl-assets/scripts/imports/getFiles.js"],"names":["fs","require","path","getFiles","destPath","extNames","recursive","dirContents","readdirSync","resultFiles","_filename","_fullpath","_filestat","_dirContents","__filename","length","shift","join","statSync","isDirectory","push","isFile","indexOf","extname","nonrecursive","main","module","exports"],"mappings":"AAAA,IAAIA,KAAKC,QAAQ,IAAR,CAAT;;AACA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;;AAEA,SAASE,QAAT,CAAkBC,QAAlB,EAA4BC,QAA5B,EAAsCC,SAAtC,EAAiD;AAC/C,MAAIC,cAAcP,GAAGQ,WAAH,CAAeJ,QAAf,CAAlB;AACA,MAAIK,cAAc,EAAlB;;AACA,MAAIC,SAAJ,EAAeC,SAAf,EAA0BC,SAA1B,EAAqCC,YAArC;;AACA,MAAIC,UAAJ;;AACA,SAAOP,YAAYQ,MAAnB,EAA2B;AACzBL,gBAAYH,YAAYS,KAAZ,EAAZ;AACAL,gBAAYT,KAAKe,IAAL,CAAUb,QAAV,EAAoBM,SAApB,CAAZ;AACAE,gBAAYZ,GAAGkB,QAAH,CAAYP,SAAZ,CAAZ;;AACA,QAAIC,UAAUO,WAAV,MAA2Bb,SAA/B,EAA0C;AACxCO,qBAAeb,GAAGQ,WAAH,CAAeG,SAAf,CAAf;;AACA,aAAOE,aAAaE,MAApB,EAA4B;AAC1BD,qBAAaD,aAAaG,KAAb,EAAb;AACAT,oBAAYa,IAAZ,CAAiBlB,KAAKe,IAAL,CAAUP,SAAV,EAAqBI,UAArB,CAAjB;AACD;AACF,KAND,MAMO,IAAIF,UAAUS,MAAV,EAAJ,EAAwB;AAC7B,UAAIhB,SAASiB,OAAT,CAAiBpB,KAAKqB,OAAL,CAAab,SAAb,CAAjB,IAA4C,CAAC,CAAjD,EAAoD;AAClDD,oBAAYW,IAAZ,CAAiBV,SAAjB;AACD;AACF;AACF;;AACD,SAAOD,WAAP;AACD;;AACDN,SAASG,SAAT,GAAqB,IAArB;AACAH,SAASqB,YAAT,GAAwB,KAAxB;;AAEA,IAAIvB,QAAQwB,IAAR,KAAiBC,MAArB,EAA6B;AAC3B;AACAA,SAAOC,OAAP,GAAiBxB,QAAjB;AACD","file":"packages/zodiase:mdl-assets/scripts/imports/getFiles.js.map","sourcesContent":["var fs = require(\"fs\");\nvar path = require(\"path\");\n\nfunction getFiles(destPath, extNames, recursive) {\n  var dirContents = fs.readdirSync(destPath);\n  var resultFiles = [];\n  var _filename, _fullpath, _filestat, _dirContents;\n  var __filename;\n  while (dirContents.length) {\n    _filename = dirContents.shift();\n    _fullpath = path.join(destPath, _filename);\n    _filestat = fs.statSync(_fullpath);\n    if (_filestat.isDirectory() && recursive) {\n      _dirContents = fs.readdirSync(_fullpath);\n      while (_dirContents.length) {\n        __filename = _dirContents.shift();\n        dirContents.push(path.join(_filename, __filename));\n      }\n    } else if (_filestat.isFile()) {\n      if (extNames.indexOf(path.extname(_filename)) > -1) {\n        resultFiles.push(_filename);\n      }\n    }\n  }\n  return resultFiles;\n}\ngetFiles.recursive = true;\ngetFiles.nonrecursive = false;\n\nif (require.main !== module) {\n  // Loaded by another script.\n  module.exports = getFiles;\n}\n"]},"hash":"f7858b5d56142d67e540623d536cfbf1508ccf0f"}
