{"head":"","body":"","js":"\nTemplate.__checkName(\"tuto\");\nTemplate[\"tuto\"] = new Template(\"Template.tuto\", (function() {\n  var view = this;\n  return [ HTML.Raw('<div class=\"row\">\\n        <div class=\"col s12\">\\n            <ul class=\"tabs\">\\n                <li class=\"tab col s3\"><a href=\"#test1\">Pourquoi et comment : le vpn</a></li>\\n                <li class=\"tab col s3\"><a class=\"active\" href=\"#test2\">L\\'installation</a></li>\\n                <li class=\"tab col s3\"><a href=\"#test3\">Configurer son par feu</a></li>\\n                <li class=\"tab col s3\"><a href=\"#test4\">A voir aussi</a></li>\\n            </ul>\\n        </div>\\n        <div id=\"test1\" class=\"col s12\"><h1>Pourquoi et Comment installer un VPN?</h1>\\n           <p>Nous allons vous expliquer comment installer un client VPN sur votre ordinateur. D’abord il est impératif de savoir quel est le but de cette installation, pourquoi vous voulez un VPN. Le VPN est initialement utilisé par les services informatiques des sociétés afin de permettre au personnel de l’entreprise  de pouvoir se connecter en toute sécurité au réseau de la société. VPN veut dire « Virtual Private Network » réseau privé virtuel, en français. La sécurité des systèmes VPN se base sur la création d’un tunnel informatique appelé le tunneling. C’est dans ce tunnel que passent toutes les données. Ce tunnel a la particularité de chiffrer (crypter) les données en 256 bits pour les VPN les plus performants. Comme ça, dans le cas où un pirate arrive à intercepter les données, elles seront indéchiffrables. Les données sont visibles que quand elles arrivent à destinations, c’est à dire qu’il y a que l’utilisateur d’un VPN ou le destinataire des données qui pourront y accéder pendant le transfert. Une fois arrivé à destination elles redeviennent des données normales. La sécurité contre le vol d’information est vraiment optimale lors du transfert par le biais d’internet.</p>\\n\\n\\n        </div>\\n        <div id=\"test2\" class=\"col s12\">\\n            <h1>VPN : Comment l’installer</h1>\\n            <p>Pour les particuliers l’installation est très simple. En vous rendant sur le site d’un fournisseur VPN, il suffit de vous inscrire et d’installer le logiciel. Le logiciel est très simple à installer. Généralement elle se fait en quelques clics sans connaissances informatique particulières. Dès que le logiciel est installé, vous devez le lancer en cliquant sur un éventuel raccourci créé sur votre bureau. Ensuite c’est vous qui faite le choix du serveur représenté  par un pays. Si vous voulez être anonyme en vous faisant passer pour un internaute canadien, il suffit simplement de choisir un serveur canadien et au passage nous vous rappelons que tous les sites canadiens seront débloqués de chez vous ou d’ailleurs n’importe quelle connexion internet suffit. Un minimum de débit est recommandé si vous voulez faire du streaming. En un seul clic vous pourrez changer de serveur, tous dépend bien évidement des services proposés par le fournisseur VPN.</p>\\n\\n        </div>\\n        <div id=\"test3\" class=\"col s12\">\\n            <h1>Iptables</h1>\\n               <p> Iptables est une interface en ligne de commande permettant de configurer Netfilter. En plus de Iptables, depuis la version 8.04, Ubuntu est installé avec la surcouche UFW qui permet de contrôler simplement Netfilter, UFW est toutefois moins complet que iptables.\\n\\n                Cette documentation est une introduction à Iptables, elle est destinée à ceux qui souhaitent mettre en place un pare-feu et/ou un partage de connexion, sur une machine Linux, sans passer par une interface graphique. Seule la table par défaut (Filter) d\\'Iptables est présenté ici et seules les chaînes utilisées par Filter (Input, Forward et Output) y sont exposées.\\n\\n                Les lecteurs désirant approfondir leur recherche et aborder l\\'utilisation des autres tables (Nat, Mangle, Row et Security) ainsi que des chaînes non utilisables par Filter (Prerouting et Postrouting) se tourneront vers les nombreuses documentations disponibles sur l\\'Internet (voir notamment ici). Ceux désirant configurer un pare-feu par l\\'intermédiaire d\\'une interface graphique se tourneront vers Gufw ou encore vers Shorewall pour une utilisation sur serveur.\\n\\n                iptables existe aussi pour ipv6, pour cela il suffit d\\'utiliser la commande ip6tables au lieu de iptables.\\n\\n                Pour une bonne compréhension d\\'Iptables (et des pare-feux en général) il est conseillé d\\'avoir des notions en réseaux informatiques, au minima connaître le principe de fonctionnement des protocoles TCP et UDP.</p>\\n\\n            <h1>Configuration du pare-feu</h1>\\n            <p>Nous allons configurer notre pare-feu de la manière suivante :\\n\\n                On bloque tout le trafic entrant par défaut.\\n                On autorise au cas par cas : le trafic appartenant ou lié à des connexions déjà établies et le trafic à destination des serveurs (web, ssh, etc.) que nous souhaitons mettre à disposition.\\n                Afin de ne pas avoir de problème au moment où on crée ces règles, nous allons d\\'abord créer les autorisations, puis nous enverrons le reste en enfer.\\n\\n                En tapant « sudo iptables -L », une liste de vos règles actuelles est affichée. Si vous (ou un logiciel) n\\'avez encore jamais touché à iptables, les chaines sont vides, et vous devriez voir :</p>\\n\\n\\n                <div style=\"color:greenyellow\" class=\"col s4 flex card-panel hoverable black\">\\n                <p>Chain INPUT (policy ACCEPT)</p>\\n                <p>target    prot opt source             destination</p>\\n                </div>\\n                <div style=\"color:greenyellow\" class=\"col s4 flex card-panel hoverable black\">\\n                <p>Chain FORWARD (policy ACCEPT)</p>\\n                <p>target     prot opt source               destination</p>\\n                </div>\\n                <div style=\"color:greenyellow\" class=\"col s4 flex card-panel hoverable black\">\\n                <p>Chain OUTPUT (policy ACCEPT)</p>\\n                <p>target     prot opt source               destination</p>\\n            </div>\\n\\n            <p>Pour l\\'instant, tout passe dans toutes les directions (policy ACCEPT). Pour cette configuration basique, seul le trafic entrant (chaine input) nous intéresse.\\n\\n                Par défaut, « sudo iptables -L » n\\'affiche que la table \"filter\". Pour consulter les autres tables, vous devez ajouter l\\'option -t suivie de \"nat\", \"mangle\" ou \"raw\". Pour la configuration d\\'un pare-feu la table \"filter\" est toutefois la seule nécessaire.</p>\\n\\n                <div style=\"color:white;\" class=\"col s12 card-panel hoverable red\">\\n                    <i class=\"material-icons\">vpn_key</i>ATTENTION, si vous avez modifié la règle par défaut pour le blocage (iptables -P INPUT DROP voir plus bas) et que vous tapez iptables -F vous bloquerez tous les accès … y compris celui en cours. Ceci est particulièrement problématique sur une machine sur laquelle vous accédez à distance (serveur etc.).\\n                </div>\\n\\n                <p>Si vous avez déjà modifié la configuration et que vous voulez la réinitialiser, tapez :</p>\\n            <div class=\"col s12 flex card-panel hoverable black\">\\n                <p style=\"color:greenyellow\"># sudo iptables -F</p>\\n                <p style=\"color:greenyellow\"># sudo iptables -X</p>\\n            </div>\\n\\n            <h3>Autoriser le trafic entrant d\\'une connexion déjà établie</h3>\\n            <p>Pour permettre à une connexion déjà ouverte de recevoir du trafic :</p>\\n\\n            <div class=\"col s12 flex card-panel hoverable black\">\\n                <p style=\"color:greenyellow\"># iptables -A INPUT -m conntrack --ctstate ESTABLISHED -j ACCEPT</p>\\n            </div>\\n\\n                <p>Si vous utilisez une ancienne version de iptables la commande ci-dessus peut ne pas fonctionner, dans ce cas utilisez celle-ci :</p>\\n\\n            <div class=\"col s12 flex card-panel hoverable black\">\\n                <p style=\"color:greenyellow\"># iptables -A INPUT -m state --state ESTABLISHED -j ACCEPT</p>\\n            </div>\\n\\n                <div style=\"color:white;\" class=\"col s12 red hoverable\"> <i class=\"material-icons\">vpn_key</i>Une ancienne configuration avec l\\'état \"–state RELATED\" est toujours sur internet, or cette option peut permettre l\\'ouverture de port non désirée sur votre machine par un attaquant. L\\'option \"RELATED\" est à utiliser avec prudence. Pour plus d\\'information : https://gist.github.com/azlux/6a70bd38bb7c525ab26efe7e3a7ea8ac</div>\\n\\n\\n                <h3>Permettre le trafic entrant sur un port spécifique</h3>\\n\\n                <p>Pour permettre le trafic entrant sur le port 22 (traditionnellement utilisé par SSH, vous devrez indiquer à iptables tout le trafic TCP sur le port 22 de votre adaptateur réseau.</p>\\n\\n\\n            <div class=\"col s12 flex card-panel hoverable black\">\\n                <p style=\"color:greenyellow\"># iptables -A INPUT -p tcp -i eth0 --dport ssh -j ACCEPT</p>\\n            </div>\\n\\n            <p>Cette commande ajoute une règle (-A) à la chaine contrôlant le trafic entrant INPUT, pour autoriser le trafic (-j ACCEPT), vers l\\'interface (-i) eth0 et à destination du port (--dport) SSH (on aurait pu mettre 22).\\n\\n                Maintenant vous pouvez vérifier vos règles iptables :</p>\\n\\n            <div class=\"col s12 flex card-panel hoverable black\">\\n                <p style=\"color:greenyellow\"># iptables -L</p>\\n                <p style=\"color:greenyellow\">Chain INPUT (policy ACCEPT)</p>\\n                <p style=\"color:greenyellow\">target     prot opt source               destination  </p>\\n                <p style=\"color:greenyellow\">ACCEPT     all  --  anywhere             anywhere            state RELATED,ESTABLISHED</p>\\n                <p style=\"color:greenyellow\">ACCEPT     tcp  --  anywhere             anywhere            tcp dpt:ssh</p>\\n            </div>\\n\\n            <p>Maintenant, acceptons tout le trafic web (www) entrant :</p>\\n\\n            <div class=\"col s12 flex card-panel hoverable black\">\\n                <p style=\"color:greenyellow\"> # iptables -A INPUT -p tcp -i eth0 --dport 80 -j ACCEPT</p>\\n            </div>\\n\\n            <p>En regardant nos règles, nous avons :</p>\\n\\n            <div class=\"col s12 flex card-panel hoverable black\">\\n                <p style=\"color:greenyellow\"># iptables -L</p>\\n                <p style=\"color:greenyellow\">Chain INPUT (policy ACCEPT)</p>\\n                <p style=\"color:greenyellow\">  target     prot opt source               destination</p>\\n                <p style=\"color:greenyellow\">ACCEPT     all  --  anywhere             anywhere            state RELATED,ESTABLISHED</p>\\n                <p style=\"color:greenyellow\">     ACCEPT     tcp  --  anywhere             anywhere            tcp dpt:ssh</p>\\n                <p style=\"color:greenyellow\">            ACCEPT     tcp  --  anywhere             anywhere            tcp dpt:www\\n                </p>\\n            </div>\\n\\n            <p>Nous avons exceptionnellement autorisé le trafic tcp pour ssh et les ports web, mais comme nous n\\'avons rien bloqué, tout le trafic passe quand même.</p>\\n\\n            <h3>Bloquer le trafic</h3>\\n\\n            <p>Maintenant que nous avons fini avec les autorisations, il faut maintenant bloquer le reste. Nous allons en fait modifier la « politique par défaut » (policy) de la chaine INPUT : cette décision (DROP) s\\'applique lorsqu\\'aucune règle n\\'a été appliquée à un paquet. Donc, si la tentative de connexion n\\'est permise par aucune des règles précédentes, elle sera rejetée.</p>\\n\\n            <div class=\"col s12 flex card-panel hoverable black\">\\n                <p style=\"color:greenyellow\"> # iptables -P INPUT DROP #warning : a ne pas utiliser sur un serveur distant !</p>\\n                <p style=\"color:greenyellow\"> # iptables -L</p>\\n                <p style=\"color:greenyellow\">target     prot opt source               destination</p>\\n                <p style=\"color:greenyellow\">ACCEPT     all  --  anywhere             anywhere            state RELATED,ESTABLISHED</p>\\n                <p style=\"color:greenyellow\">ACCEPT     tcp  --  anywhere             anywhere            tcp dpt:ssh</p>\\n                <p style=\"color:greenyellow\">ACCEPT     tcp  --  anywhere             anywhere            tcp dpt:www</p>\\n            </div>\\n\\n            <strong>Un autre moyen de procéder</strong><p>est l\\'ajout en fin de chaine d\\'une règle supprimant les paquets (les paquets autorisés par les règles précédentes n\\'atteindraient pas celle-ci), via iptables -A INPUT -j DROP, mais il faudrait alors faire attention à la position des futures règles.</p>\\n\\n\\n            <h3>Autoriser le trafic local</h3>\\n\\n            <p>Un p\\'tit problème de notre configuration est que même l\\'interface locale (loopback) est bloquée. Nous pourrions avoir écrit les règles de rejet seulement pour eth0 en spécifiant -i eth0, mais nous pouvons aussi ajouter une règle pour loopback. Par exemple, nous pourrions l\\'insérer en 2e position :\\n\\n            </p>\\n\\n            <div class=\"col s12 flex card-panel hoverable black\">\\n                <p style=\"color:greenyellow\"># iptables -I INPUT 2 -i lo -j ACCEPT</p>\\n            </div>\\n\\n            <p>Pour lister les règles plus en détail.</p>\\n\\n\\n            <div class=\"col s12 flex card-panel hoverable black\">\\n                <p style=\"color:greenyellow\"> # iptables -L -v -n   </p>\\n            </div>\\n\\n\\n           <h3>Autoriser les requêtes ICMP (ping)</h3>\\n            <p>Il peut-être utile de valider les réponses aux requêtes \"ping\", ne serait-ce que pour s\\'assurer que le poste est toujours en activité.</p>\\n\\n\\n             <div class=\"col s12 flex card-panel hoverable black\">\\n                 <p style=\"color:greenyellow\"> # On autorise le PC a faire des pings sur des IP externes et à répondre aux requêtes \"ping\" </p>\\n                 <p style=\"color:greenyellow\"> iptables -A OUTPUT -p icmp -m conntrack --ctstate NEW,ESTABLISHED,RELATED -j ACCEPT </p>\\n                 <p style=\"color:greenyellow\"># Si vous utilisez une ancienne version de iptables la commande ci-dessus peut ne pas fonctionner, dans ce cas entrez la commande suivante : </p>\\n                 <p style=\"color:greenyellow\">iptables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT     </p>\\n                 <p style=\"color:greenyellow\"># On autorise les pings </p>\\n             </div>\\n\\n\\n                <h3>Supprimer une règle</h3>\\n            <p>Si vous vous êtes trompé dans la création d\\'une règle et que cela vous bloque une connexion, vous pouvez supprimer une seule entrée plutôt que de tout réinitialise\\n\\n                Tout d\\'abord vous listez l\\'ensemble de vos régles avec l\\'affichage des lignes :</p>\\n\\n\\n                       <div class=\"col s12 flex card-panel hoverable black\">\\n                           <p style=\"color:greenyellow\">iptables -L --line-numbers</p>\\n\\n\\n                    <p>Ce qui personnellement me retourne :</p>\\n                       </div>\\n            <div class=\"col s12 flex card-panel hoverable black\">\\n            <p style=\"color:greenyellow\">Chain INPUT (policy DROP)                                                            </p>\\n            <p style=\"color:greenyellow\">num  target     prot opt source               destination                            </p>\\n            <p style=\"color:greenyellow\">1    DROP       icmp --  anywhere             anywhere                               </p>\\n            <p style=\"color:greenyellow\">2    ACCEPT     tcp  --  anywhere             anywhere            tcp dpt:ssh        </p>\\n            <p style=\"color:greenyellow\">3    ACCEPT     tcp  --  anywhere             anywhere            tcp dpt:www        </p>\\n            <p style=\"color:greenyellow\">4    ACCEPT     tcp  --  anywhere             anywhere            tcp dpt:webmin     </p>\\n            <p style=\"color:greenyellow\">Chain FORWARD (policy ACCEPT)                                                        </p>\\n            <p style=\"color:greenyellow\">num  target     prot opt source               destination                            </p>\\n            <p style=\"color:greenyellow\">Chain OUTPUT (policy ACCEPT)                                                         </p>\\n            <p style=\"color:greenyellow\">num  target     prot opt source               destination                            </p>\\n            <p style=\"color:greenyellow\">1    ACCEPT     tcp  --  anywhere             anywhere            tcp spt:www        </p>\\n            <p style=\"color:greenyellow\">2    ACCEPT     tcp  --  anywhere             anywhere            tcp spt:12345      </p>\\n                      </div>\\n\\n            <p>Je souhaite supprimer la ligne 2 de la chaîne OUTPUT Syntaxe : iptables -D chaine numéro_de_ligne </p>\\n\\n\\n             <div class=\"col s12 flex card-panel hoverable black\">\\n                 <p style=\"color:greenyellow\">iptables -D OUTPUT 2</p>\\n             </div>\\n\\n\\n\\n\\n            <h3>Sauvegarder vos règles</h3>\\n\\n            <p>Passer en mode superutilisateur</p>\\n                   <div class=\"col s12 flex card-panel hoverable black\">\\n                       <p style=\"color:greenyellow\"> sudo -s iptables-save -c</p>\\n                   </div>\\n\\n\\n\\n\\n              <h2>Script iptables e.g</h2>\\n\\n              <div class=\"col s12 flex card-panel hoverable black\">\\n              <p style=\"color:greenyellow\"> #!/bin/bash                                                                </p>\\n              <p style=\"color:greenyellow\">                                                                            </p>\\n              <p style=\"color:greenyellow\"> ## Script iptables by BeAvEr.                                              </p>\\n              <p style=\"color:greenyellow\">                                                                            </p>\\n              <p style=\"color:greenyellow\"> ## Règles iptables.                                                        </p>\\n              <p style=\"color:greenyellow\">                                                                            </p>\\n              <p style=\"color:greenyellow\"> ## On flush iptables.                                                      </p>\\n              <p style=\"color:greenyellow\">                                                                            </p>\\n              <p style=\"color:greenyellow\"> iptables -F                                                                </p>\\n              <p style=\"color:greenyellow\">                                                                            </p>\\n              <p style=\"color:greenyellow\"> ## On supprime toutes les chaînes utilisateurs.                            </p>\\n              <p style=\"color:greenyellow\">                                                                            </p>\\n              <p style=\"color:greenyellow\"> iptables -X                                                                </p>\\n              <p style=\"color:greenyellow\">                                                                            </p>\\n              <p style=\"color:greenyellow\"> ## On drop tout le trafic entrant.                                         </p>\\n              <p style=\"color:greenyellow\">                                                                            </p>\\n              <p style=\"color:greenyellow\"> iptables -P INPUT DROP                                                     </p>\\n              <p style=\"color:greenyellow\">                                                                            </p>\\n              <p style=\"color:greenyellow\"> ## On drop tout le trafic sortant.                                         </p>\\n              <p style=\"color:greenyellow\">                                                                            </p>\\n              <p style=\"color:greenyellow\"> iptables -P OUTPUT DROP                                                    </p>\\n              <p style=\"color:greenyellow\">                                                                            </p>\\n              <p style=\"color:greenyellow\"> ## On drop le forward.                                                     </p>\\n              <p style=\"color:greenyellow\">                                                                            </p>\\n              <p style=\"color:greenyellow\"> iptables -P FORWARD DROP                                                   </p>\\n              <p style=\"color:greenyellow\">                                                                            </p>\\n              <p style=\"color:greenyellow\"> ## On drop les scans XMAS et NULL.                                         </p>\\n              <p style=\"color:greenyellow\">                                                                            </p>\\n              <p style=\"color:greenyellow\"> iptables -A INPUT -p tcp --tcp-flags FIN,URG,PSH FIN,URG,PSH -j DROP       </p>\\n              <p style=\"color:greenyellow\">                                                                            </p>\\n              <p style=\"color:greenyellow\"> iptables -A INPUT -p tcp --tcp-flags ALL ALL -j DROP                       </p>\\n              <p style=\"color:greenyellow\">                                                                            </p>\\n              <p style=\"color:greenyellow\"> iptables -A INPUT -p tcp --tcp-flags ALL NONE -j DROP                      </p>\\n              <p style=\"color:greenyellow\">                                                                            </p>\\n              <p style=\"color:greenyellow\"> iptables -A INPUT -p tcp --tcp-flags SYN,RST SYN,RST -j DROP               </p>\\n              <p style=\"color:greenyellow\">                                                                            </p>\\n              <p style=\"color:greenyellow\"> ## Dropper silencieusement tous les paquets broadcastés.                   </p>\\n              <p style=\"color:greenyellow\">                                                                            </p>\\n              <p style=\"color:greenyellow\"> iptables -A INPUT -m pkttype --pkt-type broadcast -j DROP                  </p>\\n              <p style=\"color:greenyellow\">                                                                            </p>\\n              <p style=\"color:greenyellow\"> ## Permettre à une connexion ouverte de recevoir du trafic en entrée.      </p>\\n              <p style=\"color:greenyellow\">                                                                            </p>\\n                        </div>\\n        </div>\\n\\n        <div id=\"test4\" class=\"col s12\">Test 4</div>\\n    </div>\\n\\n\\n    '), HTML.SCRIPT(\"\\n        $(document).ready(function(){\\n            $('ul.tabs').tabs();\\n        });\\n\\n    \") ];\n}));\n","bodyAttrs":{}}